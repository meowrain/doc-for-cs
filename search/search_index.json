{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u672c\u6587\u6863\u8fd8\u5728\u66f4\u65b0\u4e2d\uff0c\u9700\u8981\u5927\u5bb6\u7684pr\uff01\u2764\ufe0f \u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e2a\u6587\u6863 # \u6211\u5199\u8fd9\u4efd\u8ba1\u7b97\u673a\u5b66\u4e60\u6307\u5357\u7684\u4e3b\u8981\u52a8\u673a\u662f\u5e2e\u52a9\u66f4\u591a\u7684\u4eba\u4ece\u5bb9\u5730\u8e0f\u5165\u8ba1\u7b97\u673a\u5b66\u4e60\u7684\u4e16\u754c\uff0c\u8ba9\u4ed6\u4eec\u80fd\u591f\u5feb\u901f\u4e0a\u624b\uff0c\u5e76\u5efa\u7acb\u575a\u5b9e\u7684\u5b66\u4e60\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u5b66\u4e60\u4f5c\u4e3a\u4e00\u95e8\u8fc5\u901f\u53d1\u5c55\u7684\u9886\u57df\uff0c\u6db5\u76d6\u5e7f\u6cdb\u7684\u4e3b\u9898\u548c\u6280\u672f\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u53ef\u80fd\u6709\u4e9b\u4ee4\u4eba\u671b\u800c\u5374\u6b65\u3002\u56e0\u6b64\uff0c\u6211\u5e0c\u671b\u901a\u8fc7\u8fd9\u4efd\u6307\u5357\uff0c\u80fd\u591f\u4e3a\u90a3\u4e9b\u5bf9\u8ba1\u7b97\u673a\u5b66\u4e60\u611f\u5174\u8da3\u4f46\u4e0d\u77e5\u9053\u5982\u4f55\u5165\u95e8\u7684\u4eba\u63d0\u4f9b\u4e00\u6761\u6e05\u6670\u7684\u5b66\u4e60\u8def\u5f84\u548c\u6709\u6548\u7684\u5b66\u4e60\u65b9\u6cd5\u3002","title":"Home"},{"location":"#\u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e2a\u6587\u6863","text":"\u6211\u5199\u8fd9\u4efd\u8ba1\u7b97\u673a\u5b66\u4e60\u6307\u5357\u7684\u4e3b\u8981\u52a8\u673a\u662f\u5e2e\u52a9\u66f4\u591a\u7684\u4eba\u4ece\u5bb9\u5730\u8e0f\u5165\u8ba1\u7b97\u673a\u5b66\u4e60\u7684\u4e16\u754c\uff0c\u8ba9\u4ed6\u4eec\u80fd\u591f\u5feb\u901f\u4e0a\u624b\uff0c\u5e76\u5efa\u7acb\u575a\u5b9e\u7684\u5b66\u4e60\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u5b66\u4e60\u4f5c\u4e3a\u4e00\u95e8\u8fc5\u901f\u53d1\u5c55\u7684\u9886\u57df\uff0c\u6db5\u76d6\u5e7f\u6cdb\u7684\u4e3b\u9898\u548c\u6280\u672f\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u53ef\u80fd\u6709\u4e9b\u4ee4\u4eba\u671b\u800c\u5374\u6b65\u3002\u56e0\u6b64\uff0c\u6211\u5e0c\u671b\u901a\u8fc7\u8fd9\u4efd\u6307\u5357\uff0c\u80fd\u591f\u4e3a\u90a3\u4e9b\u5bf9\u8ba1\u7b97\u673a\u5b66\u4e60\u611f\u5174\u8da3\u4f46\u4e0d\u77e5\u9053\u5982\u4f55\u5165\u95e8\u7684\u4eba\u63d0\u4f9b\u4e00\u6761\u6e05\u6670\u7684\u5b66\u4e60\u8def\u5f84\u548c\u6709\u6548\u7684\u5b66\u4e60\u65b9\u6cd5\u3002","title":"\u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e2a\u6587\u6863"},{"location":"Blogs/meowrain/","text":"Hi there \ud83d\udc4b,I'm MeowRain.From SXAU. # About # \u5927\u5bb6\u597d\uff0c\u6211\u662fMeowRain \u2764\ufe0f(\u25cf'\u25e1'\u25cf)\u4eca\u5e7420\u5c81\u4e86\uff0c\u8bfb\u5927\u4e00\u3002 \u70ed\u7231\u5f00\u6e90\uff01 \u76ee\u524d\u638c\u63e1javascript,typescript,python,c/c++,java,dart\u7b49\u591a\u95e8\u8bed\u8a00\u7684helloworld\u7684\u7f16\u5199\uff01 \u68a6\u60f3\u7740\u6210\u4e3a\u4e00\u4e2a\u548c\u68d2\u7684\u7a0b\u5e8f\u733f(\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648\u2727\uff0c\u5728\u4e3a\u81ea\u5df1\u7684\u76ee\u6807\u52aa\u529b\u7740\uff01\uff01 Learning Front-end # \u76ee\u524d\u6b63\u5728\u5b66\u4e60web\u524d\u7aef\u6280\u672f IDE&Editor # \ud83d\udcbbSystem-using # \u73b0\u5728\u4e3b\u8981\u4f7f\u7528Fedora Links # \u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff01 Meowrain's Blog Stats # Languages #","title":"Index"},{"location":"Blogs/meowrain/#hi-there-im-meowrainfrom-sxau","text":"","title":"Hi there \ud83d\udc4b,I'm MeowRain.From SXAU."},{"location":"Blogs/meowrain/#about","text":"\u5927\u5bb6\u597d\uff0c\u6211\u662fMeowRain \u2764\ufe0f(\u25cf'\u25e1'\u25cf)\u4eca\u5e7420\u5c81\u4e86\uff0c\u8bfb\u5927\u4e00\u3002 \u70ed\u7231\u5f00\u6e90\uff01 \u76ee\u524d\u638c\u63e1javascript,typescript,python,c/c++,java,dart\u7b49\u591a\u95e8\u8bed\u8a00\u7684helloworld\u7684\u7f16\u5199\uff01 \u68a6\u60f3\u7740\u6210\u4e3a\u4e00\u4e2a\u548c\u68d2\u7684\u7a0b\u5e8f\u733f(\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648\u2727\uff0c\u5728\u4e3a\u81ea\u5df1\u7684\u76ee\u6807\u52aa\u529b\u7740\uff01\uff01","title":"About"},{"location":"Blogs/meowrain/#learning-front-end","text":"\u76ee\u524d\u6b63\u5728\u5b66\u4e60web\u524d\u7aef\u6280\u672f","title":"Learning Front-end"},{"location":"Blogs/meowrain/#ideeditor","text":"","title":"IDE&amp;Editor"},{"location":"Blogs/meowrain/#system-using","text":"\u73b0\u5728\u4e3b\u8981\u4f7f\u7528Fedora","title":"\ud83d\udcbbSystem-using"},{"location":"Blogs/meowrain/#links","text":"\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff01 Meowrain's Blog","title":"Links"},{"location":"Blogs/meowrain/#stats","text":"","title":"Stats"},{"location":"Blogs/meowrain/#languages","text":"","title":"Languages"},{"location":"Blogs/meowrain/c%2B%2B/XOR%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/","text":"XOR\u52a0\u5bc6\u7b97\u6cd5c++\u52a0\u5bc6\u6587\u4ef6\u5185\u5bb9 # \u4ec0\u4e48\u662fXOR\u52a0\u5bc6\u7b97\u6cd5 # XOR\uff08\u5f02\u6216\uff09\u662f\u4e00\u79cd\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u76f8\u540c\u5219\u8fd4\u56de 0\uff0c\u5426\u5219\u8fd4\u56de 1\u3002\u5728\u52a0\u5bc6\u4e2d\uff0cXOR \u7b97\u6cd5\u901a\u5e38\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6\u3002 XOR \u7b97\u6cd5\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5bc6\u94a5\uff08\u4e5f\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff09\uff0c\u5bf9\u9700\u8981\u52a0\u5bc6\u6216\u89e3\u5bc6\u7684\u6570\u636e\u8fdb\u884c\u9010\u4f4d\u5f02\u6216\u8fd0\u7b97\u5373\u53ef\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u636e\u548c\u4e00\u4e2a\u5bc6\u94a5\uff0cXOR \u7b97\u6cd5\u4f1a\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e0e\u5bc6\u94a5\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u4f4d\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u4e8c\u8fdb\u5236\u6570\u4f5c\u4e3a\u52a0\u5bc6\u6216\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u9700\u8981\u5c06\u4e8c\u8fdb\u5236\u6570 0110 \u8fdb\u884c\u52a0\u5bc6\uff0c\u4f7f\u7528\u5bc6\u94a5 1011 \u8fdb\u884c\u52a0\u5bc6\u3002\u5219\u52a0\u5bc6\u8fc7\u7a0b\u5982\u4e0b\uff1a 0110 XOR 1011 ----- 1101 \u56e0\u6b64\uff0c\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u4e3a 1101\u3002 \u540c\u6837\u7684\uff0c\u5982\u679c\u60f3\u8981\u5bf9\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u89e3\u5bc6\uff0c\u53ea\u9700\u8981\u518d\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u5bf9\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u5bc6\u94a5 1011 \u5bf9\u52a0\u5bc6\u540e\u7684\u7ed3\u679c 1101 \u8fdb\u884c\u89e3\u5bc6\uff1a ```asciidoc 1101 XOR 1011 ----- 0110 \u56e0\u6b64\uff0c\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u4e3a 0110\uff0c\u4e0e\u539f\u59cb\u6570\u636e\u76f8\u540c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cXOR \u7b97\u6cd5\u7684\u5b89\u5168\u6027\u8f83\u4f4e\uff0c\u5bb9\u6613\u88ab\u7834\u89e3\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u9700\u8981\u4f7f\u7528\u66f4\u52a0\u5b89\u5168\u7684\u52a0\u5bc6\u7b97\u6cd5\u6765\u4fdd\u62a4\u6570\u636e\u7684\u5b89\u5168\u3002 \u52a0\u5bc6\u4ee3\u7801 # #include <iostream> #include <string> #include <fstream> #include <iterator> std :: string encryptString ( const std :: string & input , const std :: string & key ) { std :: string output ; for ( size_t i = 0 ; i < input . size (); i ++ ) { output += input [ i ] ^ key [ i % key . size ()]; } return output ; } int main () { std :: string input_file_name = \"input.txt\" ; std :: string output_file_name = \"output.txt\" ; std :: string key = \"mysecretkey\" ; std :: ifstream input_file ( input_file_name ); if ( ! input_file . is_open ()) { std :: cerr << \"Error: Failed to open input file.\" << std :: endl ; return 1 ; } std :: string input (( std :: istreambuf_iterator < char > ( input_file )), std :: istreambuf_iterator < char > ()); input_file . close (); std :: string encrypted = encryptString ( input , key ); std :: ofstream output_file ( output_file_name ); if ( ! output_file . is_open ()) { std :: cerr << \"Error: Failed to open output file.\" << std :: endl ; return 1 ; } output_file << encrypted ; output_file . close (); return 0 ; } \u89e3\u5bc6\u4ee3\u7801 # #include <iostream> #include <string> #include <fstream> #include <iterator> std :: string encryptString ( const std :: string & input , const std :: string & key ) { std :: string output ; for ( size_t i = 0 ; i < input . size (); i ++ ) { output += input [ i ] ^ key [ i % key . size ()]; } return output ; } std :: string decryptString ( const std :: string & input , const std :: string & key ) { return encryptString ( input , key ); } int main ( int argc , char * argv []) { std :: string input = argv [ 1 ]; //\u7b2c\u4e00\u4e2a\u53c2\u6570\u63a5\u6536\u6587\u4ef6\u4f4d\u7f6e std :: string key = argv [ 2 ]; //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u6536key std :: ifstream input_file ( input ); if ( ! input_file . is_open ()) { std :: cerr << \"Error: Failed to open input file.\" << std :: endl ; return 1 ; } std :: string encrypted (( std :: istreambuf_iterator < char > ( input_file )), std :: istreambuf_iterator < char > ()); input_file . close (); std :: string decrypted = decryptString ( encrypted , key ); std :: string decrypted_file = \"decrypted.txt\" ; std :: ofstream output_file ( decrypted_file ); if ( ! output_file . is_open ()) { std :: cerr << \"Error: Failed to open output file.\" << std :: endl ; return 1 ; } output_file << decrypted ; output_file . close (); }","title":"XOR\u52a0\u5bc6\u7b97\u6cd5c++\u52a0\u5bc6\u6587\u4ef6\u5185\u5bb9"},{"location":"Blogs/meowrain/c%2B%2B/XOR%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/#xor\u52a0\u5bc6\u7b97\u6cd5c\u52a0\u5bc6\u6587\u4ef6\u5185\u5bb9","text":"","title":"XOR\u52a0\u5bc6\u7b97\u6cd5c++\u52a0\u5bc6\u6587\u4ef6\u5185\u5bb9"},{"location":"Blogs/meowrain/c%2B%2B/XOR%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/#\u4ec0\u4e48\u662fxor\u52a0\u5bc6\u7b97\u6cd5","text":"XOR\uff08\u5f02\u6216\uff09\u662f\u4e00\u79cd\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u76f8\u540c\u5219\u8fd4\u56de 0\uff0c\u5426\u5219\u8fd4\u56de 1\u3002\u5728\u52a0\u5bc6\u4e2d\uff0cXOR \u7b97\u6cd5\u901a\u5e38\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6\u3002 XOR \u7b97\u6cd5\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5bc6\u94a5\uff08\u4e5f\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff09\uff0c\u5bf9\u9700\u8981\u52a0\u5bc6\u6216\u89e3\u5bc6\u7684\u6570\u636e\u8fdb\u884c\u9010\u4f4d\u5f02\u6216\u8fd0\u7b97\u5373\u53ef\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u636e\u548c\u4e00\u4e2a\u5bc6\u94a5\uff0cXOR \u7b97\u6cd5\u4f1a\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e0e\u5bc6\u94a5\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u4f4d\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u4e8c\u8fdb\u5236\u6570\u4f5c\u4e3a\u52a0\u5bc6\u6216\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u9700\u8981\u5c06\u4e8c\u8fdb\u5236\u6570 0110 \u8fdb\u884c\u52a0\u5bc6\uff0c\u4f7f\u7528\u5bc6\u94a5 1011 \u8fdb\u884c\u52a0\u5bc6\u3002\u5219\u52a0\u5bc6\u8fc7\u7a0b\u5982\u4e0b\uff1a 0110 XOR 1011 ----- 1101 \u56e0\u6b64\uff0c\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u4e3a 1101\u3002 \u540c\u6837\u7684\uff0c\u5982\u679c\u60f3\u8981\u5bf9\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u89e3\u5bc6\uff0c\u53ea\u9700\u8981\u518d\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u5bf9\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u5373\u53ef\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u5bc6\u94a5 1011 \u5bf9\u52a0\u5bc6\u540e\u7684\u7ed3\u679c 1101 \u8fdb\u884c\u89e3\u5bc6\uff1a ```asciidoc 1101 XOR 1011 ----- 0110 \u56e0\u6b64\uff0c\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u4e3a 0110\uff0c\u4e0e\u539f\u59cb\u6570\u636e\u76f8\u540c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cXOR \u7b97\u6cd5\u7684\u5b89\u5168\u6027\u8f83\u4f4e\uff0c\u5bb9\u6613\u88ab\u7834\u89e3\u3002\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u9700\u8981\u4f7f\u7528\u66f4\u52a0\u5b89\u5168\u7684\u52a0\u5bc6\u7b97\u6cd5\u6765\u4fdd\u62a4\u6570\u636e\u7684\u5b89\u5168\u3002","title":"\u4ec0\u4e48\u662fXOR\u52a0\u5bc6\u7b97\u6cd5"},{"location":"Blogs/meowrain/c%2B%2B/XOR%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/#\u52a0\u5bc6\u4ee3\u7801","text":"#include <iostream> #include <string> #include <fstream> #include <iterator> std :: string encryptString ( const std :: string & input , const std :: string & key ) { std :: string output ; for ( size_t i = 0 ; i < input . size (); i ++ ) { output += input [ i ] ^ key [ i % key . size ()]; } return output ; } int main () { std :: string input_file_name = \"input.txt\" ; std :: string output_file_name = \"output.txt\" ; std :: string key = \"mysecretkey\" ; std :: ifstream input_file ( input_file_name ); if ( ! input_file . is_open ()) { std :: cerr << \"Error: Failed to open input file.\" << std :: endl ; return 1 ; } std :: string input (( std :: istreambuf_iterator < char > ( input_file )), std :: istreambuf_iterator < char > ()); input_file . close (); std :: string encrypted = encryptString ( input , key ); std :: ofstream output_file ( output_file_name ); if ( ! output_file . is_open ()) { std :: cerr << \"Error: Failed to open output file.\" << std :: endl ; return 1 ; } output_file << encrypted ; output_file . close (); return 0 ; }","title":"\u52a0\u5bc6\u4ee3\u7801"},{"location":"Blogs/meowrain/c%2B%2B/XOR%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/#\u89e3\u5bc6\u4ee3\u7801","text":"#include <iostream> #include <string> #include <fstream> #include <iterator> std :: string encryptString ( const std :: string & input , const std :: string & key ) { std :: string output ; for ( size_t i = 0 ; i < input . size (); i ++ ) { output += input [ i ] ^ key [ i % key . size ()]; } return output ; } std :: string decryptString ( const std :: string & input , const std :: string & key ) { return encryptString ( input , key ); } int main ( int argc , char * argv []) { std :: string input = argv [ 1 ]; //\u7b2c\u4e00\u4e2a\u53c2\u6570\u63a5\u6536\u6587\u4ef6\u4f4d\u7f6e std :: string key = argv [ 2 ]; //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u6536key std :: ifstream input_file ( input ); if ( ! input_file . is_open ()) { std :: cerr << \"Error: Failed to open input file.\" << std :: endl ; return 1 ; } std :: string encrypted (( std :: istreambuf_iterator < char > ( input_file )), std :: istreambuf_iterator < char > ()); input_file . close (); std :: string decrypted = decryptString ( encrypted , key ); std :: string decrypted_file = \"decrypted.txt\" ; std :: ofstream output_file ( decrypted_file ); if ( ! output_file . is_open ()) { std :: cerr << \"Error: Failed to open output file.\" << std :: endl ; return 1 ; } output_file << decrypted ; output_file . close (); }","title":"\u89e3\u5bc6\u4ee3\u7801"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B_algorithms/","text":"std::stable_partition # #include <iostream> #include <vector> #include <algorithm> // \u8fd9\u91cc\u6211\u4eec\u5c31\u7528stable_partition\u6765\u628a\u4e00\u4e2avector\u6570\u7ec4\u4e2d\u7684\u5076\u6570\u548c\u5947\u6570\u5206\u5f00 int main ( void ) { std :: vector < int > numbers { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; std :: cout << \"Original numbers: \" ; for_each ( numbers . begin (), numbers . end (),[]( int val ){ std :: cout << val << \" \" ; }); std :: cout << std :: endl ; auto middle = std :: stable_partition ( numbers . begin (), numbers . end (),[]( int num ){ return num % 2 == 0 ; }); std :: cout << \"Partitioned numbers: \" ; for ( auto it = numbers . begin (); it != middle ; it ++ ) { std :: cout << * it << \" \" ; } std :: cout << \" | \" ; for ( auto it = middle ; it != numbers . end (); it ++ ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"std::stable_partition"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B_algorithms/#stdstable_partition","text":"#include <iostream> #include <vector> #include <algorithm> // \u8fd9\u91cc\u6211\u4eec\u5c31\u7528stable_partition\u6765\u628a\u4e00\u4e2avector\u6570\u7ec4\u4e2d\u7684\u5076\u6570\u548c\u5947\u6570\u5206\u5f00 int main ( void ) { std :: vector < int > numbers { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; std :: cout << \"Original numbers: \" ; for_each ( numbers . begin (), numbers . end (),[]( int val ){ std :: cout << val << \" \" ; }); std :: cout << std :: endl ; auto middle = std :: stable_partition ( numbers . begin (), numbers . end (),[]( int num ){ return num % 2 == 0 ; }); std :: cout << \"Partitioned numbers: \" ; for ( auto it = numbers . begin (); it != middle ; it ++ ) { std :: cout << * it << \" \" ; } std :: cout << \" | \" ; for ( auto it = middle ; it != numbers . end (); it ++ ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"std::stable_partition"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bmain%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/","text":"C++ main\u51fd\u6570\u53c2\u6570 # int argc \u548c char* argv[] \u662f C++ \u4e2d main \u51fd\u6570\u7684\u6807\u51c6\u53c2\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u7a0b\u5e8f\u542f\u52a8\u65f6\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002 argc \u8868\u793a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u91cf\uff0c\u5305\u62ec\u7a0b\u5e8f\u672c\u8eab\u7684\u540d\u79f0\u3002\u56e0\u6b64\uff0c\u5f53\u6267\u884c\u7a0b\u5e8f\u65f6\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u53c2\u6570\u4e2a\u6570\u52a0\u4e00\u5c31\u662f argc \u7684\u503c\u3002 argv[] \u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\u6570\u7ec4\uff0c\u5176\u4e2d argv[0] \u5b58\u50a8\u7684\u662f\u7a0b\u5e8f\u672c\u8eab\u7684\u540d\u79f0\uff08\u5373\u6267\u884c\u7a0b\u5e8f\u65f6\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\uff0c\u800c argv[1] \u5230 argv[argc-1] \u5b58\u50a8\u7684\u662f\u7a0b\u5e8f\u542f\u52a8\u65f6\u8f93\u5165\u7684\u5176\u5b83\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u90fd\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u4f20\u9012\u7684\uff0c\u56e0\u6b64 argv \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u6307\u5411\u4ee5 null \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488\u3002 \u4ee3\u7801 #include <iostream> int main ( int argc , char * argv []) { std :: cout << \"Program name is \" << argv [ 0 ] << std :: endl ; std :: cout << \"The number of arguments is:\" << argc << std :: endl ; for ( int i = 1 ; i < argc ; i ++ ) { std :: cout << \"Arguments: \" << argv [ i ] << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"C++ main\u51fd\u6570\u53c2\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bmain%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/#c-main\u51fd\u6570\u53c2\u6570","text":"int argc \u548c char* argv[] \u662f C++ \u4e2d main \u51fd\u6570\u7684\u6807\u51c6\u53c2\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u7a0b\u5e8f\u542f\u52a8\u65f6\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002 argc \u8868\u793a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u91cf\uff0c\u5305\u62ec\u7a0b\u5e8f\u672c\u8eab\u7684\u540d\u79f0\u3002\u56e0\u6b64\uff0c\u5f53\u6267\u884c\u7a0b\u5e8f\u65f6\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u53c2\u6570\u4e2a\u6570\u52a0\u4e00\u5c31\u662f argc \u7684\u503c\u3002 argv[] \u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\u6570\u7ec4\uff0c\u5176\u4e2d argv[0] \u5b58\u50a8\u7684\u662f\u7a0b\u5e8f\u672c\u8eab\u7684\u540d\u79f0\uff08\u5373\u6267\u884c\u7a0b\u5e8f\u65f6\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\uff0c\u800c argv[1] \u5230 argv[argc-1] \u5b58\u50a8\u7684\u662f\u7a0b\u5e8f\u542f\u52a8\u65f6\u8f93\u5165\u7684\u5176\u5b83\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u90fd\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u4f20\u9012\u7684\uff0c\u56e0\u6b64 argv \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u6307\u5411\u4ee5 null \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488\u3002 \u4ee3\u7801 #include <iostream> int main ( int argc , char * argv []) { std :: cout << \"Program name is \" << argv [ 0 ] << std :: endl ; std :: cout << \"The number of arguments is:\" << argc << std :: endl ; for ( int i = 1 ; i < argc ; i ++ ) { std :: cout << \"Arguments: \" << argv [ i ] << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"C++ main\u51fd\u6570\u53c2\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/","text":"C++ STL # vector # vector\u6784\u9020\u5668 # #include <vector> #include <iostream> /* vector<T> v; // \u91c7\u7528\u6a21\u7248\u7c7b\u5b9e\u73b0\uff0c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 vector<T> v(T* v1.begin(), T* v1.end()); // \u5c06v1[begin(), end())\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab vector<T> v(int n, T elem); // \u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab vector<T> v(const vector<T> v1); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 */ int main ( void ) { std :: vector < int > v ; // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 for ( int i = 0 ; i < 10 ; i ++ ) { v . push_back ( i ); } //----------------------------- std :: vector < int > v2 { v . begin (), v . end ()}; // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 for ( int i = 0 ; i < 10 ; i ++ ) { std :: cout << v2 [ i ] << \" \" ; } std :: cout << std :: endl ; //----------------------------- //----------------------------- std :: vector < int > v3 ( 3 , 10 ); // \u5c063\u4e2a10\u62f7\u8d1d\u7ed9\u672c\u8eab for ( int i = 0 ; i < 3 ; i ++ ) { std :: cout << v3 [ i ] << \" \" ; } std :: cout << std :: endl ; //----------------------------- //----------------------------- std :: vector < int > v4 ( v3 ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 for ( int i = 0 ; i < 3 ; i ++ ) { std :: cout << v4 [ i ] << \" \" ; } //----------------------------- } vector \u65b9\u6cd5 # assign\u65b9\u6cd5 # std::vector \u7684 assign() \u662f\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u5bb9\u5668\u91cd\u7f6e\u5e76\u8d4b\u4e88\u65b0\u7684\u5143\u7d20\u503c\u3002 assign() \u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f20\u9012\u7ed9\u5b83\u7684\u53c2\u6570\u3002\u4ee5\u4e0b\u662f assign() \u7684\u5e94\u7528\u793a\u4f8b\uff1a \u4f7f\u7528\u5355\u4e00\u503c\u521d\u59cb\u5316\u5bb9\u5668\uff1a ```cpp include # include # int main() { std::vector myVector; // \u4f7f\u7528 assign() \u5c06\u5bb9\u5668\u91cd\u7f6e\u4e3a\u5305\u542b 5 \u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f 42 myVector.assign(5, 42); // \u8f93\u51fa\u5bb9\u5668\u7684\u5143\u7d20 for (const auto& element : myVector) { std::cout << element << \" \"; } std::cout << std::endl; return 0; } ``` 42 42 42 42 42 \u4f7f\u7528\u8303\u56f4\u5185\u7684\u503c\u521d\u59cb\u5316\u5bb9\u5668\uff1a #include <iostream> #include <vector> int main ( void ) { std :: vector < int > ve ; int arr [] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; ve . assign ( arr , arr + 10 ); for ( auto & ele : ve ) { std :: cout << ele << \" \" ; } std :: cout << std :: endl ; return 0 ; } 1 2 3 4 5 6 7 8 9 10 swap\u65b9\u6cd5 # #include <iostream> #include <vector> int main () { std :: vector < int > v1 = { 1 , 2 , 3 }; std :: vector < int > v2 = { 4 , 5 , 6 }; std :: cout << \"Before swap: \" << std :: endl ; std :: cout << \"v1: \" ; for ( int num : v1 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; std :: cout << \"v2: \" ; for ( int num : v2 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; v1 . swap ( v2 ); std :: cout << \"After swap: \" << std :: endl ; std :: cout << \"v1: \" ; for ( int num : v1 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; std :: cout << \"v2: \" ; for ( int num : v2 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; return 0 ; } vector \u5927\u5c0f\u64cd\u4f5c # bool empty(); // \u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a void resize(int num); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 void resize(int num, T elem); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 int capacity(); // \u8fd4\u56de\u5bb9\u5668\u7684\u5bb9\u91cf void reserve(int len); \u5bb9\u5668\u9884\u7559len\u4e2a\u5143\u7d20\u957f\u5ea6\uff0c\u9884\u7559\u4f4d\u7f6e\u4e0d\u521d\u59cb\u5316\uff0c\u5143\u7d20\u4e0d\u53ef\u8bbf\u95ee /* int size(); // \u8fd4\u56de\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u4e2a\u6570 bool empty(); // \u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a void resize(int num); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 void resize(int num, T elem); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 int capacity(); // \u8fd4\u56de\u5bb9\u5668\u7684\u5bb9\u91cf void reserve(int len); \u5bb9\u5668\u9884\u7559len\u4e2a\u5143\u7d20\u957f\u5ea6\uff0c\u9884\u7559\u4f4d\u7f6e\u4e0d\u521d\u59cb\u5316\uff0c\u5143\u7d20\u4e0d\u53ef\u8bbf\u95ee */ #include <iostream> #include <vector> int main ( void ) { /* size empty */ std :: vector < int > v ; std :: cout << \"size: \" << v . size () << std :: endl ; //size: 0 std :: cout << \"is empty? \" << std :: boolalpha << v . empty () << std :: endl ; //true /* size: 0 is empty? true */ /* resize */ std :: vector < int > v2 ; for ( int i = 0 ; i < 10 ; i ++ ) { v2 . push_back ( i ); } for ( int i = 0 ; i < 10 ; i ++ ) { std :: cout << v2 [ i ] << \" \" ; } std :: cout << std :: endl ; v2 . resize ( 5 ); std :: vector < int >:: iterator it = v2 . begin (); std :: cout << \"vector size:\" << v2 . size () << std :: endl ; //5 std :: cout << \"v2 resize(5)\" << std :: endl ; while ( it != v2 . end ()) { std :: cout << * it << \" \" ; it ++ ; } std :: cout << std :: endl ; std :: cout << \"v2 resize(15,1)\" << std :: endl ; v2 . resize ( 15 , 1 ); it = v2 . begin (); while ( it != v2 . end ()) { std :: cout << * it << \" \" ; it ++ ; } std :: cout << std :: endl ; /* capacity */ std :: vector < int > v3 ; for ( int i = 0 ; i < 100 ; i ++ ) { v3 . push_back ( i ); } std :: cout << \"vector size:\" << v3 . size () << std :: endl ; //100 std :: cout << \"vector capacity: \" << v3 . capacity () << std :: endl ; //128 /* reverse */ std :: vector < char > v4 ; v4 . reserve ( 1000 ); std :: cout << \"v4 capacity: \" << v4 . capacity () << std :: endl ; //v4 capacity: 1000 return 0 ; } vector\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c /* insert(const_iterator pos, T elem); // \u5728pos\u4f4d\u7f6e\u5904\u63d2\u5165\u5143\u7d20elem insert(const_iterator pos, int n, T elem); // \u5728pos\u4f4d\u7f6e\u63d2\u5165n\u4e2a\u5143\u7d20elem insert(pos, beg, end); // \u5c06[beg, end)\u533a\u95f4\u5185\u7684\u5143\u7d20\u63d2\u5230\u4f4d\u7f6epos push_back(T elem); // \u5c3e\u90e8\u63d2\u5165\u5143\u7d20elem pop_back(); // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 erase(const_iterator start, const_iterator end); // \u5220\u9664\u533a\u95f4[start, end)\u5185\u7684\u5143\u7d20 erase(const_iterator pos); // \u5220\u9664\u4f4d\u7f6epos\u7684\u5143\u7d20 clear(); // \u5220\u9664\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5143\u7d20 */ #include <iostream> #include <vector> #include <iterator> int main ( void ) { std :: vector < int > ve ; for ( int i = 0 ; i < 10 ; i ++ ) { ve . push_back ( i ); } auto it = ve . begin (); //\u8fed\u4ee3\u5668\u6307\u9488\u6307\u5411\u5bb9\u5668\u5f00\u5934 std :: advance ( it , 2 ); //\u8fed\u4ee3\u5668\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e24\u4f4d ve . insert ( it , 12 ); //\u4f7f\u7528insert\u628a12\u63d2\u5165\u5230Index\u4e3a2\u5f97\u5730\u65b9 it = ve . begin (); while ( it != ve . end ()){ std :: cout << * it << \" \" ; it ++ ; } //0 1 12 2 3 4 5 6 7 8 9 std :: cout << std :: endl ; ve . pop_back (); //\u5f39\u51fa\u5c3e\u90e8\u5143\u7d20 it = ve . begin (); for ( auto & ele : ve ) { std :: cout << ele << \" \" ; } //0 1 12 2 3 4 5 6 7 8 std :: cout << std :: endl ; std :: vector < int > ve2 ; for ( int i = 1 ; i <= 10 ; i ++ ) { ve2 . push_back ( i ); } auto it1 = ve2 . begin (); std :: advance ( it1 , 5 ); auto it2 = std :: next ( it1 , 3 ); ve2 . erase ( it1 , it2 ); auto iter = ve2 . begin (); for ( auto & ele : ve2 ) { std :: cout << ele << \" \" ; } std :: cout << std :: endl ; ve2 . clear (); return 0 ; } vector\u6570\u636e\u5b58\u53d6\u64cd\u4f5c # /* vector \u6570\u636e\u5b58\u53d6\u64cd\u4f5c T& at(int idx); // \u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e\uff0c\u5982\u679cidx\u8d8a\u754c\uff0c\u629b\u51faout_of_range\u5f02\u5e38 T& operator[](int idx); // \u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e\uff0c\u5982\u679cidx\u8d8a\u754c\uff0c\u8fd0\u884c\u76f4\u63a5\u62a5\u9519 T& front(); // \u8fd4\u56de\u9996\u5143\u7d20\u7684\u5f15\u7528 T& back(); // \u8fd4\u56de\u5c3e\u5143\u7d20\u7684\u5f15\u7528 */ #include <iostream> #include <vector> int main ( void ) { std :: vector < int > ve ; for ( int i = 0 ; i < 10 ; i ++ ) { ve . push_back ( i ); } std :: cout << ve . at ( 0 ) << \" \" ; // 0 std :: cout << std :: endl ; std :: cout << ve [ 0 ] << \" \" ; //0 std :: cout << std :: endl ; std :: cout << ve . front () << std :: endl ; //0 std :: cout << ve . back () << std :: endl ; //9 return 0 ; } vector\u7684\u904d\u5386 # \u8fed\u4ee3\u5668\u904d\u5386 #include <iostream> #include <vector> int main () { std :: vector < int > myVector = { 1 , 2 , 3 , 4 , 5 }; // \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386 for ( std :: vector < int >:: iterator it = myVector . begin (); it != myVector . end (); ++ it ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; return 0 ; } for\u5faa\u73af #include <iostream> #include <vector> int main () { std :: vector < int > myVector = { 1 , 2 , 3 , 4 , 5 }; // \u4f7f\u7528\u8303\u56f4-based for \u5faa\u73af\u904d\u5386 for ( const auto & element : myVector ) { std :: cout << element << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"C++ STL"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#c-stl","text":"","title":"C++ STL"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#vector","text":"","title":"vector"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#vector\u6784\u9020\u5668","text":"#include <vector> #include <iostream> /* vector<T> v; // \u91c7\u7528\u6a21\u7248\u7c7b\u5b9e\u73b0\uff0c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 vector<T> v(T* v1.begin(), T* v1.end()); // \u5c06v1[begin(), end())\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab vector<T> v(int n, T elem); // \u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab vector<T> v(const vector<T> v1); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 */ int main ( void ) { std :: vector < int > v ; // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 for ( int i = 0 ; i < 10 ; i ++ ) { v . push_back ( i ); } //----------------------------- std :: vector < int > v2 { v . begin (), v . end ()}; // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 for ( int i = 0 ; i < 10 ; i ++ ) { std :: cout << v2 [ i ] << \" \" ; } std :: cout << std :: endl ; //----------------------------- //----------------------------- std :: vector < int > v3 ( 3 , 10 ); // \u5c063\u4e2a10\u62f7\u8d1d\u7ed9\u672c\u8eab for ( int i = 0 ; i < 3 ; i ++ ) { std :: cout << v3 [ i ] << \" \" ; } std :: cout << std :: endl ; //----------------------------- //----------------------------- std :: vector < int > v4 ( v3 ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 for ( int i = 0 ; i < 3 ; i ++ ) { std :: cout << v4 [ i ] << \" \" ; } //----------------------------- }","title":"vector\u6784\u9020\u5668"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#vector-\u65b9\u6cd5","text":"","title":"vector \u65b9\u6cd5"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#assign\u65b9\u6cd5","text":"std::vector \u7684 assign() \u662f\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u5bb9\u5668\u91cd\u7f6e\u5e76\u8d4b\u4e88\u65b0\u7684\u5143\u7d20\u503c\u3002 assign() \u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f20\u9012\u7ed9\u5b83\u7684\u53c2\u6570\u3002\u4ee5\u4e0b\u662f assign() \u7684\u5e94\u7528\u793a\u4f8b\uff1a \u4f7f\u7528\u5355\u4e00\u503c\u521d\u59cb\u5316\u5bb9\u5668\uff1a ```cpp","title":"assign\u65b9\u6cd5"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#include","text":"","title":"include"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#include_1","text":"int main() { std::vector myVector; // \u4f7f\u7528 assign() \u5c06\u5bb9\u5668\u91cd\u7f6e\u4e3a\u5305\u542b 5 \u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f 42 myVector.assign(5, 42); // \u8f93\u51fa\u5bb9\u5668\u7684\u5143\u7d20 for (const auto& element : myVector) { std::cout << element << \" \"; } std::cout << std::endl; return 0; } ``` 42 42 42 42 42 \u4f7f\u7528\u8303\u56f4\u5185\u7684\u503c\u521d\u59cb\u5316\u5bb9\u5668\uff1a #include <iostream> #include <vector> int main ( void ) { std :: vector < int > ve ; int arr [] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 }; ve . assign ( arr , arr + 10 ); for ( auto & ele : ve ) { std :: cout << ele << \" \" ; } std :: cout << std :: endl ; return 0 ; } 1 2 3 4 5 6 7 8 9 10","title":"include"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#swap\u65b9\u6cd5","text":"#include <iostream> #include <vector> int main () { std :: vector < int > v1 = { 1 , 2 , 3 }; std :: vector < int > v2 = { 4 , 5 , 6 }; std :: cout << \"Before swap: \" << std :: endl ; std :: cout << \"v1: \" ; for ( int num : v1 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; std :: cout << \"v2: \" ; for ( int num : v2 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; v1 . swap ( v2 ); std :: cout << \"After swap: \" << std :: endl ; std :: cout << \"v1: \" ; for ( int num : v1 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; std :: cout << \"v2: \" ; for ( int num : v2 ) { std :: cout << num << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"swap\u65b9\u6cd5"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#vector-\u5927\u5c0f\u64cd\u4f5c","text":"bool empty(); // \u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a void resize(int num); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 void resize(int num, T elem); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 int capacity(); // \u8fd4\u56de\u5bb9\u5668\u7684\u5bb9\u91cf void reserve(int len); \u5bb9\u5668\u9884\u7559len\u4e2a\u5143\u7d20\u957f\u5ea6\uff0c\u9884\u7559\u4f4d\u7f6e\u4e0d\u521d\u59cb\u5316\uff0c\u5143\u7d20\u4e0d\u53ef\u8bbf\u95ee /* int size(); // \u8fd4\u56de\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u4e2a\u6570 bool empty(); // \u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a void resize(int num); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 void resize(int num, T elem); \u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u586b\u5145\u65b0\u4f4d\u7f6e\u3002 \u82e5\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664 int capacity(); // \u8fd4\u56de\u5bb9\u5668\u7684\u5bb9\u91cf void reserve(int len); \u5bb9\u5668\u9884\u7559len\u4e2a\u5143\u7d20\u957f\u5ea6\uff0c\u9884\u7559\u4f4d\u7f6e\u4e0d\u521d\u59cb\u5316\uff0c\u5143\u7d20\u4e0d\u53ef\u8bbf\u95ee */ #include <iostream> #include <vector> int main ( void ) { /* size empty */ std :: vector < int > v ; std :: cout << \"size: \" << v . size () << std :: endl ; //size: 0 std :: cout << \"is empty? \" << std :: boolalpha << v . empty () << std :: endl ; //true /* size: 0 is empty? true */ /* resize */ std :: vector < int > v2 ; for ( int i = 0 ; i < 10 ; i ++ ) { v2 . push_back ( i ); } for ( int i = 0 ; i < 10 ; i ++ ) { std :: cout << v2 [ i ] << \" \" ; } std :: cout << std :: endl ; v2 . resize ( 5 ); std :: vector < int >:: iterator it = v2 . begin (); std :: cout << \"vector size:\" << v2 . size () << std :: endl ; //5 std :: cout << \"v2 resize(5)\" << std :: endl ; while ( it != v2 . end ()) { std :: cout << * it << \" \" ; it ++ ; } std :: cout << std :: endl ; std :: cout << \"v2 resize(15,1)\" << std :: endl ; v2 . resize ( 15 , 1 ); it = v2 . begin (); while ( it != v2 . end ()) { std :: cout << * it << \" \" ; it ++ ; } std :: cout << std :: endl ; /* capacity */ std :: vector < int > v3 ; for ( int i = 0 ; i < 100 ; i ++ ) { v3 . push_back ( i ); } std :: cout << \"vector size:\" << v3 . size () << std :: endl ; //100 std :: cout << \"vector capacity: \" << v3 . capacity () << std :: endl ; //128 /* reverse */ std :: vector < char > v4 ; v4 . reserve ( 1000 ); std :: cout << \"v4 capacity: \" << v4 . capacity () << std :: endl ; //v4 capacity: 1000 return 0 ; } vector\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c /* insert(const_iterator pos, T elem); // \u5728pos\u4f4d\u7f6e\u5904\u63d2\u5165\u5143\u7d20elem insert(const_iterator pos, int n, T elem); // \u5728pos\u4f4d\u7f6e\u63d2\u5165n\u4e2a\u5143\u7d20elem insert(pos, beg, end); // \u5c06[beg, end)\u533a\u95f4\u5185\u7684\u5143\u7d20\u63d2\u5230\u4f4d\u7f6epos push_back(T elem); // \u5c3e\u90e8\u63d2\u5165\u5143\u7d20elem pop_back(); // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 erase(const_iterator start, const_iterator end); // \u5220\u9664\u533a\u95f4[start, end)\u5185\u7684\u5143\u7d20 erase(const_iterator pos); // \u5220\u9664\u4f4d\u7f6epos\u7684\u5143\u7d20 clear(); // \u5220\u9664\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5143\u7d20 */ #include <iostream> #include <vector> #include <iterator> int main ( void ) { std :: vector < int > ve ; for ( int i = 0 ; i < 10 ; i ++ ) { ve . push_back ( i ); } auto it = ve . begin (); //\u8fed\u4ee3\u5668\u6307\u9488\u6307\u5411\u5bb9\u5668\u5f00\u5934 std :: advance ( it , 2 ); //\u8fed\u4ee3\u5668\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e24\u4f4d ve . insert ( it , 12 ); //\u4f7f\u7528insert\u628a12\u63d2\u5165\u5230Index\u4e3a2\u5f97\u5730\u65b9 it = ve . begin (); while ( it != ve . end ()){ std :: cout << * it << \" \" ; it ++ ; } //0 1 12 2 3 4 5 6 7 8 9 std :: cout << std :: endl ; ve . pop_back (); //\u5f39\u51fa\u5c3e\u90e8\u5143\u7d20 it = ve . begin (); for ( auto & ele : ve ) { std :: cout << ele << \" \" ; } //0 1 12 2 3 4 5 6 7 8 std :: cout << std :: endl ; std :: vector < int > ve2 ; for ( int i = 1 ; i <= 10 ; i ++ ) { ve2 . push_back ( i ); } auto it1 = ve2 . begin (); std :: advance ( it1 , 5 ); auto it2 = std :: next ( it1 , 3 ); ve2 . erase ( it1 , it2 ); auto iter = ve2 . begin (); for ( auto & ele : ve2 ) { std :: cout << ele << \" \" ; } std :: cout << std :: endl ; ve2 . clear (); return 0 ; }","title":"vector \u5927\u5c0f\u64cd\u4f5c"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#vector\u6570\u636e\u5b58\u53d6\u64cd\u4f5c","text":"/* vector \u6570\u636e\u5b58\u53d6\u64cd\u4f5c T& at(int idx); // \u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e\uff0c\u5982\u679cidx\u8d8a\u754c\uff0c\u629b\u51faout_of_range\u5f02\u5e38 T& operator[](int idx); // \u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e\uff0c\u5982\u679cidx\u8d8a\u754c\uff0c\u8fd0\u884c\u76f4\u63a5\u62a5\u9519 T& front(); // \u8fd4\u56de\u9996\u5143\u7d20\u7684\u5f15\u7528 T& back(); // \u8fd4\u56de\u5c3e\u5143\u7d20\u7684\u5f15\u7528 */ #include <iostream> #include <vector> int main ( void ) { std :: vector < int > ve ; for ( int i = 0 ; i < 10 ; i ++ ) { ve . push_back ( i ); } std :: cout << ve . at ( 0 ) << \" \" ; // 0 std :: cout << std :: endl ; std :: cout << ve [ 0 ] << \" \" ; //0 std :: cout << std :: endl ; std :: cout << ve . front () << std :: endl ; //0 std :: cout << ve . back () << std :: endl ; //9 return 0 ; }","title":"vector\u6570\u636e\u5b58\u53d6\u64cd\u4f5c"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2Bstl/#vector\u7684\u904d\u5386","text":"\u8fed\u4ee3\u5668\u904d\u5386 #include <iostream> #include <vector> int main () { std :: vector < int > myVector = { 1 , 2 , 3 , 4 , 5 }; // \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386 for ( std :: vector < int >:: iterator it = myVector . begin (); it != myVector . end (); ++ it ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; return 0 ; } for\u5faa\u73af #include <iostream> #include <vector> int main () { std :: vector < int > myVector = { 1 , 2 , 3 , 4 , 5 }; // \u4f7f\u7528\u8303\u56f4-based for \u5faa\u73af\u904d\u5386 for ( const auto & element : myVector ) { std :: cout << element << \" \" ; } std :: cout << std :: endl ; return 0 ; }","title":"vector\u7684\u904d\u5386"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B/","text":"\u7f16\u8bd1\u6d41\u7a0b # \u91cd\u8981\u7f16\u8bd1\u53c2\u6570 #","title":"C++\u7f16\u8bd1\u6d41\u7a0b"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B/#\u7f16\u8bd1\u6d41\u7a0b","text":"","title":"\u7f16\u8bd1\u6d41\u7a0b"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E7%BC%96%E8%AF%91%E6%B5%81%E7%A8%8B/#\u91cd\u8981\u7f16\u8bd1\u53c2\u6570","text":"","title":"\u91cd\u8981\u7f16\u8bd1\u53c2\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/","text":"C++ OOP # Class(1) # private,protected,public # private(\u9ed8\u8ba4\u5c31\u662f private) # private \u58f0\u660e\u7684\u7c7b\u7684\u79c1\u6709\u6210\u5458\u53ea\u80fd\u7531\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u6210\u5458\u6216\u8005\u5b83\u4eec\u7684\u670b\u53cb\u8bbf\u95ee #include <iostream> #include <string> class Student { private : int score ; public : std :: string name ; int age ; Student ( std :: string _name , int _age , int _score ) : name ( _name ), age ( _age ), score ( _score ){ } void getScore (){ std :: cout << score << std :: endl ; } }; int main ( void ) { Student s ( \"meow\" , 18 , 100 ); s . getScore (); } \u6211\u4eec\u5982\u679c\u5728 main \u51fd\u6570\u4e2d\u76f4\u63a5\u7528\u5bf9\u8c61\u8f93\u51fa\u5b66\u751f\u7684\u5206\u6570\uff0c\u5c31\u4e0d\u80fd #include <iostream> #include <string> class Student { private : int score ; public : std :: string name ; int age ; Student ( std :: string _name , int _age , int _score ) : name ( _name ), age ( _age ), score ( _score ){ } void getScore (){ std :: cout << score << std :: endl ; } }; int main ( void ) { Student s ( \"meow\" , 18 , 100 ); std :: cout << s . score << std :: endl ; } protected # protected \u53d7\u4fdd\u62a4\u7684\u6210\u5458\u53ef\u4ee5\u4ece\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u6210\u5458\uff08\u6216\u4ece\u4ed6\u4eec\u7684\u201c\u670b\u53cb\u201d\uff09\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u4ece\u5176\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u8bbf\u95ee\u3002 #include <iostream> #include <string> class Human { protected : std :: string name ; public : Human ( std :: string _name ) : name ( _name ){} void getHumanInfo () { std :: cout << \"Human name is: \" << name << std :: endl ; } //\u540c\u4e00\u7c7b\u6210\u5458\u8bbf\u95ee }; class Student : Human { public : int score ; Student ( std :: string _name , int _score ) : Human ( _name ), score ( _score ) { } void getStudentInfo () { std :: cout << \"Student name is :\" << name << \" \\t Student score is :\" << score << std :: endl ; } }; //\u6d3e\u751f\u7c7b\u6210\u5458\u8bbf\u95ee int main ( void ) { Student s ( \"meow\" , 100 ); s . getStudentInfo (); Human h ( \"meow\" ); h . getHumanInfo (); return 0 ; } public # \u516c\u5171\u6210\u5458\u53ef\u4ee5\u4ece\u5bf9\u8c61\u53ef\u89c1\u7684\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\u3002 \u8fd9\u91cc\u4e0d\u4f5c\u4ee3\u7801\u89e3\u91ca\u4e86\u3002\ud83d\ude0a \u5b9e\u73b0\u7c7b\u6210\u5458\u51fd\u6570 # #include <iostream> class Square { int width ; int height ; public : void setWidth ( int _width ) { width = _width ; } void setHeight ( int _height ) { height = _height ; } int getArea (); int getPerimeter (); }; int Square::getArea () { return width * height ; } int Square::getPerimeter () { return 2 * ( width + height ); } int main () { Square s ; s . setHeight ( 10 ); s . setWidth ( 19 ); std :: cout << s . getArea () << std :: endl ; } \u5f53\u7136\u4e86\uff0c\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u4ee5\u5728\u5916\u9762\u5b9e\u73b0!\ud83d\ude0a #include <iostream> #include <string> class Student { public : std :: string name ; int age ; Student ( std :: string , int ); void getStudentInfo () { std :: cout << name << \" \" << age << std :: endl ; } }; //\u5728\u5916\u9762\u5b9e\u73b0\u7c7b\u7684\u6784\u9020\u51fd\u6570 Student :: Student ( std :: string _name , int _age ) : name ( _name ), age ( _age ){} int main () { Student s ( \"meow\" , 10 ); s . getStudentInfo (); return 0 ; } \u6784\u9020\u5668\uff08Constructors\uff09 # c++ \u6784\u9020\u5668\uff08\u6700\u7b80\u5355\u7684\u5b9e\u4f8b\uff09 # #include <iostream> class Rectangle { int width ; int height ; public : Rectangle ( int , int ); void getArea (); }; Rectangle :: Rectangle ( int _w , int _h ) { width = _w ; height = _h ; } void Rectangle :: getArea () { std :: cout << width * height << std :: endl ; } int main ( void ) { Rectangle r ( 100 , 100 ); r . getArea (); } \u4e0a\u9762\u662f c++\u6784\u9020\u5668\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6cd5 \u91cd\u8f7d\u6784\u9020\u5668\uff08\u5305\u62ec\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\uff09 # \u8bd5\u60f3\u4e00\u4e0b\uff0c\u5047\u5982\u6211\u8981\u6c42\u7528 Rectangle r \u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4 width = 5 , height = 5 ,\u4f46\u662f\u53c8\u8981\u6c42\u80fd\u7ed9 Rectangle \u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u8d4b\u503c\uff0c\u6bd4\u5982\u8ba9width = 10,height = 20 , Rectangle r(10,20) . \u6211\u4eec\u5c31\u5f97\u8fd9\u4e48\u5199 #include <iostream> class Rectangle { int width ; int height ; public : Rectangle (); Rectangle ( int , int ); void getArea (){ std :: cout << width * height << std :: endl ; } }; Rectangle :: Rectangle () { width = 5 ; height = 5 ; } Rectangle :: Rectangle ( int w , int h ) { width = w ; height = h ; } int main ( void ) { Rectangle r ; r . getArea (); //25 Rectangle r2 ( 10 , 15 ); r2 . getArea (); //150 } \u5f53\u7136\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u5728\u5916\u9762\u5b9e\u73b0\u6784\u9020\u51fd\u6570\uff0c\u76f4\u63a5\u5728\u7c7b\u91cc\u9762\u5199\u4e5f\u662f\u53ef\u4ee5\u7684 #include <iostream> class Rectangle { int width ; int height ; public : Rectangle () { width = 5 ; height = 5 ; } Rectangle ( int _w , int _h ) { width = _w ; height = _h ; } void getArea (){ std :: cout << width * height << std :: endl ; } }; int main ( void ) { Rectangle r ; r . getArea (); //25 Rectangle r2 ( 10 , 15 ); r2 . getArea (); //150 } \ud83d\ude0a \u6709\u6ca1\u6709\u53d1\u73b0\u8fd9\u6837\u5f88\u9ebb\u70e6\u5462\uff1f \u5176\u5b9e\u5728 c++\u4e2d\u6709\u4e00\u4e2a\u4e1c\u897f\uff0c\u53eb \u6210\u5458\u521d\u59cb\u5316\u5217\u8868 \uff0c\u770b\u5230\u4e0a\u9762\u7684\u91cd\u8f7d\u7684\u7b2c\u4e8c\u4e2a\u6784\u9020\u51fd\u6570\u4e86\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u5199 Rectangle ( int _w , int _h ) : width ( _w ), height ( _h ) {}; \u8fd9\u6837\u5c31\u5927\u5927\u7b80\u5316\u4e86\u6211\u4eec\u7684\u6784\u9020\u51fd\u6570\u4e66\u5199\u5566\uff01\ud83d\ude0a \u6307\u5411\u7c7b\u7684\u6307\u9488\uff08Pointers to Class) # \u5728 c++\u4e2d\uff0c\u6211\u4eec\u4e5f \u80fd\u7528\u6307\u9488\u53bb\u6307\u5411\u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u6307\u9488\u8c03\u7528\u7c7b #include <iostream> #include <string> class Human { std :: string name ; public : Human ( std :: string _name ) : name ( _name ){}; void getHumanInfo () { std :: cout << \"Human name is :\" << name << std :: endl ; } }; int main () { //\u521b\u5efaHuman\u5bf9\u8c61 Human h ( \"Mike\" ); Human * human = & h ; human -> getHumanInfo (); //\u901a\u8fc7\u6307\u9488\u8c03\u7528\u7c7b\u7684\u6210\u5458\u51fd\u6570 //Human name is :Mike return 0 ; } \ud83d\ude0a \u65e2\u7136\u8fd9\u6837\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u7c7b\u6570\u7ec4\u5566 #include <iostream> class Rectangle { int width , height ; public : Rectangle ( int _w , int _h ) : width ( _w ), height ( _h ){}; void getArea () { std :: cout << width * height << std :: endl ; } }; int main ( void ) { Rectangle r ( 10 , 20 ); Rectangle * ptr = new Rectangle [ 2 ]{{ 2 , 5 },{ 3 , 6 }}; ptr [ 0 ]. getArea (); //10 ptr [ 1 ]. getArea (); //18 delete [] ptr ; return 0 ; } \u5173\u4e8e\u6307\u9488\u548c new \u8fd9\u4e2a\u6211\u4f1a\u540e\u9762\u53c2\u8003 c++ primer plus \u8fdb\u884c\u8fdb\u4e00\u6b65\u8bf4\u660e \u9759\u6001\u51fd\u6570 # C++ \u4e2d\u7684\u9759\u6001\u51fd\u6570\u662f\u6307\u5728\u7c7b\u4e2d\u4f7f\u7528static\u5173\u952e\u5b57\u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u3002\u5b83\u4e0e\u7c7b\u7684\u5b9e\u4f8b\u65e0\u5173\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61 \u9759\u6001\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u65b9\u5f0f\u4e0e\u666e\u901a\u6210\u5458\u51fd\u6570\u76f8\u540c\uff0c\u53ea\u9700\u8981\u5728\u51fd\u6570\u524d\u9762\u52a0\u4e0astatic\u5173\u952e\u5b57\u5c31\u884c\u3002\u9759\u6001\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u3002\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57this\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u9690\u542b\u7684\u6307\u5411\u5bf9\u8c61 \u7684\u6307\u9488 #include <iostream> class MyClass { public : static int getCount () { return count ; } private : static int count ; }; int MyClass :: count = 0 ; int main () { std :: cout << MyClass :: getCount () << std :: endl ; std :: cout << MyClass :: getCount () << std :: endl ; MyClass obj1 , obj2 ; std :: cout << obj1 . getCount () << std :: endl ; std :: cout << obj2 . getCount () << std :: endl ; return 0 ; } \u6790\u6784\u51fd\u6570 # C++\u4e2d\u6790\u6784\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u6267\u884c\u6e05\u7406\u5de5\u4f5c\u3002\u6790\u6784\u51fd\u6570\u7684\u540d\u79f0\u548c\u7c7b\u540d\u76f8\u540c\uff0c\u4f46\u5728\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u6ce2\u6d6a\u53f7~ #include <iostream> class MyClass { public : MyClass () { std :: cout << \"Constructor\" << std :: endl ; } ~ MyClass () { std :: cout << \"Destructor\" << std :: endl ; } }; int main () { MyClass obj ; return 0 ; } \u6790\u6784\u51fd\u6570\u7684\u5e94\u7528 #include <iostream> class MyClass { public : MyClass () { std :: cout << \"Constructor \" << std :: endl ; data = new int [ 10 ]; } ~ MyClass () { std :: cout << \"DestructorL: data\u5185\u5b58\u5df2\u88ab\u91ca\u653e\" << std :: endl ; delete [] data ; } void insertNum ( int x ) { if ( top > 9 ) return ; data [ top ++ ] = x ; } void printData () { for ( int i = 0 ; i <= top ; i ++ ) { std :: cout << data [ i ] << \" \" ; } std :: cout << std :: endl ; } private : int * data ; int top = 0 ; }; int main ( void ) { MyClass obj ; obj . insertNum ( 1 ); obj . insertNum ( 2 ); obj . insertNum ( 3 ); obj . insertNum ( 4 ); obj . insertNum ( 5 ); obj . insertNum ( 6 ); obj . printData (); return 0 ; } Class(2) # \u5c01\u88c5 # \u5b9a\u4e49\u4e86\u4e00\u4e2a Circle \u7c7b\uff0c\u5305\u542b\u4e86\u6570\u636e\u6210\u5458 radius \u548c\u6210\u5458\u51fd\u6570 getRadius() \u3001 setRadius() \u548c getArea() \u3002\u5176\u4e2d\uff0c getRadius() \u548c setRadius() \u5206\u522b\u7528\u4e8e\u83b7\u53d6\u548c\u8bbe\u7f6e\u534a\u5f84\u7684\u503c\uff0c getArea() \u7528\u4e8e\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u3002\u53ef\u4ee5\u770b\u51fa\uff0c radius \u6570\u636e\u6210\u5458\u88ab\u9690\u85cf\u5728\u7c7b\u7684\u79c1\u6709\u90e8\u5206\uff0c\u5916\u90e8\u7684\u8c03\u7528\u8005\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u5b83\uff0c\u53ea\u80fd\u901a\u8fc7\u516c\u5171\u7684\u6210\u5458\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u5c01\u88c5\u3002 \u5728 main() \u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Circle \u5bf9\u8c61 c \uff0c\u5e76\u901a\u8fc7\u516c\u5171\u7684\u6210\u5458\u51fd\u6570\u83b7\u53d6\u5e76\u4fee\u6539\u4e86\u534a\u5f84\u7684\u503c\uff0c\u5e76\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5916\u90e8\u8c03\u7528\u8005\u53ea\u80fd\u901a\u8fc7\u516c\u5171\u7684\u63a5\u53e3\u6765\u8bbf\u95ee\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u79c1\u6709\u6210\u5458\u53d8\u91cf\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u901a\u8fc7\u5c01\u88c5\uff0cC++ \u4e2d\u7684\u7c7b\u53ef\u4ee5\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u65b9\u6cd5\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8bbe\u8ba1\u7c7b\u7684\u63a5\u53e3\u65f6\uff0c\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u66b4\u9732\u5fc5\u8981\u7684\u63a5\u53e3\uff0c\u907f\u514d\u5916\u90e8\u8c03\u7528\u8005\u8bef\u64cd\u4f5c\u6570\u636e\uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u548c\u53ef\u9760\u6027\u3002 #include <iostream> class Circle { public : Circle ( double r ) : radius ( r ) {} double getRadius () const { return radius ; } void setRadius ( double r ) { radius = r ; } double getArea () const { return 3.14 * radius * radius ; } private : double radius ; }; int main () { Circle c ( 2.0 ); std :: cout << \"Radius = \" << c . getRadius () << std :: endl ; std :: cout << \"Area = \" << c . getArea () << std :: endl ; c . setRadius ( 3.0 ); std :: cout << \"Radius = \" << c . getRadius () << std :: endl ; std :: cout << \"Area = \" << c . getArea () << std :: endl ; return 0 ; } \u7ee7\u627f # C++ \u4e2d\u7684\u7ee7\u627f\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u5141\u8bb8\u901a\u8fc7\u6d3e\u751f\u7c7b\u6765\u6269\u5c55\u57fa\u7c7b\u7684\u529f\u80fd\uff0c\u4ece\u800c\u5b9e\u73b0\u4ee3\u7801\u7684\u91cd\u7528\u548c\u6269\u5c55\u3002 #include <iostream> class Animal { public : Animal ( const std :: string & _name ) : name ( _name ){}; virtual void speak () const { std :: cout << \"I am an animal.\" << std :: endl ; } protected : std :: string name ; }; class Dog : public Animal { public : Dog ( const std :: string & _name , const std :: string & _breed ) : Animal ( _name ), breed ( _breed ){}; virtual void speak () const { std :: cout << \"Woof! I am a dog.\" << std :: endl ; } private : std :: string breed ; }; class Cat : public Animal { public : Cat ( const std :: string & _name , const std :: string & _color ) : Animal ( _name ), color ( _color ) {}; virtual void speak () const { std :: cout << \"Meow! I am a Cat.\" << std :: endl ; } private : std :: string color ; }; int main ( void ) { Animal * animals [ 3 ]; animals [ 0 ] = new Animal ( \"Generic Animal\" ); animals [ 1 ] = new Dog ( \"Rover\" , \"Golden Retriever\" ); animals [ 2 ] = new Cat ( \"Fluffy\" , \"White\" ); for ( int i = 0 ; i < 3 ; ++ i ) { animals [ i ] -> speak (); } delete animals [ 0 ]; delete animals [ 1 ]; delete animals [ 2 ]; } \u8fd9\u91cc\u6211\u6765\u6d45\u6d45\u4ecb\u7ecd\u4e00\u4e0bvirtual\u8fd9\u4e2a\u5173\u952e\u5b57 \u865a\u51fd\u6570 virtual function # \u5728 C++ \u4e2d\uff0cvirtual \u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u5b9a\u4e49\u865a\u51fd\u6570\u3002\u865a\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b83\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\uff08dynamic binding\uff09\u673a\u5236\u6765\u5b9e\u73b0\u591a\u6001\uff0c\u5141\u8bb8\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u540c\u4e00\u51fd\u6570\u540d\u5728\u4e0d\u540c\u5bf9\u8c61\u4e0a\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a\u3002 \u5728\u4f7f\u7528 virtual \u5173\u952e\u5b57\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a \u53ea\u6709\u7c7b\u7684\u6210\u5458\u51fd\u6570\u624d\u80fd\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u800c\u666e\u901a\u7684\u5168\u5c40\u51fd\u6570\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002 \u865a\u51fd\u6570\u5fc5\u987b\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e\uff0c\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\uff0c\u4f46\u662f\u5fc5\u987b\u4fdd\u6301\u51fd\u6570\u540d\u3001\u53c2\u6570\u7c7b\u578b\u548c\u8fd4\u56de\u7c7b\u578b\u76f8\u540c\uff0c\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002 \u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e94\u8be5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u4fdd\u8bc1\u5728\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u5730\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u5728\u4e0a\u9762\u5199\u7ee7\u627f\u5f97\u65f6\u5019\uff0c\u5c31\u5df2\u7ecf\u4f53\u73b0\u51fa\u4e86\u865a\u51fd\u6570\u5f97\u4f5c\u7528 \u62bd\u8c61\u7c7b # \u5728 C++ \u4e2d\uff0c\u62bd\u8c61\u7c7b\uff08Abstract Class\uff09\u6307\u7684\u662f\u5305\u542b\u81f3\u5c11\u4e00\u4e2a**\u7eaf\u865a\u51fd\u6570**\u7684\u7c7b\uff0c\u4e0d\u80fd\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u53ea\u80fd\u4f5c\u4e3a\u57fa\u7c7b\u88ab\u7ee7\u627f\u3002\u7eaf\u865a\u51fd\u6570\u662f\u5728\u7c7b\u4e2d\u58f0\u660e\u4f46\u6ca1\u6709\u5b9a\u4e49\u7684\u865a\u51fd\u6570\uff0c\u5176\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a virtual \u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d ( \u53c2\u6570\u5217\u8868 ) = 0 ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7eaf\u865a\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u53ea\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u5176\u4f5c\u7528\u662f\u5f3a\u5236\u6d3e\u751f\u7c7b\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002 \u62bd\u8c61\u7c7b\u4e00\u822c\u7528\u4e8e\u5b9a\u4e49\u63a5\u53e3\u548c\u89c4\u8303\u6d3e\u751f\u7c7b\u7684\u884c\u4e3a\uff0c\u5176\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u57fa\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\u3002\u62bd\u8c61\u7c7b\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9a\u4e49\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\u5b9e\u73b0\u591a\u6001\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5b9a\u4e49\u62bd\u8c61\u7c7b\u65f6\uff0c\u5e94\u8be5\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u4fdd\u8bc1\u6b63\u786e\u91ca\u653e\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5185\u5b58\u3002\u540c\u65f6\uff0c\u62bd\u8c61\u7c7b\u7684\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u57fa\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\u3002 \u63a5\u53e3 Interface # \u5728 C++ \u4e2d\uff0c\u63a5\u53e3\uff08Interface\uff09\u6307\u7684\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5305\u542b\u7eaf\u865a\u51fd\u6570\u548c\uff08\u6216\uff09\u5e38\u91cf\u6570\u636e\u6210\u5458\uff0c\u6ca1\u6709\u6570\u636e\u6210\u5458\u548c\u51fd\u6570\u5b9e\u73b0\u3002\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u7ec4\u89c4\u8303\uff0c\u89c4\u5b9a\u4e86\u6d3e\u751f\u7c7b\u9700\u8981\u5b9e\u73b0\u7684\u51fd\u6570\u548c\u6570\u636e\u6210\u5458\uff0c\u7528\u4e8e\u5b9e\u73b0\u7c7b\u7684\u591a\u6001\u548c\u5c01\u88c5\u3002 \u63a5\u53e3\u5728 C++ \u4e2d\u901a\u5e38\u4f7f\u7528\u62bd\u8c61\u7c7b\u6765\u5b9a\u4e49\uff0c\u5176\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\u548c\u5e38\u91cf\u6570\u636e\u6210\u5458\u7528\u4e8e\u63cf\u8ff0\u6d3e\u751f\u7c7b\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u89c4\u8303\u3002\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5305\u542b\u975e\u7eaf\u865a\u51fd\u6570\u548c\u6570\u636e\u6210\u5458\uff0c\u800c\u63a5\u53e3\u53ea\u80fd\u5305\u542b\u7eaf\u865a\u51fd\u6570\u548c\u5e38\u91cf\u6570\u636e\u6210\u5458\u3002 \u4f7f\u7528\u6848\u4f8b\uff1a \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3 Printable \uff0c\u5305\u542b\u4e86\u7eaf\u865a\u51fd\u6570 print() \u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u7c7b Shape \uff0c\u7ee7\u627f\u4e86\u63a5\u53e3 Printable \uff0c\u5305\u542b\u4e86\u7eaf\u865a\u51fd\u6570**getArea() \u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6d3e\u751f\u7c7b **Rectangle \u548c Circle \uff0c\u5206\u522b\u5b9e\u73b0\u4e86\u57fa\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5e76\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Printable \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5206\u522b\u7528\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u6570\u7ec4\u5143\u7d20\u3002\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u6570\u7ec4\uff0c\u5e76\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570 print() \u548c getArea() \uff0c\u5b9e\u73b0\u4e86\u591a\u6001\u7684\u6548\u679c\u3002 \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0cPrintable \u63a5\u53e3\u89c4\u5b9a\u4e86 print() \u51fd\u6570\uff0cShape \u62bd\u8c61\u7c7b\u7ee7\u627f\u4e86 Printable \u63a5\u53e3\uff0c\u5e76\u89c4\u5b9a\u4e86 getArea() \u51fd\u6570\uff0cRectangle \u548c Circle \u6d3e\u751f\u7c7b\u5206\u522b\u5b9e\u73b0\u4e86 Shape \u62bd\u8c61\u7c7b\u7684 getArea() \u548c print() \u51fd\u6570\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Printable \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5305\u542b\u4e86 Rectangle \u548c Circle \u4e24\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u5faa\u73af\u5b9e\u73b0\u4e86\u591a\u6001\u7684\u6548\u679c\u3002 #include <iostream> class Printable { public : virtual void print () const = 0 ; }; class Shape : public Printable { public : virtual double getArea () const = 0 ; }; class Rectangle : public Shape { public : Rectangle ( double w , double h ) : width ( w ), height ( h ) {} virtual double getArea () const { return width * height ; } virtual void print () const { std :: cout << \"Rectangle (\" << width << \" x \" << height << \")\" << std :: endl ; } private : double width ; double height ; }; class Circle : public Shape { public : Circle ( double r ) : radius ( r ) {} virtual double getArea () const { return 3.14 * radius * radius ; } virtual void print () const { std :: cout << \"Circle (\" << radius << \")\" << std :: endl ; } private : double radius ; }; int main () { Printable * shapes [ 2 ]; shapes [ 0 ] = new Rectangle ( 2.0 , 3.0 ); shapes [ 1 ] = new Circle ( 1.5 ); for ( int i = 0 ; i < 2 ; ++ i ) { shapes [ i ] -> print (); std :: cout << \"Area = \" << dynamic_cast < Shape *> ( shapes [ i ]) -> getArea () << std :: endl ; } delete shapes [ 0 ]; delete shapes [ 1 ]; return 0 ; } \u591a\u6001 # \u591a\u6001\uff08Polymorphism\uff09\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u6307\u7684\u662f\u540c\u4e00\u51fd\u6570\u540d\u5728\u4e0d\u540c\u5bf9\u8c61\u4e0a\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a. #include <iostream> class Shape { public : virtual double getArea () const = 0 ; virtual void print () const = 0 ; virtual ~ Shape (){}; }; class Rectangle : public Shape { public : Rectangle ( double w , double h ) : width ( w ), height ( h ) {} virtual double getArea () const { return width * height ; } virtual void print () const { std :: cout << \"Rectangle (\" << width << \" x \" << height << \")\" << std :: endl ; } private : double width ; double height ; }; class Circle : public Shape { public : Circle ( double r ) : radius ( r ) {} virtual double getArea () const { return 3.14 * radius * radius ; } virtual void print () const { std :: cout << \"Circle (\" << radius << \")\" << std :: endl ; } private : double radius ; }; int main () { Shape * shapes [ 2 ]; shapes [ 0 ] = new Rectangle ( 2.0 , 3.0 ); shapes [ 1 ] = new Circle ( 1.5 ); for ( int i = 0 ; i < 2 ; ++ i ) { shapes [ i ] -> print (); std :: cout << \"Area = \" << shapes [ i ] -> getArea () << std :: endl ; } delete shapes [ 0 ]; delete shapes [ 1 ]; return 0 ; } \u91cd\u8f7d\u8fd0\u7b97\u7b26\uff08overloading operators) # \u53ef\u91cd\u8f7d\u8fd0\u7b97\u7b26 \u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5\u62ff\u725b\u5ba2\u7f51\u7684\u9898\u6765\u8bf4\u660e\u4e86\uff0c\u5305\u62ec\u91cd\u8f7d\u8fd0\u7b97\u7b26\u6709\u4ec0\u4e48\u7528 \u91cd\u8f7d\u5c0f\u4e8e\u53f7__\u725b\u5ba2\u7f51 (nowcoder.com) #include <iostream> using namespace std ; class Time { public : int hours ; // \u5c0f\u65f6 int minutes ; // \u5206\u949f Time () { hours = 0 ; minutes = 0 ; } Time ( int h , int m ) { this -> hours = h ; this -> minutes = m ; } void show () { cout << hours << \" \" << minutes << endl ; } // write your code here...... bool operator < ( Time b ){ if ( hours > b . hours && minutes > b . minutes ){ return false ; } else if ( hours == b . hours && minutes == b . minutes ) return false ; else return true ; } }; int main () { int h , m ; cin >> h ; cin >> m ; Time t1 ( h , m ); Time t2 ( 6 , 6 ); if ( t1 < t2 ) cout << \"yes\" ; else cout << \"no\" ; return 0 ; } \u52a0\u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d__\u725b\u5ba2\u7f51 (nowcoder.com) #include <iostream> using namespace std ; class Time { public : int hours ; // \u5c0f\u65f6 int minutes ; // \u5206\u949f Time () { hours = 0 ; minutes = 0 ; } Time ( int h , int m ) { this -> hours = h ; this -> minutes = m ; } void show () { cout << hours << \" \" << minutes << endl ; } // write your code here...... Time operator + ( Time b ) { int sum_hours = hours + b . hours ; int sum_minutes = minutes + b . minutes ; if ( sum_minutes >= 60 ) { sum_minutes -= 60 ; sum_hours += 1 ; } Time sum ( sum_hours , sum_minutes ); return sum ; } }; int main () { int h , m ; cin >> h ; cin >> m ; Time t1 ( h , m ); Time t2 ( 2 , 20 ); Time t3 = t1 + t2 ; t3 . show (); return 0 ; } Copy Constructor # \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6784\u9020\u51fd\u6570\uff0c\u5b83\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u662f\u4f7f\u7528\u540c\u4e00\u7c7b\u4e2d\u4e4b\u524d\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u901a\u5e38\u7528\u4e8e\uff1a \u901a\u8fc7\u4f7f\u7528\u53e6\u4e00\u4e2a\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002 \u590d\u5236\u5bf9\u8c61\u628a\u5b83\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002 \u590d\u5236\u5bf9\u8c61\uff0c\u5e76\u4ece\u51fd\u6570\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61\u3002 \u5982\u679c\u5728\u7c7b\u4e2d\u6ca1\u6709\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u884c\u5b9a\u4e49\u4e00\u4e2a\u3002\u5982\u679c\u7c7b\u5e26\u6709\u6307\u9488\u53d8\u91cf\uff0c\u5e76\u6709\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u5219\u5b83\u5fc5\u987b\u6709\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u6700\u5e38\u89c1\u5f62\u5f0f\u5982\u4e0b\uff1a classname ( const classname & obj ) { // \u6784\u9020\u51fd\u6570\u7684\u4e3b\u4f53 } #include <iostream> using namespace std ; class Person { public : string name ; int age ; Person () { name = \"meow\" ; age = 10 ; } Person ( string _name , int _age ) { name = _name ; age = _age ; } Person ( const Person & other ) { name = other . name ; age = other . age ; } void getInfo () { cout << name << \" \" << age << \" \" << endl ; } }; int main () { Person p ( \"mew\" , 19 ); Person p1 = p ; Person p2 ( p ); p . getInfo (); p1 . getInfo (); p2 . getInfo (); return 0 ; } p1 \u662f\u901a\u8fc7\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u6765\u521d\u59cb\u5316\u7684\uff0c\u5373 Person p1 = p;\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u9690\u5f0f\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528 copy constructor \u6765\u521b\u5efa p1 \u5bf9\u8c61\uff0c\u5e76\u5c06 p \u5bf9\u8c61\u7684\u503c\u590d\u5236\u5230 p1 \u5bf9\u8c61\u4e2d\u3002 \u800c p2 \u662f\u901a\u8fc7\u76f4\u63a5\u8c03\u7528 copy constructor \u6765\u521d\u59cb\u5316\u7684\uff0c\u5373 Person p2(p);\u3002\u8fd9\u662f\u4e00\u79cd\u663e\u5f0f\u8c03\u7528 copy constructor \u7684\u65b9\u6cd5\uff0c\u5b83\u76f4\u63a5\u4f7f\u7528\u73b0\u6709\u5bf9\u8c61 p \u6765\u521b\u5efa\u65b0\u5bf9\u8c61 p2\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u3002 Copy assignment(\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u7b26) # \u662f C++\u4e2d\u7684\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u7684\u503c\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5c06\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u503c\u8d4b\u7ed9\u53e6\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u4f7f\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u503c\u3002 \u8bed\u6cd5\u683c\u5f0f\uff1a classname & operator = ( const classname & other ) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cC++\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u6d45\u590d\u5236\u7684 copy assignment \u8fd0\u7b97\u7b26 \u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a #include <iostream> #include <string> class Person { public : std :: string name ; int age ; Person () { name = \"meo\" ; age = 12 ; } Person ( std :: string _name , int _age ) : name ( _name ), age ( _age ) { } // copy constructor Person ( const Person & other ) { name = other . name ; age = other . age ; } // copy assignment Person & operator = ( const Person & other ) { name = other . name ; age = other . age ; return * this ; } }; int main ( void ) { Person p1 ( \"meow\" , 12 ); Person p2 ; p2 = p1 ; std :: cout << \"p1.name \" << p1 . name << \" age: \" << p1 . age << std :: endl ; std :: cout << \"p2.name \" << p2 . name << \" age: \" << p2 . age << std :: endl ; return 0 ; } \u6d45\u590d\u5236\u662f\u6307\u7b80\u5355\u5730\u5c06\u73b0\u6709\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u7684\u503c\u590d\u5236\u5230\u65b0\u5bf9\u8c61\u4e2d\u3002\u5982\u679c\u6210\u5458\u53d8\u91cf\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u90a3\u4e48\u6d45\u590d\u5236\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u662f\u7b80\u5355\u7684\u503c\u3002\u4f46\u662f\uff0c\u5982\u679c\u6210\u5458\u53d8\u91cf\u662f\u6307\u9488\uff0c\u6d45\u590d\u5236\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d45\u590d\u5236\u53ea\u4f1a\u590d\u5236\u6307\u9488\u672c\u8eab\uff0c\u800c\u4e0d\u4f1a\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u65b0\u5bf9\u8c61\u548c\u73b0\u6709\u5bf9\u8c61\u5c06\u5171\u4eab\u540c\u4e00\u5757\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u6216\u6570\u636e\u635f\u574f\u3002 \u6df1\u590d\u5236\u662f\u6307\u5c06\u73b0\u6709\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u7684\u503c\u590d\u5236\u5230\u65b0\u5bf9\u8c61\u4e2d\uff0c\u5e76\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u65b0\u5bf9\u8c61\u5c06\u6709\u81ea\u5df1\u7684\u6570\u636e\u526f\u672c\uff0c\u4e0e\u73b0\u6709\u5bf9\u8c61\u5b8c\u5168\u72ec\u7acb\u3002\u8fd9\u901a\u5e38\u9700\u8981\u624b\u52a8\u5b9e\u73b0\uff0c\u56e0\u4e3a C++\u9ed8\u8ba4\u63d0\u4f9b\u7684\u590d\u5236\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u53ea\u4f1a\u6267\u884c\u6d45\u590d\u5236\u3002 \u53cb\u5143 # \u53cb\u5143\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5141\u8bb8\u4e00\u4e2a\u51fd\u6570\u6216\u7c7b\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6216\u53d7\u4fdd\u62a4\u6210\u5458\u3002 \u53cb\u5143\u6709\u4e09\u79cd\uff1a \u53cb\u5143\u51fd\u6570 \u53cb\u5143\u7c7b \u53cb\u5143\u6210\u5458\u51fd\u6570 \u53cb\u5143\u51fd\u6570 # \u521b\u5efa\u53cb\u5143\u51fd\u6570\u5f97\u7b2c\u4e00\u6b65 hi \u628a\u539f\u578b\u653e\u5728\u7c7b\u58f0\u660e\u4e2d\uff0c\u5728\u539f\u578b\u58f0\u660e\u524d\u9762\u52a0\u4e0a friend \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53cb\u5143\u51fd\u6570\u5e76\u4e0d\u662f MyClass \u7684\u6210\u5458\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\uff0c\u53ea\u662f\u88ab\u58f0\u660e\u4e3a MyClass \u7684\u53cb\u5143\u51fd\u6570\u3002 #include <iostream> class Person { private : std :: string name ; int age ; public : Person ( std :: string _name , int _age ) : name ( _name ), age ( _age ){} friend void printValue ( Person & p ) { std :: cout << \"Person name: \" << p . name << \" \\t \" << \"Person age: \" << p . age << std :: endl ; } /* \u5728\u53cb\u5143\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u80fd\u8bbf\u95eePerson\u7c7b\u7684\u79c1\u6709\u6210\u5458\u53d8\u91cf */ }; int main ( void ) { Person p ( \"meow\" , 18 ); printValue ( p ); //\u53cb\u5143\u51fd\u6570\u4e0d\u662f\u7c7bPerson\u7684\u6210\u5458\u51fd\u6570 return 0 ; } \u53cb\u5143\u7c7b # \u53cb\u5143\u7c7b\u662f\u6307\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u52a0\u5bc6\u5207\u3002 \u4f8b\u5b50\uff1a #include <iostream> class MainClass { private : std :: string name ; int age ; public : MainClass () { name = \"Main class\" ; age = 129 ; } friend class FriendClass ; }; class FriendClass { private : std :: string name ; int age ; public : FriendClass () { name = \"friend\" ; age = 120 ; } void printMainClassInfo ( MainClass & m ) { std :: cout << \"MainClass!!!!\" << std :: endl ; std :: cout << m . name << \" \" << m . age << std :: endl ; } void printFriendClassInfo () { std :: cout << \"Friend!!!\" << std :: endl ; std :: cout << name << \" \" << age << std :: endl ; } }; int main ( void ) { MainClass m ; FriendClass f ; f . printFriendClassInfo (); f . printMainClassInfo ( m ); return 0 ; } \u8f6c\u6362\u51fd\u6570 # \u5728 C++ \u4e2d\uff0c\u8f6c\u6362\u51fd\u6570\uff08conversion function\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u53e6\u4e00\u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6307\u5411\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u3002\u8f6c\u6362\u51fd\u6570\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u7c7b\u4e2d\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\u578b\u8f6c\u6362\u89c4\u5219\uff0c\u4ece\u800c\u589e\u5f3a\u7c7b\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u8f6c\u6362\u51fd\u6570\u7684\u547d\u540d\u89c4\u5219\u4e0e\u6784\u9020\u51fd\u6570\u548c\u6210\u5458\u51fd\u6570\u76f8\u540c\uff0c\u4f7f\u7528\u7c7b\u540d\u4f5c\u4e3a\u51fd\u6570\u540d\uff0c\u5e76\u5728\u51fd\u6570\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u8981\u8f6c\u6362\u7684\u7c7b\u578b\u7684\u540d\u79f0\u3002\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u5177\u6709\u4efb\u4f55\u8fd4\u56de\u7c7b\u578b\uff0c\u4f46\u4e0d\u80fd\u5177\u6709\u4efb\u4f55\u53c2\u6570\u3002\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u88ab\u663e\u5f0f\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u81ea\u52a8\u8c03\u7528\u3002 #include <iostream> //\u8f6c\u6362\u51fd\u6570 class MyInt { private : int data ; public : explicit MyInt ( int n = 0 ) : data ( n ) { } operator int () const { return data ; } }; int main ( void ) { MyInt a ( 10 ); int b = a ; //\u8c03\u7528\u8f6c\u6362\u51fd\u6570\u628aMyInt\u5bf9\u8c61\u8f6c\u6362\u6210int\u7c7b\u578b using std :: cout ; using std :: endl ; cout << b << endl ; return 0 ; } #include <iostream> class Feet { private : int feet ; public : Feet ( int n = 0 ) : feet ( n ) {}; int getFeet () const { return feet ; } }; class Meters { public : Meters ( double m = 0.0 ) : meters ( m ) {} Meters ( const Feet & f ) : meters ( f . getFeet () * 0.3048 ) {} //\u8f6c\u6362\u51fd\u6570\uff0c\u628aFeet\u5bf9\u8c61\u8f6c\u6362\u4e3aMeters\u5bf9\u8c61 double getMeters () const { return meters ; } private : double meters ; }; int main ( void ) { Feet f ( 10 ); Meters m = f ; using std :: cout , std :: endl ; cout << m . getMeters () << endl ; return 0 ; }","title":"C++ OOP"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#c-oop","text":"","title":"C++ OOP"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#class1","text":"","title":"Class(1)"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#privateprotectedpublic","text":"","title":"private,protected,public"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#private\u9ed8\u8ba4\u5c31\u662f-private","text":"private \u58f0\u660e\u7684\u7c7b\u7684\u79c1\u6709\u6210\u5458\u53ea\u80fd\u7531\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u6210\u5458\u6216\u8005\u5b83\u4eec\u7684\u670b\u53cb\u8bbf\u95ee #include <iostream> #include <string> class Student { private : int score ; public : std :: string name ; int age ; Student ( std :: string _name , int _age , int _score ) : name ( _name ), age ( _age ), score ( _score ){ } void getScore (){ std :: cout << score << std :: endl ; } }; int main ( void ) { Student s ( \"meow\" , 18 , 100 ); s . getScore (); } \u6211\u4eec\u5982\u679c\u5728 main \u51fd\u6570\u4e2d\u76f4\u63a5\u7528\u5bf9\u8c61\u8f93\u51fa\u5b66\u751f\u7684\u5206\u6570\uff0c\u5c31\u4e0d\u80fd #include <iostream> #include <string> class Student { private : int score ; public : std :: string name ; int age ; Student ( std :: string _name , int _age , int _score ) : name ( _name ), age ( _age ), score ( _score ){ } void getScore (){ std :: cout << score << std :: endl ; } }; int main ( void ) { Student s ( \"meow\" , 18 , 100 ); std :: cout << s . score << std :: endl ; }","title":"private(\u9ed8\u8ba4\u5c31\u662f private)"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#protected","text":"protected \u53d7\u4fdd\u62a4\u7684\u6210\u5458\u53ef\u4ee5\u4ece\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u6210\u5458\uff08\u6216\u4ece\u4ed6\u4eec\u7684\u201c\u670b\u53cb\u201d\uff09\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u4ece\u5176\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u8bbf\u95ee\u3002 #include <iostream> #include <string> class Human { protected : std :: string name ; public : Human ( std :: string _name ) : name ( _name ){} void getHumanInfo () { std :: cout << \"Human name is: \" << name << std :: endl ; } //\u540c\u4e00\u7c7b\u6210\u5458\u8bbf\u95ee }; class Student : Human { public : int score ; Student ( std :: string _name , int _score ) : Human ( _name ), score ( _score ) { } void getStudentInfo () { std :: cout << \"Student name is :\" << name << \" \\t Student score is :\" << score << std :: endl ; } }; //\u6d3e\u751f\u7c7b\u6210\u5458\u8bbf\u95ee int main ( void ) { Student s ( \"meow\" , 100 ); s . getStudentInfo (); Human h ( \"meow\" ); h . getHumanInfo (); return 0 ; }","title":"protected"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#public","text":"\u516c\u5171\u6210\u5458\u53ef\u4ee5\u4ece\u5bf9\u8c61\u53ef\u89c1\u7684\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\u3002 \u8fd9\u91cc\u4e0d\u4f5c\u4ee3\u7801\u89e3\u91ca\u4e86\u3002\ud83d\ude0a","title":"public"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u5b9e\u73b0\u7c7b\u6210\u5458\u51fd\u6570","text":"#include <iostream> class Square { int width ; int height ; public : void setWidth ( int _width ) { width = _width ; } void setHeight ( int _height ) { height = _height ; } int getArea (); int getPerimeter (); }; int Square::getArea () { return width * height ; } int Square::getPerimeter () { return 2 * ( width + height ); } int main () { Square s ; s . setHeight ( 10 ); s . setWidth ( 19 ); std :: cout << s . getArea () << std :: endl ; } \u5f53\u7136\u4e86\uff0c\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u4ee5\u5728\u5916\u9762\u5b9e\u73b0!\ud83d\ude0a #include <iostream> #include <string> class Student { public : std :: string name ; int age ; Student ( std :: string , int ); void getStudentInfo () { std :: cout << name << \" \" << age << std :: endl ; } }; //\u5728\u5916\u9762\u5b9e\u73b0\u7c7b\u7684\u6784\u9020\u51fd\u6570 Student :: Student ( std :: string _name , int _age ) : name ( _name ), age ( _age ){} int main () { Student s ( \"meow\" , 10 ); s . getStudentInfo (); return 0 ; }","title":"\u5b9e\u73b0\u7c7b\u6210\u5458\u51fd\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u6784\u9020\u5668constructors","text":"","title":"\u6784\u9020\u5668\uff08Constructors\uff09"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#c-\u6784\u9020\u5668\u6700\u7b80\u5355\u7684\u5b9e\u4f8b","text":"#include <iostream> class Rectangle { int width ; int height ; public : Rectangle ( int , int ); void getArea (); }; Rectangle :: Rectangle ( int _w , int _h ) { width = _w ; height = _h ; } void Rectangle :: getArea () { std :: cout << width * height << std :: endl ; } int main ( void ) { Rectangle r ( 100 , 100 ); r . getArea (); } \u4e0a\u9762\u662f c++\u6784\u9020\u5668\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6cd5","title":"c++ \u6784\u9020\u5668\uff08\u6700\u7b80\u5355\u7684\u5b9e\u4f8b\uff09"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u91cd\u8f7d\u6784\u9020\u5668\u5305\u62ec\u6210\u5458\u521d\u59cb\u5316\u5217\u8868","text":"\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5047\u5982\u6211\u8981\u6c42\u7528 Rectangle r \u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4 width = 5 , height = 5 ,\u4f46\u662f\u53c8\u8981\u6c42\u80fd\u7ed9 Rectangle \u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u8d4b\u503c\uff0c\u6bd4\u5982\u8ba9width = 10,height = 20 , Rectangle r(10,20) . \u6211\u4eec\u5c31\u5f97\u8fd9\u4e48\u5199 #include <iostream> class Rectangle { int width ; int height ; public : Rectangle (); Rectangle ( int , int ); void getArea (){ std :: cout << width * height << std :: endl ; } }; Rectangle :: Rectangle () { width = 5 ; height = 5 ; } Rectangle :: Rectangle ( int w , int h ) { width = w ; height = h ; } int main ( void ) { Rectangle r ; r . getArea (); //25 Rectangle r2 ( 10 , 15 ); r2 . getArea (); //150 } \u5f53\u7136\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u5728\u5916\u9762\u5b9e\u73b0\u6784\u9020\u51fd\u6570\uff0c\u76f4\u63a5\u5728\u7c7b\u91cc\u9762\u5199\u4e5f\u662f\u53ef\u4ee5\u7684 #include <iostream> class Rectangle { int width ; int height ; public : Rectangle () { width = 5 ; height = 5 ; } Rectangle ( int _w , int _h ) { width = _w ; height = _h ; } void getArea (){ std :: cout << width * height << std :: endl ; } }; int main ( void ) { Rectangle r ; r . getArea (); //25 Rectangle r2 ( 10 , 15 ); r2 . getArea (); //150 } \ud83d\ude0a \u6709\u6ca1\u6709\u53d1\u73b0\u8fd9\u6837\u5f88\u9ebb\u70e6\u5462\uff1f \u5176\u5b9e\u5728 c++\u4e2d\u6709\u4e00\u4e2a\u4e1c\u897f\uff0c\u53eb \u6210\u5458\u521d\u59cb\u5316\u5217\u8868 \uff0c\u770b\u5230\u4e0a\u9762\u7684\u91cd\u8f7d\u7684\u7b2c\u4e8c\u4e2a\u6784\u9020\u51fd\u6570\u4e86\u5417\uff1f\u6211\u4eec\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u5199 Rectangle ( int _w , int _h ) : width ( _w ), height ( _h ) {}; \u8fd9\u6837\u5c31\u5927\u5927\u7b80\u5316\u4e86\u6211\u4eec\u7684\u6784\u9020\u51fd\u6570\u4e66\u5199\u5566\uff01\ud83d\ude0a","title":"\u91cd\u8f7d\u6784\u9020\u5668\uff08\u5305\u62ec\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\uff09"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u6307\u5411\u7c7b\u7684\u6307\u9488pointers-to-class","text":"\u5728 c++\u4e2d\uff0c\u6211\u4eec\u4e5f \u80fd\u7528\u6307\u9488\u53bb\u6307\u5411\u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u6307\u9488\u8c03\u7528\u7c7b #include <iostream> #include <string> class Human { std :: string name ; public : Human ( std :: string _name ) : name ( _name ){}; void getHumanInfo () { std :: cout << \"Human name is :\" << name << std :: endl ; } }; int main () { //\u521b\u5efaHuman\u5bf9\u8c61 Human h ( \"Mike\" ); Human * human = & h ; human -> getHumanInfo (); //\u901a\u8fc7\u6307\u9488\u8c03\u7528\u7c7b\u7684\u6210\u5458\u51fd\u6570 //Human name is :Mike return 0 ; } \ud83d\ude0a \u65e2\u7136\u8fd9\u6837\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u7c7b\u6570\u7ec4\u5566 #include <iostream> class Rectangle { int width , height ; public : Rectangle ( int _w , int _h ) : width ( _w ), height ( _h ){}; void getArea () { std :: cout << width * height << std :: endl ; } }; int main ( void ) { Rectangle r ( 10 , 20 ); Rectangle * ptr = new Rectangle [ 2 ]{{ 2 , 5 },{ 3 , 6 }}; ptr [ 0 ]. getArea (); //10 ptr [ 1 ]. getArea (); //18 delete [] ptr ; return 0 ; } \u5173\u4e8e\u6307\u9488\u548c new \u8fd9\u4e2a\u6211\u4f1a\u540e\u9762\u53c2\u8003 c++ primer plus \u8fdb\u884c\u8fdb\u4e00\u6b65\u8bf4\u660e","title":"\u6307\u5411\u7c7b\u7684\u6307\u9488\uff08Pointers to Class)"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u9759\u6001\u51fd\u6570","text":"C++ \u4e2d\u7684\u9759\u6001\u51fd\u6570\u662f\u6307\u5728\u7c7b\u4e2d\u4f7f\u7528static\u5173\u952e\u5b57\u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u3002\u5b83\u4e0e\u7c7b\u7684\u5b9e\u4f8b\u65e0\u5173\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61 \u9759\u6001\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u65b9\u5f0f\u4e0e\u666e\u901a\u6210\u5458\u51fd\u6570\u76f8\u540c\uff0c\u53ea\u9700\u8981\u5728\u51fd\u6570\u524d\u9762\u52a0\u4e0astatic\u5173\u952e\u5b57\u5c31\u884c\u3002\u9759\u6001\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u3002\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57this\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u9690\u542b\u7684\u6307\u5411\u5bf9\u8c61 \u7684\u6307\u9488 #include <iostream> class MyClass { public : static int getCount () { return count ; } private : static int count ; }; int MyClass :: count = 0 ; int main () { std :: cout << MyClass :: getCount () << std :: endl ; std :: cout << MyClass :: getCount () << std :: endl ; MyClass obj1 , obj2 ; std :: cout << obj1 . getCount () << std :: endl ; std :: cout << obj2 . getCount () << std :: endl ; return 0 ; }","title":"\u9759\u6001\u51fd\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u6790\u6784\u51fd\u6570","text":"C++\u4e2d\u6790\u6784\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u6267\u884c\u6e05\u7406\u5de5\u4f5c\u3002\u6790\u6784\u51fd\u6570\u7684\u540d\u79f0\u548c\u7c7b\u540d\u76f8\u540c\uff0c\u4f46\u5728\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u6ce2\u6d6a\u53f7~ #include <iostream> class MyClass { public : MyClass () { std :: cout << \"Constructor\" << std :: endl ; } ~ MyClass () { std :: cout << \"Destructor\" << std :: endl ; } }; int main () { MyClass obj ; return 0 ; } \u6790\u6784\u51fd\u6570\u7684\u5e94\u7528 #include <iostream> class MyClass { public : MyClass () { std :: cout << \"Constructor \" << std :: endl ; data = new int [ 10 ]; } ~ MyClass () { std :: cout << \"DestructorL: data\u5185\u5b58\u5df2\u88ab\u91ca\u653e\" << std :: endl ; delete [] data ; } void insertNum ( int x ) { if ( top > 9 ) return ; data [ top ++ ] = x ; } void printData () { for ( int i = 0 ; i <= top ; i ++ ) { std :: cout << data [ i ] << \" \" ; } std :: cout << std :: endl ; } private : int * data ; int top = 0 ; }; int main ( void ) { MyClass obj ; obj . insertNum ( 1 ); obj . insertNum ( 2 ); obj . insertNum ( 3 ); obj . insertNum ( 4 ); obj . insertNum ( 5 ); obj . insertNum ( 6 ); obj . printData (); return 0 ; }","title":"\u6790\u6784\u51fd\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#class2","text":"","title":"Class(2)"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u5c01\u88c5","text":"\u5b9a\u4e49\u4e86\u4e00\u4e2a Circle \u7c7b\uff0c\u5305\u542b\u4e86\u6570\u636e\u6210\u5458 radius \u548c\u6210\u5458\u51fd\u6570 getRadius() \u3001 setRadius() \u548c getArea() \u3002\u5176\u4e2d\uff0c getRadius() \u548c setRadius() \u5206\u522b\u7528\u4e8e\u83b7\u53d6\u548c\u8bbe\u7f6e\u534a\u5f84\u7684\u503c\uff0c getArea() \u7528\u4e8e\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u3002\u53ef\u4ee5\u770b\u51fa\uff0c radius \u6570\u636e\u6210\u5458\u88ab\u9690\u85cf\u5728\u7c7b\u7684\u79c1\u6709\u90e8\u5206\uff0c\u5916\u90e8\u7684\u8c03\u7528\u8005\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u5b83\uff0c\u53ea\u80fd\u901a\u8fc7\u516c\u5171\u7684\u6210\u5458\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u5c01\u88c5\u3002 \u5728 main() \u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Circle \u5bf9\u8c61 c \uff0c\u5e76\u901a\u8fc7\u516c\u5171\u7684\u6210\u5458\u51fd\u6570\u83b7\u53d6\u5e76\u4fee\u6539\u4e86\u534a\u5f84\u7684\u503c\uff0c\u5e76\u8ba1\u7b97\u5706\u7684\u9762\u79ef\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5916\u90e8\u8c03\u7528\u8005\u53ea\u80fd\u901a\u8fc7\u516c\u5171\u7684\u63a5\u53e3\u6765\u8bbf\u95ee\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u79c1\u6709\u6210\u5458\u53d8\u91cf\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u901a\u8fc7\u5c01\u88c5\uff0cC++ \u4e2d\u7684\u7c7b\u53ef\u4ee5\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u65b9\u6cd5\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8bbe\u8ba1\u7c7b\u7684\u63a5\u53e3\u65f6\uff0c\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u66b4\u9732\u5fc5\u8981\u7684\u63a5\u53e3\uff0c\u907f\u514d\u5916\u90e8\u8c03\u7528\u8005\u8bef\u64cd\u4f5c\u6570\u636e\uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u548c\u53ef\u9760\u6027\u3002 #include <iostream> class Circle { public : Circle ( double r ) : radius ( r ) {} double getRadius () const { return radius ; } void setRadius ( double r ) { radius = r ; } double getArea () const { return 3.14 * radius * radius ; } private : double radius ; }; int main () { Circle c ( 2.0 ); std :: cout << \"Radius = \" << c . getRadius () << std :: endl ; std :: cout << \"Area = \" << c . getArea () << std :: endl ; c . setRadius ( 3.0 ); std :: cout << \"Radius = \" << c . getRadius () << std :: endl ; std :: cout << \"Area = \" << c . getArea () << std :: endl ; return 0 ; }","title":"\u5c01\u88c5"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u7ee7\u627f","text":"C++ \u4e2d\u7684\u7ee7\u627f\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u5b83\u5141\u8bb8\u901a\u8fc7\u6d3e\u751f\u7c7b\u6765\u6269\u5c55\u57fa\u7c7b\u7684\u529f\u80fd\uff0c\u4ece\u800c\u5b9e\u73b0\u4ee3\u7801\u7684\u91cd\u7528\u548c\u6269\u5c55\u3002 #include <iostream> class Animal { public : Animal ( const std :: string & _name ) : name ( _name ){}; virtual void speak () const { std :: cout << \"I am an animal.\" << std :: endl ; } protected : std :: string name ; }; class Dog : public Animal { public : Dog ( const std :: string & _name , const std :: string & _breed ) : Animal ( _name ), breed ( _breed ){}; virtual void speak () const { std :: cout << \"Woof! I am a dog.\" << std :: endl ; } private : std :: string breed ; }; class Cat : public Animal { public : Cat ( const std :: string & _name , const std :: string & _color ) : Animal ( _name ), color ( _color ) {}; virtual void speak () const { std :: cout << \"Meow! I am a Cat.\" << std :: endl ; } private : std :: string color ; }; int main ( void ) { Animal * animals [ 3 ]; animals [ 0 ] = new Animal ( \"Generic Animal\" ); animals [ 1 ] = new Dog ( \"Rover\" , \"Golden Retriever\" ); animals [ 2 ] = new Cat ( \"Fluffy\" , \"White\" ); for ( int i = 0 ; i < 3 ; ++ i ) { animals [ i ] -> speak (); } delete animals [ 0 ]; delete animals [ 1 ]; delete animals [ 2 ]; } \u8fd9\u91cc\u6211\u6765\u6d45\u6d45\u4ecb\u7ecd\u4e00\u4e0bvirtual\u8fd9\u4e2a\u5173\u952e\u5b57","title":"\u7ee7\u627f"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u865a\u51fd\u6570-virtual-function","text":"\u5728 C++ \u4e2d\uff0cvirtual \u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u5b9a\u4e49\u865a\u51fd\u6570\u3002\u865a\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b83\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\uff08dynamic binding\uff09\u673a\u5236\u6765\u5b9e\u73b0\u591a\u6001\uff0c\u5141\u8bb8\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u540c\u4e00\u51fd\u6570\u540d\u5728\u4e0d\u540c\u5bf9\u8c61\u4e0a\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a\u3002 \u5728\u4f7f\u7528 virtual \u5173\u952e\u5b57\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a \u53ea\u6709\u7c7b\u7684\u6210\u5458\u51fd\u6570\u624d\u80fd\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u800c\u666e\u901a\u7684\u5168\u5c40\u51fd\u6570\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002 \u865a\u51fd\u6570\u5fc5\u987b\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e\uff0c\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\uff0c\u4f46\u662f\u5fc5\u987b\u4fdd\u6301\u51fd\u6570\u540d\u3001\u53c2\u6570\u7c7b\u578b\u548c\u8fd4\u56de\u7c7b\u578b\u76f8\u540c\uff0c\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002 \u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e94\u8be5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u4fdd\u8bc1\u5728\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u5730\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u5728\u4e0a\u9762\u5199\u7ee7\u627f\u5f97\u65f6\u5019\uff0c\u5c31\u5df2\u7ecf\u4f53\u73b0\u51fa\u4e86\u865a\u51fd\u6570\u5f97\u4f5c\u7528","title":"\u865a\u51fd\u6570 virtual function"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u62bd\u8c61\u7c7b","text":"\u5728 C++ \u4e2d\uff0c\u62bd\u8c61\u7c7b\uff08Abstract Class\uff09\u6307\u7684\u662f\u5305\u542b\u81f3\u5c11\u4e00\u4e2a**\u7eaf\u865a\u51fd\u6570**\u7684\u7c7b\uff0c\u4e0d\u80fd\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u53ea\u80fd\u4f5c\u4e3a\u57fa\u7c7b\u88ab\u7ee7\u627f\u3002\u7eaf\u865a\u51fd\u6570\u662f\u5728\u7c7b\u4e2d\u58f0\u660e\u4f46\u6ca1\u6709\u5b9a\u4e49\u7684\u865a\u51fd\u6570\uff0c\u5176\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a virtual \u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d ( \u53c2\u6570\u5217\u8868 ) = 0 ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7eaf\u865a\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u4f53\uff0c\u53ea\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u5176\u4f5c\u7528\u662f\u5f3a\u5236\u6d3e\u751f\u7c7b\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002 \u62bd\u8c61\u7c7b\u4e00\u822c\u7528\u4e8e\u5b9a\u4e49\u63a5\u53e3\u548c\u89c4\u8303\u6d3e\u751f\u7c7b\u7684\u884c\u4e3a\uff0c\u5176\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u57fa\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\u3002\u62bd\u8c61\u7c7b\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9a\u4e49\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\u5b9e\u73b0\u591a\u6001\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5b9a\u4e49\u62bd\u8c61\u7c7b\u65f6\uff0c\u5e94\u8be5\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u4fdd\u8bc1\u6b63\u786e\u91ca\u653e\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5185\u5b58\u3002\u540c\u65f6\uff0c\u62bd\u8c61\u7c7b\u7684\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u57fa\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\u3002","title":"\u62bd\u8c61\u7c7b"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u63a5\u53e3-interface","text":"\u5728 C++ \u4e2d\uff0c\u63a5\u53e3\uff08Interface\uff09\u6307\u7684\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5305\u542b\u7eaf\u865a\u51fd\u6570\u548c\uff08\u6216\uff09\u5e38\u91cf\u6570\u636e\u6210\u5458\uff0c\u6ca1\u6709\u6570\u636e\u6210\u5458\u548c\u51fd\u6570\u5b9e\u73b0\u3002\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u7ec4\u89c4\u8303\uff0c\u89c4\u5b9a\u4e86\u6d3e\u751f\u7c7b\u9700\u8981\u5b9e\u73b0\u7684\u51fd\u6570\u548c\u6570\u636e\u6210\u5458\uff0c\u7528\u4e8e\u5b9e\u73b0\u7c7b\u7684\u591a\u6001\u548c\u5c01\u88c5\u3002 \u63a5\u53e3\u5728 C++ \u4e2d\u901a\u5e38\u4f7f\u7528\u62bd\u8c61\u7c7b\u6765\u5b9a\u4e49\uff0c\u5176\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\u548c\u5e38\u91cf\u6570\u636e\u6210\u5458\u7528\u4e8e\u63cf\u8ff0\u6d3e\u751f\u7c7b\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u89c4\u8303\u3002\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5305\u542b\u975e\u7eaf\u865a\u51fd\u6570\u548c\u6570\u636e\u6210\u5458\uff0c\u800c\u63a5\u53e3\u53ea\u80fd\u5305\u542b\u7eaf\u865a\u51fd\u6570\u548c\u5e38\u91cf\u6570\u636e\u6210\u5458\u3002 \u4f7f\u7528\u6848\u4f8b\uff1a \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3 Printable \uff0c\u5305\u542b\u4e86\u7eaf\u865a\u51fd\u6570 print() \u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u7c7b Shape \uff0c\u7ee7\u627f\u4e86\u63a5\u53e3 Printable \uff0c\u5305\u542b\u4e86\u7eaf\u865a\u51fd\u6570**getArea() \u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6d3e\u751f\u7c7b **Rectangle \u548c Circle \uff0c\u5206\u522b\u5b9e\u73b0\u4e86\u57fa\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5e76\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Printable \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5206\u522b\u7528\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u6570\u7ec4\u5143\u7d20\u3002\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u6570\u7ec4\uff0c\u5e76\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570 print() \u548c getArea() \uff0c\u5b9e\u73b0\u4e86\u591a\u6001\u7684\u6548\u679c\u3002 \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0cPrintable \u63a5\u53e3\u89c4\u5b9a\u4e86 print() \u51fd\u6570\uff0cShape \u62bd\u8c61\u7c7b\u7ee7\u627f\u4e86 Printable \u63a5\u53e3\uff0c\u5e76\u89c4\u5b9a\u4e86 getArea() \u51fd\u6570\uff0cRectangle \u548c Circle \u6d3e\u751f\u7c7b\u5206\u522b\u5b9e\u73b0\u4e86 Shape \u62bd\u8c61\u7c7b\u7684 getArea() \u548c print() \u51fd\u6570\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Printable \u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5305\u542b\u4e86 Rectangle \u548c Circle \u4e24\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u5faa\u73af\u5b9e\u73b0\u4e86\u591a\u6001\u7684\u6548\u679c\u3002 #include <iostream> class Printable { public : virtual void print () const = 0 ; }; class Shape : public Printable { public : virtual double getArea () const = 0 ; }; class Rectangle : public Shape { public : Rectangle ( double w , double h ) : width ( w ), height ( h ) {} virtual double getArea () const { return width * height ; } virtual void print () const { std :: cout << \"Rectangle (\" << width << \" x \" << height << \")\" << std :: endl ; } private : double width ; double height ; }; class Circle : public Shape { public : Circle ( double r ) : radius ( r ) {} virtual double getArea () const { return 3.14 * radius * radius ; } virtual void print () const { std :: cout << \"Circle (\" << radius << \")\" << std :: endl ; } private : double radius ; }; int main () { Printable * shapes [ 2 ]; shapes [ 0 ] = new Rectangle ( 2.0 , 3.0 ); shapes [ 1 ] = new Circle ( 1.5 ); for ( int i = 0 ; i < 2 ; ++ i ) { shapes [ i ] -> print (); std :: cout << \"Area = \" << dynamic_cast < Shape *> ( shapes [ i ]) -> getArea () << std :: endl ; } delete shapes [ 0 ]; delete shapes [ 1 ]; return 0 ; }","title":"\u63a5\u53e3 Interface"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u591a\u6001","text":"\u591a\u6001\uff08Polymorphism\uff09\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u6307\u7684\u662f\u540c\u4e00\u51fd\u6570\u540d\u5728\u4e0d\u540c\u5bf9\u8c61\u4e0a\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a. #include <iostream> class Shape { public : virtual double getArea () const = 0 ; virtual void print () const = 0 ; virtual ~ Shape (){}; }; class Rectangle : public Shape { public : Rectangle ( double w , double h ) : width ( w ), height ( h ) {} virtual double getArea () const { return width * height ; } virtual void print () const { std :: cout << \"Rectangle (\" << width << \" x \" << height << \")\" << std :: endl ; } private : double width ; double height ; }; class Circle : public Shape { public : Circle ( double r ) : radius ( r ) {} virtual double getArea () const { return 3.14 * radius * radius ; } virtual void print () const { std :: cout << \"Circle (\" << radius << \")\" << std :: endl ; } private : double radius ; }; int main () { Shape * shapes [ 2 ]; shapes [ 0 ] = new Rectangle ( 2.0 , 3.0 ); shapes [ 1 ] = new Circle ( 1.5 ); for ( int i = 0 ; i < 2 ; ++ i ) { shapes [ i ] -> print (); std :: cout << \"Area = \" << shapes [ i ] -> getArea () << std :: endl ; } delete shapes [ 0 ]; delete shapes [ 1 ]; return 0 ; }","title":"\u591a\u6001"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u91cd\u8f7d\u8fd0\u7b97\u7b26overloading-operators","text":"\u53ef\u91cd\u8f7d\u8fd0\u7b97\u7b26 \u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5\u62ff\u725b\u5ba2\u7f51\u7684\u9898\u6765\u8bf4\u660e\u4e86\uff0c\u5305\u62ec\u91cd\u8f7d\u8fd0\u7b97\u7b26\u6709\u4ec0\u4e48\u7528 \u91cd\u8f7d\u5c0f\u4e8e\u53f7__\u725b\u5ba2\u7f51 (nowcoder.com) #include <iostream> using namespace std ; class Time { public : int hours ; // \u5c0f\u65f6 int minutes ; // \u5206\u949f Time () { hours = 0 ; minutes = 0 ; } Time ( int h , int m ) { this -> hours = h ; this -> minutes = m ; } void show () { cout << hours << \" \" << minutes << endl ; } // write your code here...... bool operator < ( Time b ){ if ( hours > b . hours && minutes > b . minutes ){ return false ; } else if ( hours == b . hours && minutes == b . minutes ) return false ; else return true ; } }; int main () { int h , m ; cin >> h ; cin >> m ; Time t1 ( h , m ); Time t2 ( 6 , 6 ); if ( t1 < t2 ) cout << \"yes\" ; else cout << \"no\" ; return 0 ; } \u52a0\u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d__\u725b\u5ba2\u7f51 (nowcoder.com) #include <iostream> using namespace std ; class Time { public : int hours ; // \u5c0f\u65f6 int minutes ; // \u5206\u949f Time () { hours = 0 ; minutes = 0 ; } Time ( int h , int m ) { this -> hours = h ; this -> minutes = m ; } void show () { cout << hours << \" \" << minutes << endl ; } // write your code here...... Time operator + ( Time b ) { int sum_hours = hours + b . hours ; int sum_minutes = minutes + b . minutes ; if ( sum_minutes >= 60 ) { sum_minutes -= 60 ; sum_hours += 1 ; } Time sum ( sum_hours , sum_minutes ); return sum ; } }; int main () { int h , m ; cin >> h ; cin >> m ; Time t1 ( h , m ); Time t2 ( 2 , 20 ); Time t3 = t1 + t2 ; t3 . show (); return 0 ; }","title":"\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff08overloading operators)"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#copy-constructor","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6784\u9020\u51fd\u6570\uff0c\u5b83\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u662f\u4f7f\u7528\u540c\u4e00\u7c7b\u4e2d\u4e4b\u524d\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u901a\u5e38\u7528\u4e8e\uff1a \u901a\u8fc7\u4f7f\u7528\u53e6\u4e00\u4e2a\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u3002 \u590d\u5236\u5bf9\u8c61\u628a\u5b83\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u3002 \u590d\u5236\u5bf9\u8c61\uff0c\u5e76\u4ece\u51fd\u6570\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61\u3002 \u5982\u679c\u5728\u7c7b\u4e2d\u6ca1\u6709\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u884c\u5b9a\u4e49\u4e00\u4e2a\u3002\u5982\u679c\u7c7b\u5e26\u6709\u6307\u9488\u53d8\u91cf\uff0c\u5e76\u6709\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u5219\u5b83\u5fc5\u987b\u6709\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u6700\u5e38\u89c1\u5f62\u5f0f\u5982\u4e0b\uff1a classname ( const classname & obj ) { // \u6784\u9020\u51fd\u6570\u7684\u4e3b\u4f53 } #include <iostream> using namespace std ; class Person { public : string name ; int age ; Person () { name = \"meow\" ; age = 10 ; } Person ( string _name , int _age ) { name = _name ; age = _age ; } Person ( const Person & other ) { name = other . name ; age = other . age ; } void getInfo () { cout << name << \" \" << age << \" \" << endl ; } }; int main () { Person p ( \"mew\" , 19 ); Person p1 = p ; Person p2 ( p ); p . getInfo (); p1 . getInfo (); p2 . getInfo (); return 0 ; } p1 \u662f\u901a\u8fc7\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u6765\u521d\u59cb\u5316\u7684\uff0c\u5373 Person p1 = p;\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u9690\u5f0f\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528 copy constructor \u6765\u521b\u5efa p1 \u5bf9\u8c61\uff0c\u5e76\u5c06 p \u5bf9\u8c61\u7684\u503c\u590d\u5236\u5230 p1 \u5bf9\u8c61\u4e2d\u3002 \u800c p2 \u662f\u901a\u8fc7\u76f4\u63a5\u8c03\u7528 copy constructor \u6765\u521d\u59cb\u5316\u7684\uff0c\u5373 Person p2(p);\u3002\u8fd9\u662f\u4e00\u79cd\u663e\u5f0f\u8c03\u7528 copy constructor \u7684\u65b9\u6cd5\uff0c\u5b83\u76f4\u63a5\u4f7f\u7528\u73b0\u6709\u5bf9\u8c61 p \u6765\u521b\u5efa\u65b0\u5bf9\u8c61 p2\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u8d4b\u503c\u8bed\u53e5\u3002","title":"Copy Constructor"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#copy-assignment\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u7b26","text":"\u662f C++\u4e2d\u7684\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u7684\u503c\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5c06\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u503c\u8d4b\u7ed9\u53e6\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u4f7f\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u503c\u3002 \u8bed\u6cd5\u683c\u5f0f\uff1a classname & operator = ( const classname & other ) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cC++\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u6d45\u590d\u5236\u7684 copy assignment \u8fd0\u7b97\u7b26 \u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a #include <iostream> #include <string> class Person { public : std :: string name ; int age ; Person () { name = \"meo\" ; age = 12 ; } Person ( std :: string _name , int _age ) : name ( _name ), age ( _age ) { } // copy constructor Person ( const Person & other ) { name = other . name ; age = other . age ; } // copy assignment Person & operator = ( const Person & other ) { name = other . name ; age = other . age ; return * this ; } }; int main ( void ) { Person p1 ( \"meow\" , 12 ); Person p2 ; p2 = p1 ; std :: cout << \"p1.name \" << p1 . name << \" age: \" << p1 . age << std :: endl ; std :: cout << \"p2.name \" << p2 . name << \" age: \" << p2 . age << std :: endl ; return 0 ; } \u6d45\u590d\u5236\u662f\u6307\u7b80\u5355\u5730\u5c06\u73b0\u6709\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u7684\u503c\u590d\u5236\u5230\u65b0\u5bf9\u8c61\u4e2d\u3002\u5982\u679c\u6210\u5458\u53d8\u91cf\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u90a3\u4e48\u6d45\u590d\u5236\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u662f\u7b80\u5355\u7684\u503c\u3002\u4f46\u662f\uff0c\u5982\u679c\u6210\u5458\u53d8\u91cf\u662f\u6307\u9488\uff0c\u6d45\u590d\u5236\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6d45\u590d\u5236\u53ea\u4f1a\u590d\u5236\u6307\u9488\u672c\u8eab\uff0c\u800c\u4e0d\u4f1a\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u65b0\u5bf9\u8c61\u548c\u73b0\u6709\u5bf9\u8c61\u5c06\u5171\u4eab\u540c\u4e00\u5757\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u6216\u6570\u636e\u635f\u574f\u3002 \u6df1\u590d\u5236\u662f\u6307\u5c06\u73b0\u6709\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u7684\u503c\u590d\u5236\u5230\u65b0\u5bf9\u8c61\u4e2d\uff0c\u5e76\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u65b0\u5bf9\u8c61\u5c06\u6709\u81ea\u5df1\u7684\u6570\u636e\u526f\u672c\uff0c\u4e0e\u73b0\u6709\u5bf9\u8c61\u5b8c\u5168\u72ec\u7acb\u3002\u8fd9\u901a\u5e38\u9700\u8981\u624b\u52a8\u5b9e\u73b0\uff0c\u56e0\u4e3a C++\u9ed8\u8ba4\u63d0\u4f9b\u7684\u590d\u5236\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u53ea\u4f1a\u6267\u884c\u6d45\u590d\u5236\u3002","title":"Copy assignment(\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u7b26)"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u53cb\u5143","text":"\u53cb\u5143\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5141\u8bb8\u4e00\u4e2a\u51fd\u6570\u6216\u7c7b\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6216\u53d7\u4fdd\u62a4\u6210\u5458\u3002 \u53cb\u5143\u6709\u4e09\u79cd\uff1a \u53cb\u5143\u51fd\u6570 \u53cb\u5143\u7c7b \u53cb\u5143\u6210\u5458\u51fd\u6570","title":"\u53cb\u5143"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u53cb\u5143\u51fd\u6570","text":"\u521b\u5efa\u53cb\u5143\u51fd\u6570\u5f97\u7b2c\u4e00\u6b65 hi \u628a\u539f\u578b\u653e\u5728\u7c7b\u58f0\u660e\u4e2d\uff0c\u5728\u539f\u578b\u58f0\u660e\u524d\u9762\u52a0\u4e0a friend \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53cb\u5143\u51fd\u6570\u5e76\u4e0d\u662f MyClass \u7684\u6210\u5458\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\uff0c\u53ea\u662f\u88ab\u58f0\u660e\u4e3a MyClass \u7684\u53cb\u5143\u51fd\u6570\u3002 #include <iostream> class Person { private : std :: string name ; int age ; public : Person ( std :: string _name , int _age ) : name ( _name ), age ( _age ){} friend void printValue ( Person & p ) { std :: cout << \"Person name: \" << p . name << \" \\t \" << \"Person age: \" << p . age << std :: endl ; } /* \u5728\u53cb\u5143\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u80fd\u8bbf\u95eePerson\u7c7b\u7684\u79c1\u6709\u6210\u5458\u53d8\u91cf */ }; int main ( void ) { Person p ( \"meow\" , 18 ); printValue ( p ); //\u53cb\u5143\u51fd\u6570\u4e0d\u662f\u7c7bPerson\u7684\u6210\u5458\u51fd\u6570 return 0 ; }","title":"\u53cb\u5143\u51fd\u6570"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u53cb\u5143\u7c7b","text":"\u53cb\u5143\u7c7b\u662f\u6307\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u66f4\u52a0\u5bc6\u5207\u3002 \u4f8b\u5b50\uff1a #include <iostream> class MainClass { private : std :: string name ; int age ; public : MainClass () { name = \"Main class\" ; age = 129 ; } friend class FriendClass ; }; class FriendClass { private : std :: string name ; int age ; public : FriendClass () { name = \"friend\" ; age = 120 ; } void printMainClassInfo ( MainClass & m ) { std :: cout << \"MainClass!!!!\" << std :: endl ; std :: cout << m . name << \" \" << m . age << std :: endl ; } void printFriendClassInfo () { std :: cout << \"Friend!!!\" << std :: endl ; std :: cout << name << \" \" << age << std :: endl ; } }; int main ( void ) { MainClass m ; FriendClass f ; f . printFriendClassInfo (); f . printMainClassInfo ( m ); return 0 ; }","title":"\u53cb\u5143\u7c7b"},{"location":"Blogs/meowrain/c%2B%2B/c%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#\u8f6c\u6362\u51fd\u6570","text":"\u5728 C++ \u4e2d\uff0c\u8f6c\u6362\u51fd\u6570\uff08conversion function\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u53e6\u4e00\u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u6216\u8005\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6307\u5411\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u3002\u8f6c\u6362\u51fd\u6570\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u7c7b\u4e2d\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\u578b\u8f6c\u6362\u89c4\u5219\uff0c\u4ece\u800c\u589e\u5f3a\u7c7b\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u8f6c\u6362\u51fd\u6570\u7684\u547d\u540d\u89c4\u5219\u4e0e\u6784\u9020\u51fd\u6570\u548c\u6210\u5458\u51fd\u6570\u76f8\u540c\uff0c\u4f7f\u7528\u7c7b\u540d\u4f5c\u4e3a\u51fd\u6570\u540d\uff0c\u5e76\u5728\u51fd\u6570\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u8981\u8f6c\u6362\u7684\u7c7b\u578b\u7684\u540d\u79f0\u3002\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u5177\u6709\u4efb\u4f55\u8fd4\u56de\u7c7b\u578b\uff0c\u4f46\u4e0d\u80fd\u5177\u6709\u4efb\u4f55\u53c2\u6570\u3002\u8f6c\u6362\u51fd\u6570\u53ef\u4ee5\u88ab\u663e\u5f0f\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u81ea\u52a8\u8c03\u7528\u3002 #include <iostream> //\u8f6c\u6362\u51fd\u6570 class MyInt { private : int data ; public : explicit MyInt ( int n = 0 ) : data ( n ) { } operator int () const { return data ; } }; int main ( void ) { MyInt a ( 10 ); int b = a ; //\u8c03\u7528\u8f6c\u6362\u51fd\u6570\u628aMyInt\u5bf9\u8c61\u8f6c\u6362\u6210int\u7c7b\u578b using std :: cout ; using std :: endl ; cout << b << endl ; return 0 ; } #include <iostream> class Feet { private : int feet ; public : Feet ( int n = 0 ) : feet ( n ) {}; int getFeet () const { return feet ; } }; class Meters { public : Meters ( double m = 0.0 ) : meters ( m ) {} Meters ( const Feet & f ) : meters ( f . getFeet () * 0.3048 ) {} //\u8f6c\u6362\u51fd\u6570\uff0c\u628aFeet\u5bf9\u8c61\u8f6c\u6362\u4e3aMeters\u5bf9\u8c61 double getMeters () const { return meters ; } private : double meters ; }; int main ( void ) { Feet f ( 10 ); Meters m = f ; using std :: cout , std :: endl ; cout << m . getMeters () << endl ; return 0 ; }","title":"\u8f6c\u6362\u51fd\u6570"},{"location":"Blogs/meowrain/c%2B%2B/const_nonconst/","text":"const vs. non-const for member functions # const objects can only call const functions Let's have a look! As you can see,the object is decorated by const,so it can not call the getName() member function. But if we decorate the function using const after it,which means that it becomes a const member function. Since then,it can not change the object's attribute,because it is a const member function. Rember: Placing const after the function's parameter list indicates that the function is a const member function.This means that the function won't modify any non- mutable members of the class. It's a promise that the function won't change the state of the object it's called on. So,what's the meaning of const before the function. Placing const before the function's return type indicates that the returned value is a constant value. It means that the function returns a const value, and this value cannot be modified. So,what is mutable ,just see the article in my blog...","title":"const vs. non-const for member functions"},{"location":"Blogs/meowrain/c%2B%2B/const_nonconst/#const-vs-non-const-for-member-functions","text":"const objects can only call const functions Let's have a look! As you can see,the object is decorated by const,so it can not call the getName() member function. But if we decorate the function using const after it,which means that it becomes a const member function. Since then,it can not change the object's attribute,because it is a const member function. Rember: Placing const after the function's parameter list indicates that the function is a const member function.This means that the function won't modify any non- mutable members of the class. It's a promise that the function won't change the state of the object it's called on. So,what's the meaning of const before the function. Placing const before the function's return type indicates that the returned value is a constant value. It means that the function returns a const value, and this value cannot be modified. So,what is mutable ,just see the article in my blog...","title":"const vs. non-const for member functions"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/","text":"const \u4e0ec++\u6307\u9488 # cosnt \u662fc++\u4e2d\u7528\u4e8e\u58f0\u660e\u5e38\u91cf\u7684\u5173\u952e\u5b57\u3002\u53ef\u4ee5\u7528\u6765\u4fee\u9970\u53d8\u91cf\uff0c\u6307\u9488\uff0c\u51fd\u6570\u53c2\u6570\u548c\u51fd\u6570\u8fd4\u56de\u503c \u4f7f\u7528const\u5173\u952e\u5b57\u80fd\u8ba9\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u6216\u8005\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u4e0d\u80fd\u4fee\u6539 \u9632\u6b62\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6570\u636e # \u901a\u8fc7\u628a\u6307\u9488\u58f0\u660e\u4e3a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u9632\u6b62\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6570\u636e\uff0c\u8fd9\u5bf9\u4e8e\u4f20\u9012\u51fd\u6570\u53c2\u6570\u6216\u8005\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u6307\u9488\u65f6\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u786e\u4fdd\u88ab\u6307\u5411\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u4fee\u6539 \u793a\u4f8b\uff1a #include <iostream> void print ( const int * ptr ){ //ptr\u6307\u5411\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539 // *ptr = 10;//\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c std :: cout << * ptr << std :: endl ; } int main ( void ) { int x = 5 ; print ( & x ); return 0 ; } \u58f0\u660e\u5e38\u91cf\u6307\u9488 # \u4ec0\u4e48\u662f\u5e38\u91cf\u6307\u9488? # \u4f7f\u7528const \u5173\u952e\u5b57\u5c06\u6307\u9488\u672c\u8eab\u58f0\u660e\u4e3a\u5e38\u91cf\u6307\u9488\uff0c\u5373\u6307\u9488\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u8fd9\u610f\u5473\u7740\u6307\u9488\u59cb\u7ec8\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5730\u5740 #include <iostream> int main ( void ){ int x = 5 ; int s = 6 ; int * const str = & x ; * ptr = 10 ; //\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6307\u9488\u6307\u5411\u5730\u5740\u4e0a\u7684\u503c // ptr = &6; //\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u6307\u9488\u53d8\u91cf\u91cc\u9762\u5b58\u50a8\u7684\u5730\u5740 } \u5e38\u91cf\u6307\u9488\u6307\u5411\u5e38\u91cf # \u901a\u8fc7\u5c06\u6307\u9488\u58f0\u660e\u4e3a\u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c\uff0c\u4e5f\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c \u8fd9\u6837\u786e\u4fdd\u6307\u9488\u4e0d\u4f1a\u6307\u5411\u5176\u4ed6\u5730\u5740\uff0c\u4e5f\u4e0d\u80fd\u4fee\u6539\u6240\u6307\u5411\u7684\u503c #include <iostream> int main ( void ) { const int x = 5 ; const int * const str = & x ; //ptr\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488 // *ptr = 10; //\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6240\u6307\u5411\u7684\u503c // ptr = nullptr; //\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c } Summary # #include <iostream> int main ( void ) { int x = 5 ; const int * str = & x ; //\u8fd9\u6837\u7684\u6307\u9488\u662f\u6ca1\u529e\u6cd5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c\uff0cstr\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cfint\u7684\u6307\u9488 int m = 6 ; int * const st = & m ; //\u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c } int* const a ==> \u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c \u8fd9\u91cc\u548c int const *a \u662f\u7b49\u540c\u7684 const int *a ==> \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4e0d\u80fd\u6307\u9488\u4fee\u6539\u6307\u5411\u7684\u503c const int* const a ==> \u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488\uff0c\u4e0a\u9762\u4e24\u79cd\u90fd\u4e0d\u884c","title":"const \u4e0ec++\u6307\u9488"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/#const-\u4e0ec\u6307\u9488","text":"cosnt \u662fc++\u4e2d\u7528\u4e8e\u58f0\u660e\u5e38\u91cf\u7684\u5173\u952e\u5b57\u3002\u53ef\u4ee5\u7528\u6765\u4fee\u9970\u53d8\u91cf\uff0c\u6307\u9488\uff0c\u51fd\u6570\u53c2\u6570\u548c\u51fd\u6570\u8fd4\u56de\u503c \u4f7f\u7528const\u5173\u952e\u5b57\u80fd\u8ba9\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u6216\u8005\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u4e0d\u80fd\u4fee\u6539","title":"const \u4e0ec++\u6307\u9488"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/#\u9632\u6b62\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6570\u636e","text":"\u901a\u8fc7\u628a\u6307\u9488\u58f0\u660e\u4e3a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u9632\u6b62\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6570\u636e\uff0c\u8fd9\u5bf9\u4e8e\u4f20\u9012\u51fd\u6570\u53c2\u6570\u6216\u8005\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u6307\u9488\u65f6\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u786e\u4fdd\u88ab\u6307\u5411\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u4fee\u6539 \u793a\u4f8b\uff1a #include <iostream> void print ( const int * ptr ){ //ptr\u6307\u5411\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539 // *ptr = 10;//\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c std :: cout << * ptr << std :: endl ; } int main ( void ) { int x = 5 ; print ( & x ); return 0 ; }","title":"\u9632\u6b62\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6570\u636e"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/#\u58f0\u660e\u5e38\u91cf\u6307\u9488","text":"","title":"\u58f0\u660e\u5e38\u91cf\u6307\u9488"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/#\u4ec0\u4e48\u662f\u5e38\u91cf\u6307\u9488","text":"\u4f7f\u7528const \u5173\u952e\u5b57\u5c06\u6307\u9488\u672c\u8eab\u58f0\u660e\u4e3a\u5e38\u91cf\u6307\u9488\uff0c\u5373\u6307\u9488\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u8fd9\u610f\u5473\u7740\u6307\u9488\u59cb\u7ec8\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5730\u5740 #include <iostream> int main ( void ){ int x = 5 ; int s = 6 ; int * const str = & x ; * ptr = 10 ; //\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u4fee\u6539\u6307\u9488\u6307\u5411\u5730\u5740\u4e0a\u7684\u503c // ptr = &6; //\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u6307\u9488\u53d8\u91cf\u91cc\u9762\u5b58\u50a8\u7684\u5730\u5740 }","title":"\u4ec0\u4e48\u662f\u5e38\u91cf\u6307\u9488?"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/#\u5e38\u91cf\u6307\u9488\u6307\u5411\u5e38\u91cf","text":"\u901a\u8fc7\u5c06\u6307\u9488\u58f0\u660e\u4e3a\u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c\uff0c\u4e5f\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c \u8fd9\u6837\u786e\u4fdd\u6307\u9488\u4e0d\u4f1a\u6307\u5411\u5176\u4ed6\u5730\u5740\uff0c\u4e5f\u4e0d\u80fd\u4fee\u6539\u6240\u6307\u5411\u7684\u503c #include <iostream> int main ( void ) { const int x = 5 ; const int * const str = & x ; //ptr\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488 // *ptr = 10; //\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6240\u6307\u5411\u7684\u503c // ptr = nullptr; //\u9519\u8bef\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c }","title":"\u5e38\u91cf\u6307\u9488\u6307\u5411\u5e38\u91cf"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Ec%2B%2B%E6%8C%87%E9%92%88/#summary","text":"#include <iostream> int main ( void ) { int x = 5 ; const int * str = & x ; //\u8fd9\u6837\u7684\u6307\u9488\u662f\u6ca1\u529e\u6cd5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c\uff0cstr\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cfint\u7684\u6307\u9488 int m = 6 ; int * const st = & m ; //\u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c } int* const a ==> \u5e38\u91cf\u6307\u9488\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u503c \u8fd9\u91cc\u548c int const *a \u662f\u7b49\u540c\u7684 const int *a ==> \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4e0d\u80fd\u6307\u9488\u4fee\u6539\u6307\u5411\u7684\u503c const int* const a ==> \u6307\u5411\u5e38\u91cf\u7684\u5e38\u91cf\u6307\u9488\uff0c\u4e0a\u9762\u4e24\u79cd\u90fd\u4e0d\u884c","title":"Summary"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Efunction/","text":"const\u4e0efunction # \u5728c++\u4e2d\uff0cconst\u5728function\u4e2d\u6709\u4e0d\u4e00\u6837\u7684\u4f7f\u7528 #include <iostream> #include <string> class Example { public : Example ( const std :: string & name ) : m_Name ( name ) {} const std :: string & GetName () const { return m_Name ;}; private : std :: string m_Name ; }; int main () { Example example ( \"John\" ); const std :: string & name = example . GetName (); std :: cout << name << std :: endl ; //\u8f93\u51fa \u201cJohn\" // name = \"Alice\"; //wrong } \u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32\u7684\u5f15\u7528\u3002const\u4fee\u9970\u7684\u662f\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u8868\u793a\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u51fd\u6570\u7b7e\u540d\u4e2d\u7684\u7b2c\u4e8c\u4e2aconst\u4fee\u9970\u7684\u662f\u6210\u5458\u51fd\u6570\u672c\u8eab\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u662f\u4e00\u4e2aconst\u6210\u5458\u51fd\u6570\uff0c\u5373\u5728\u8be5\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32\u7684\u5f15\u7528\uff0c\u5e76\u4e14\u5728\u8be5\u51fd\u6570\u5185\u90e8\u4e0d\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002","title":"const\u4e0efunction"},{"location":"Blogs/meowrain/c%2B%2B/const%E4%B8%8Efunction/#const\u4e0efunction","text":"\u5728c++\u4e2d\uff0cconst\u5728function\u4e2d\u6709\u4e0d\u4e00\u6837\u7684\u4f7f\u7528 #include <iostream> #include <string> class Example { public : Example ( const std :: string & name ) : m_Name ( name ) {} const std :: string & GetName () const { return m_Name ;}; private : std :: string m_Name ; }; int main () { Example example ( \"John\" ); const std :: string & name = example . GetName (); std :: cout << name << std :: endl ; //\u8f93\u51fa \u201cJohn\" // name = \"Alice\"; //wrong } \u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32\u7684\u5f15\u7528\u3002const\u4fee\u9970\u7684\u662f\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u8868\u793a\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u51fd\u6570\u7b7e\u540d\u4e2d\u7684\u7b2c\u4e8c\u4e2aconst\u4fee\u9970\u7684\u662f\u6210\u5458\u51fd\u6570\u672c\u8eab\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u662f\u4e00\u4e2aconst\u6210\u5458\u51fd\u6570\uff0c\u5373\u5728\u8be5\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32\u7684\u5f15\u7528\uff0c\u5e76\u4e14\u5728\u8be5\u51fd\u6570\u5185\u90e8\u4e0d\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002","title":"const\u4e0efunction"},{"location":"Blogs/meowrain/c%2B%2B/mutable%E5%9C%A8c%2B%2B%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"mutable # \u5728C++\u4e2d\uff0c mutable \u5173\u952e\u5b57\u7528\u4e8e\u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002\u5f53\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a mutable \u65f6\uff0c\u5b83\u53ef\u4ee5\u5728 const \u6210\u5458\u51fd\u6570\u4e2d\u88ab\u4fee\u6539\uff0c\u5373\u4f7f\u8be5\u51fd\u6570\u4e0d\u5e94\u8be5\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\u3002 mutable\u5728c++\u4e2d\u7684\u4f7f\u7528 # \u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u56e0\u4e3a get_value \u548c set_value \u88ab\u58f0\u660e\u4e3aconst\u6210\u5458\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u7684\u5176\u4ed6\u503c,\u7136\u800c\u56e0\u4e3a value_ \u88ab\u58f0\u660e\u4e3a mutable \uff0c\u6240\u4ee5\u5b83\u53c8\u53d8\u6210\u53ef\u4fee\u6539\u7684\u4e86 \u4ee3\u7801\u793a\u4f8b # \u6211\u7684\u4ee3\u7801\u793a\u4f8b\uff1a #include <iostream> #include <string> class Entity { private : std :: string m_Name ; mutable int m_DebugCount = 0 ; public : Entity ( const std :: string & _name ){ m_Name = _name ; } const std :: string & GetName () const { return m_Name ; } int get_num () const { return m_DebugCount ; } void add_num ( int n ) const { m_DebugCount += n ; } }; int main ( void ) { Entity e ( \"meowrain\" ); const std :: string & name = e . GetName (); std :: cout << name << std :: endl ; std :: cout << e . get_num () << std :: endl ; e . add_num ( 3 ); std :: cout << e . get_num () << std :: endl ; const Entity e1 ( \"Jack\" ); const std :: string & name2 = e1 . GetName (); } \u6784\u9020\u51fd\u6570 Entity(const std::string& _name) : \u7528\u4e8e\u521b\u5efaEntity\u5bf9\u8c61\u5e76\u521d\u59cb\u5316m_Name\u6210\u5458\u53d8\u91cf\u3002 \u6210\u5458\u51fd\u6570 const std::string& GetName() const : \u8fd4\u56deEntity\u5bf9\u8c61\u7684\u540d\u79f0m_Name\u3002\u7531\u4e8e\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u88ab\u58f0\u660e\u4e3aconst\u6210\u5458\u51fd\u6570\u3002 \u6210\u5458\u51fd\u6570 int get_num() const : \u8fd4\u56deEntity\u5bf9\u8c61\u7684m_DebugCount\u503c\u3002\u7531\u4e8e\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u88ab\u58f0\u660e\u4e3aconst\u6210\u5458\u51fd\u6570\u3002 \u6210\u5458\u51fd\u6570 void add_num(int n) const : \u5c06\u53c2\u6570n\u7684\u503c\u52a0\u5230Entity\u5bf9\u8c61\u7684m_DebugCount\u4e0a\u3002\u7531\u4e8e\u8be5\u51fd\u6570\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u4f46\u662fm_DebugCount\u88ab\u58f0\u660e\u4e3amutable\uff0c\u6240\u4ee5\u5373\u4f7f\u5728const\u6210\u5458\u51fd\u6570\u4e2d\u4e5f\u53ef\u4ee5\u4fee\u6539\u5b83\u3002 \u51fd\u6570 int main() : \u7a0b\u5e8f\u7684\u5165\u53e3\u51fd\u6570\u3002\u5728\u8be5\u51fd\u6570\u4e2d\u521b\u5efa\u4e86Entity\u5bf9\u8c61e\u548ce1\uff0c\u5e76\u8c03\u7528\u5b83\u4eec\u7684\u6210\u5458\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\u548c\u8f93\u51fa\u3002","title":"mutable"},{"location":"Blogs/meowrain/c%2B%2B/mutable%E5%9C%A8c%2B%2B%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/#mutable","text":"\u5728C++\u4e2d\uff0c mutable \u5173\u952e\u5b57\u7528\u4e8e\u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002\u5f53\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a mutable \u65f6\uff0c\u5b83\u53ef\u4ee5\u5728 const \u6210\u5458\u51fd\u6570\u4e2d\u88ab\u4fee\u6539\uff0c\u5373\u4f7f\u8be5\u51fd\u6570\u4e0d\u5e94\u8be5\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\u3002","title":"mutable"},{"location":"Blogs/meowrain/c%2B%2B/mutable%E5%9C%A8c%2B%2B%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/#mutable\u5728c\u4e2d\u7684\u4f7f\u7528","text":"\u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u56e0\u4e3a get_value \u548c set_value \u88ab\u58f0\u660e\u4e3aconst\u6210\u5458\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4e0d\u80fd\u4fee\u6539\u7c7b\u4e2d\u7684\u5176\u4ed6\u503c,\u7136\u800c\u56e0\u4e3a value_ \u88ab\u58f0\u660e\u4e3a mutable \uff0c\u6240\u4ee5\u5b83\u53c8\u53d8\u6210\u53ef\u4fee\u6539\u7684\u4e86","title":"mutable\u5728c++\u4e2d\u7684\u4f7f\u7528"},{"location":"Blogs/meowrain/c%2B%2B/mutable%E5%9C%A8c%2B%2B%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/#\u4ee3\u7801\u793a\u4f8b","text":"\u6211\u7684\u4ee3\u7801\u793a\u4f8b\uff1a #include <iostream> #include <string> class Entity { private : std :: string m_Name ; mutable int m_DebugCount = 0 ; public : Entity ( const std :: string & _name ){ m_Name = _name ; } const std :: string & GetName () const { return m_Name ; } int get_num () const { return m_DebugCount ; } void add_num ( int n ) const { m_DebugCount += n ; } }; int main ( void ) { Entity e ( \"meowrain\" ); const std :: string & name = e . GetName (); std :: cout << name << std :: endl ; std :: cout << e . get_num () << std :: endl ; e . add_num ( 3 ); std :: cout << e . get_num () << std :: endl ; const Entity e1 ( \"Jack\" ); const std :: string & name2 = e1 . GetName (); } \u6784\u9020\u51fd\u6570 Entity(const std::string& _name) : \u7528\u4e8e\u521b\u5efaEntity\u5bf9\u8c61\u5e76\u521d\u59cb\u5316m_Name\u6210\u5458\u53d8\u91cf\u3002 \u6210\u5458\u51fd\u6570 const std::string& GetName() const : \u8fd4\u56deEntity\u5bf9\u8c61\u7684\u540d\u79f0m_Name\u3002\u7531\u4e8e\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u88ab\u58f0\u660e\u4e3aconst\u6210\u5458\u51fd\u6570\u3002 \u6210\u5458\u51fd\u6570 int get_num() const : \u8fd4\u56deEntity\u5bf9\u8c61\u7684m_DebugCount\u503c\u3002\u7531\u4e8e\u8be5\u51fd\u6570\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u88ab\u58f0\u660e\u4e3aconst\u6210\u5458\u51fd\u6570\u3002 \u6210\u5458\u51fd\u6570 void add_num(int n) const : \u5c06\u53c2\u6570n\u7684\u503c\u52a0\u5230Entity\u5bf9\u8c61\u7684m_DebugCount\u4e0a\u3002\u7531\u4e8e\u8be5\u51fd\u6570\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u4f46\u662fm_DebugCount\u88ab\u58f0\u660e\u4e3amutable\uff0c\u6240\u4ee5\u5373\u4f7f\u5728const\u6210\u5458\u51fd\u6570\u4e2d\u4e5f\u53ef\u4ee5\u4fee\u6539\u5b83\u3002 \u51fd\u6570 int main() : \u7a0b\u5e8f\u7684\u5165\u53e3\u51fd\u6570\u3002\u5728\u8be5\u51fd\u6570\u4e2d\u521b\u5efa\u4e86Entity\u5bf9\u8c61e\u548ce1\uff0c\u5e76\u8c03\u7528\u5b83\u4eec\u7684\u6210\u5458\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\u548c\u8f93\u51fa\u3002","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/","text":"Java\u9762\u5411\u5bf9\u8c61(\u9ad8\u7ea7) # \u7c7b\u53d8\u91cf/\u7c7b\u65b9\u6cd5 # \u7c7b\u53d8\u91cf/\u7c7b\u65b9\u6cd5-\u535a\u5ba2\u56ed \u7c7b\u53d8\u91cf\u5feb\u901f\u5165\u95e8 # \u4ecb\u7ecd # \u7c7b\u53d8\u91cf\uff08\u53c8\u53eb\u9759\u6001\u53d8\u91cf\uff09\u662f\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u53d8\u91cf\uff0c\u4efb\u4f55\u4e00\u4e2a\u8be5\u7c7b\u7684\u5bf9\u8c61\u53bb\u8bbf\u95ee\u5b83\u65f6\uff0c\u53d6\u5230\u7684\u90fd\u662f\u76f8\u540c\u7684\u503c\uff0c\u540c\u6837\u4efb\u4f55\u4e00\u4e2a\u8be5\u7c7b\u7684\u5bf9\u8c61\u53bb\u4fee\u6539\u5b83\u65f6\uff0c\u4fee\u6539\u7684\u4e5f\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u3002 \u5b9a\u4e49\u7c7b\u53d8\u91cf\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26 static \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d; \u9759\u6001\u53d8\u91cf\u662f\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u5c31\u521b\u5efa\u4e86,\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf count ,\u662f\u4e00\u4e2a\u7c7b\u53d8\u91cf(\u9759\u6001\u53d8\u91cf) static \u9759\u6001 \u8be5\u53d8\u91cf\u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u4f1a\u88abChild \u7c7b\u7684\u6240\u6709\u7684\u5bf9\u8c61\u5b9e\u4f8b\u5171\u4eab package cn.meowrain.classVariable ; public class var01 { public static void main ( String [] args ) { Child child01 = new Child ( \"mike\" ); Child child02 = new Child ( \"john\" ); child01 . count ++ ; child02 . count ++ ; System . out . println ( \"\u5171\u6709\" + Child . count + \"\u4e2a\u5c0f\u670b\u53cb\u53c2\u52a0\u4e86\u6e38\u620f\" ); } } class Child { private String name ; public static int count = 0 ; public Child ( String name ){ this . name = name ; } public void join () { System . out . println ( \"\u5c0f\u670b\u53cb\" + name + \"\u52a0\u5165\u4e86\u6e38\u620f....\" ); } } \u8f93\u51fa: \u5171\u67092\u4e2a\u5c0f\u670b\u53cb\u53c2\u52a0\u4e86\u6e38\u620f \u8bbf\u95ee\u7c7b\u53d8\u91cf # \u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d.\u7c7b\u53d8\u91cf\u540d \u6216\u8005 \u5bf9\u8c61\u540d.\u7c7b\u53d8\u91cf\u540d \u6765\u8bbf\u95ee\uff0c\u4f46Java\u8bbe\u8ba1\u8005\u63a8\u8350\u6211\u4eec\u4f7f\u7528 \u7c7b\u540d.\u7c7b\u53d8\u91cf\u540d \u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u3002 package cn.meowrain.classVariable ; public class var01 { public static void main ( String [] args ) { Child child01 = new Child ( \"mike\" ); Child child02 = new Child ( \"john\" ); child01 . join (); child02 . join (); System . out . println ( \"\u5171\u6709\" + Child . count + \"\u4e2a\u5c0f\u670b\u53cb\u53c2\u52a0\u4e86\u6e38\u620f\" ); //\u901a\u8fc7 \u5bf9\u8c61\u540d.\u7c7b\u53d8\u91cf\u540d \u6765\u8bbf\u95ee } } class Child { private String name ; public static int count = 0 ; public Child ( String name ){ this . name = name ; } public void join () { System . out . println ( \"\u5c0f\u670b\u53cb\" + name + \"\u52a0\u5165\u4e86\u6e38\u620f....\" ); count ++ ; } } \u7c7b\u65b9\u6cd5 # \u4ecb\u7ecd # \u7c7b\u53d8\u91cf\u4e5f\u53eb\u9759\u6001\u53d8\u91cf\u3002 \u5b9a\u4e49\u683c\u5f0f\u5982\u4e0b\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26 static \u6570\u636e\u8fd4\u56de\u7c7b\u578b \u65b9\u6cd5\u540d(){} \u7c7b\u65b9\u6cd5\u7ecf\u5178\u4f7f\u7528\u573a\u666f # \uff081\uff09\u5f53\u65b9\u6cd5\u4e2d\u4e0d\u6d89\u53ca\u5230\u4efb\u4f55\u548c\u5bf9\u8c61\u76f8\u5173\u7684\u6210\u5458\uff0c\u5219\u53ef\u4ee5\u5c06\u65b9\u6cd5\u8bbe\u8ba1\u6210\u9759\u6001\u65b9\u6cd5\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \uff082\uff09\u6bd4\u5982\u5de5\u5177\u7c7b\u4e2d\u7684\u65b9\u6cd5 utils Math\u7c7b\u3001Arrays\u7c7b\u3001Collections\u96c6\u5408\u7c7b \uff083\uff09\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5f80\u5f80\u5c06\u4e00\u4e9b\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u6210\u9759\u6001\u65b9\u6cd5\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u5982\u6253\u5370\u4e00\u7ef4\u6570\u7ec4\uff0c\u5192\u6ce1\u6392\u5e8f\u7b49\u7b49 \u7c7b\u65b9\u6cd5\u548c\u666e\u901a\u65b9\u6cd5\u7684\u533a\u522b # \u7c7b\u65b9\u6cd5\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528\u548c\u5bf9\u8c61\u6709\u5173\u7684\u5173\u952e\u5b57\uff0c \u6bd4\u5982this \u548csuper\u3002\u666e\u901a\u65b9\u6cd5(\u6210\u5458\u65b9\u6cd5)\u53ef\u4ee5\u3002 \u7c7b\u65b9\u6cd5\u4e2d\uff0c\u53ea\u80fd\u8bbf\u95ee \u9759\u6001\u53d8\u91cf \u6216 \u9759\u6001\u65b9\u6cd5\uff1b\u800c\u666e\u901a\u65b9\u6cd5\u65e2\u53ef\u4ee5\u8bbf\u95ee\u666e\u901a\u53d8\u91cf\uff08\u65b9\u6cd5\uff09\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u9759\u6001\u7684\u3002 \u7c7b\u65b9\u6cd5\u53ef\u4ee5\u91cd\u5199\u5417\uff1f # \u53ef\u4ee5\u88ab\u7ee7\u627f\uff0c\u4f46\u662f\u4e0d\u80fd\u88ab\u91cd\u5199\uff0c\u5982\u679c\u7236\u5b50\u7c7b\u9759\u6001\u65b9\u6cd5\u540d\u76f8\u540c\uff0c\u5219\u4f1a\u9690\u85cfderive\u7c7b\u65b9\u6cd5\uff08\u8c03\u7528base\u7c7b\u7684\u65b9\u6cd5\uff09 \u9759\u6001\u65b9\u6cd5\u662f\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u7684\uff0c\u65b9\u6cd5\u91cd\u5199\u662f\u8fd0\u884c\u65f6\u7ed1\u5b9a\u7684\u3002 https://blog.csdn.net/m0_37974032/article/details/81157433 \u7c7b\u65b9\u6cd5\u7684\u4f7f\u7528\uff1a \u4f7f\u7528\uff1a \u5982\u4e0b\uff1a package cn.meowrain.classVariable ; public class var02 { } class Caculate { public static void main ( String [] args ) { int sum01 = sum ( 1 , 2 ); int sum02 = sum ( 5 , 10 , 20 ); System . out . println ( sum01 + \" \" + sum02 ); //3 35 } public static int sum ( int a , int b ) { return a + b ; } public static int sum ( int a , int b , int c ) { return a + b + c ; } } \u7406\u89e3main\u65b9\u6cd5 # \u76f4\u63a5\u770b\u4e0b\u9762\u8fd9\u4e2a\u6587\u7ae0\u5c31\u884c\u4e86\uff0c\u5199\u5f97\u5f88\u4e0d\u9519 https://www.cnblogs.com/ffforward/p/15253293.html Java\u4ee3\u7801\u5757 # \u57fa\u672c\u4ecb\u7ecd # \u4ee3\u7801\u5757\u53c8\u79f0\u4e3a\u521d\u59cb\u5316\u5757\uff0c\u5c5e\u4e8e\u7c7b\u4e2d\u7684\u6210\u5458\uff0c\u7c7b\u4f3c\u4e8e\u65b9\u6cd5\uff0c\u628a\u903b\u8f91\u8bed\u53e5\u5c01\u88c5\u5728\u65b9\u6cd5\u4f53\u4e2d\uff0c\u901a\u8fc7{}\u5305\u56f4\u8d77\u6765 \u5176\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u9690\u5f0f\u8c03\u7528 \u57fa\u672c\u8bed\u6cd5 # [\u4fee\u9970\u7b26]{ \u4ee3\u7801 } \u8bf4\u660e\uff1a (1) \u4fee\u9970\u7b26\u53ef\u9009\uff0c\u8981\u5199\u7684\u8bdd\uff0c\u4e5f\u53ea\u80fd\u5199static (2) \u4ee3\u7801\u5757\u5206\u4e3a\u4e24\u7c7b\uff0c\u4f7f\u7528static\u4fee\u9970\u7684\u53eb**\u9759\u6001\u4ee3\u7801\u5757**\uff0c\u6ca1\u6709static\u4fee\u9970\u7684\uff0c\u53eb**\u666e\u901a\u4ee3\u7801\u5757** (3) \u903b\u8f91\u8bed\u53e5\u53ef\u4ee5\u4e3a\u4efb\u4f55\u903b\u8f91\u8bed\u53e5\uff08\u8f93\u5165\u3001\u8f93\u51fa\u3001\u65b9\u6cd5\u8c03\u7528\u3001\u5faa\u73af\u3001\u5224\u65ad\u7b49 (4) \u5206\u53f7\uff1b\u53ef\u4ee5\u5199\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565 \u4ee3\u7801\u5757\u7684\u597d\u5904 # \uff081\uff09\u76f8\u5f53\u4e8e\u53e6\u5916\u4e00\u79cd\u5f62\u5f0f\u7684\u6784\u9020\u5668\uff08\u5bf9\u6784\u9020\u5668\u7684\u8865\u5145\u673a\u5236\uff09\uff0c\u53ef\u4ee5\u505a\u521d\u59cb\u5316\u7684\u64cd\u4f5c\u3002 \uff082\uff09\u5982\u679c\u591a\u4e2a\u6784\u9020\u5668\u4e2d\u90fd\u6709\u91cd\u590d\u7684\u8bed\u53e5\uff0c\u53ef\u4ee5\u62bd\u53d6\u5230\u521d\u59cb\u5316\u5757\u4e2d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027 \u5b9e\u9645\u4f7f\u7528\uff1a \u5982\u4e0b\uff0c\u6211\u4eec\u7684\u4e09\u4e2a\u6784\u9020\u5668\u4e2d\u90fd\u542b\u6709 System.out.println(\"Welcome to Code World!\"); \uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u5f88\u5197\u6742\uff0c\u4f7f\u7528\u4ee3\u7801\u5757\uff0c\u5c31\u80fd\u8ba9\u8fd9\u4e2a\u4ee3\u7801\u66f4\u597d\u770b\u4e00\u4e9b\uff0c\u4ee3\u7801\u5757\u4f1a\u5728\u6bcf\u6b21\u7c7b\u521b\u5efa\u65f6\u8c03\u7528 package cn.meowrain.codeBlock ; public class code01 { public static void main ( String [] args ) { code01_child child01 = new code01_child ( \"mike\" ); code01_child child02 = new code01_child ( \"meme\" , 15 ); code01_child child03 = new code01_child ( \"meow\" , 18 , \"bear\" ); } } class code01_child { String name ; int age ; String love ; public code01_child ( String name ) { this . name = name ; System . out . println ( \"Welcome to Code World!\" ); System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age ) { this . name = name ; this . age = age ; System . out . println ( \"Welcome to Code World!\" ); System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age , String love ) { this . name = name ; this . love = love ; this . age = age ; System . out . println ( \"Welcome to Code World!\" ); System . out . println ( \"hello \" + name ); } } \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u4fee\u6539\u7248\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 package cn.meowrain.codeBlock ; public class code01 { public static void main ( String [] args ) { code01_child child01 = new code01_child ( \"mike\" ); code01_child child02 = new code01_child ( \"meme\" , 15 ); code01_child child03 = new code01_child ( \"meow\" , 18 , \"bear\" ); } } class code01_child { String name ; int age ; String love ; { System . out . println ( \"Welcome to Code World!\" ); } public code01_child ( String name ) { this . name = name ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age ) { this . name = name ; this . age = age ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age , String love ) { this . name = name ; this . love = love ; this . age = age ; System . out . println ( \"hello \" + name ); } } \u8f93\u51fa\u7ed3\u679c\uff1a Welcome to Code World! hello mike Welcome to Code World! hello meme Welcome to Code World! hello meow static \u4ee3\u7801\u5757 # static\u4ee3\u7801\u5757\u4e5f\u53eb\u9759\u6001\u4ee3\u7801\u5757\uff0c\u4f5c\u7528\u5c31\u662f\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u4e14\u5b83\u968f\u7740\u7c7b\u7684\u52a0\u8f7d\u800c\u6267\u884c\uff0c\u5e76\u4e14\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u3002 \u5b9e\u9645\u4f7f\u7528\uff1a package cn.meowrain.codeBlock ; public class code01 { public static void main ( String [] args ) { code01_child child01 = new code01_child ( \"mike\" ); code01_child child02 = new code01_child ( \"meme\" , 15 ); code01_child child03 = new code01_child ( \"meow\" , 18 , \"bear\" ); } } class code01_child { String name ; int age ; String love ; static { System . out . println ( \"Welcome to Code World!\" ); } public code01_child ( String name ) { this . name = name ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age ) { this . name = name ; this . age = age ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age , String love ) { this . name = name ; this . love = love ; this . age = age ; System . out . println ( \"hello \" + name ); } } \u8f93\u51fa\u7ed3\u679c\uff1a \u56e0\u4e3a\u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u6240\u4ee5\u53ea\u8f93\u51fa\u4e00\u6b21 Welcome to Code World! Welcome to Code World! hello mike hello meme hello meow \u4ee3\u7801\u5757\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879 # static\u4ee3\u7801\u5757\u4e5f\u53eb\u9759\u6001\u4ee3\u7801\u5757\uff0c\u4f5c\u7528\u5c31\u662f\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u4e14\u5b83\u968f\u7740**\u7c7b\u7684\u52a0\u8f7d\u800c\u6267\u884c\uff0c\u53ea\u4f1a\u6267\u884c\u4e00\u6b21**\u3002\u5982\u679c\u662f\u666e\u901a\u4ee3\u7801\u5757\uff0c\u6bcf\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c31\u6267\u884c\u4e00\u6b21\u3002\u53ef\u4ee5\u770b\u4e0a\u9762\u7684\u4ee3\u7801\u548c\u8fd0\u884c\u7ed3\u679c \u7c7b\u4ec0\u4e48\u65f6\u5019\u88ab\u52a0\u8f7d\uff1f \u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b new \u7684\u65f6\u5019 \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u7236\u7c7b\u4e5f\u4f1a\u88ab\u52a0\u8f7d \u4f7f\u7528\u7c7b\u7684\u9759\u6001\u6210\u5458\u65f6\uff08\u9759\u6001\u5c5e\u6027\uff0c\u9759\u6001\u65b9\u6cd5\uff09 package cn.meowrain.codeBlock ; public class code02 { public static void main ( String [] args ) { int c = A . sum ( 109 , 10 ); } } class A { static { System . out . println ( \"hello\" ); } public static int sum ( int a , int b ){ return a + b ; } } class B extends A { } > \u8fd0\u884c\u7ed3\u679c\uff1a hello \u7531\u4e0a\u53ef\u89c1,\u9759\u6001\u4ee3\u7801\u5757\u4f1a\u5728\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\u6267\u884c \u666e\u901a\u7684\u4ee3\u7801\u5757\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff08new\u7684\u65f6\u5019\uff09\uff0c\u4f1a\u88ab\u9690\u5f0f\u8c03\u7528\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u4f7f\u7528\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf\uff0c\u666e\u901a\u4ee3\u7801\u5757\u4e0d\u4f1a\u88ab\u6267\u884c package cn.meowrain.codeBlock ; public class code02 { public static void main ( String [] args ) { int c = A . sum ( 109 , 10 ); } } class A { { System . out . println ( \"hello\" ); } static int a = 10 ; public static int sum ( int a , int b ) { return a + b ; } } class B extends A { } \u8f93\u51fa\u7ed3\u679c\uff1a \u65e0 \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5728\u4e00\u4e2a\u7c7b\u7684\u8c03\u7528\u987a\u5e8f\u662f: \u8c03\u7528\u9759\u6001\u4ee3\u7801\u5757\u548c\u9759\u6001\u5c5e\u6027\u521d\u59cb\u5316\uff0c\u6309\u7167\u987a\u5e8f\u8c03\u7528 \u8c03\u7528\u666e\u901a\u4ee3\u7801\u5757\u548c\u666e\u901a\u5c5e\u6027\u7684\u521d\u59cb\u5316\uff0c\u6309\u7167\u987a\u5e8f\u8c03\u7528 \u8c03\u7528\u6784\u9020\u65b9\u6cd5 package cn.meowrain.codeBlock ; public class code03 { public static void main ( String [] args ) { AB ab = new AB (); } } class AB { static { System . out . println ( \"\u9759\u6001\u4ee3\u7801\u5757\u521d\u59cb\u5316\" ); } static int a = getN1 (); public static int getN1 (){ System . out . println ( \"\u9759\u6001\u65b9\u6cd5getN1\u521d\u59cb\u5316\" ); return 100 ; } int c = getN2 (); public int getN2 () { System . out . println ( \"\u666e\u901a\u65b9\u6cd5getN2\u521d\u59cb\u5316\" ); return 200 ; } public AB (){ System . out . println ( \"\u6784\u9020\u5668\u88ab\u8c03\u7528\" ); } } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b \u9759\u6001\u4ee3\u7801\u5757\u521d\u59cb\u5316 \u9759\u6001\u65b9\u6cd5getN1\u521d\u59cb\u5316 \u666e\u901a\u65b9\u6cd5getN2\u521d\u59cb\u5316 \u6784\u9020\u5668\u88ab\u8c03\u7528 \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f # \u53c2\u8003https:// www.cnblogs.com/ffforward/p/15259948.html \u4ecb\u7ecd\uff1a # \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5c31\u662f\u91c7\u53d6\u4e00\u5b9a\u7684\u65b9\u6cd5\u4fdd\u8bc1\u5728\u6574\u4e2a\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u67d0\u4e2a\u7c7b\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u5e76\u4e14\u8be5\u7c7b\u53ea\u63d0\u4f9b\u4e00\u4e2a\u53d6\u5f97\u5176\u5bf9\u8c61\u5b9e\u4f8b\u7684\u65b9\u6cd5 \u5355\u4f8b\u6a21\u5f0f\u6709\u4e24\u79cd\uff1a 1. \u997f\u6c49\u5f0f 2. \u61d2\u6c49\u5f0f \u5b9e\u73b0\u65b9\u5f0f # \u6784\u9020\u5668\u79c1\u6709\u5316 \u7c7b\u7684\u5185\u90e8\u521b\u5efa\u5bf9\u8c61 \u5411\u5916\u66b4\u9732\u4e00\u4e2a\u9759\u6001\u7684\u516c\u5171\u65b9\u6cd5 \u997f\u6c49\u5f0f # \u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\u5b9e\u4f8b\u5316\uff0c\u5e76\u4e14\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61 1. \u6784\u9020\u5668\u79c1\u6709\u5316 2. \u5728\u7c7b\u7684\u5185\u90e8\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e3astatic 3. \u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u7684static\u65b9\u6cd5\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61 package cn.meowrain.singlecasemode ; class test { public static void main ( String [] args ) { Hungry hungry = Hungry . getInstance (); System . out . println ( hungry . name ); } } public class Hungry { public String name ; private Hungry ( String name ){ this . name = name ; } //\u6784\u9020\u5668\u79c1\u6709\u5316 private static Hungry hungry = new Hungry ( \"hello\" ); public static Hungry getInstance (){ return hungry ; } } \u61d2\u6c49\u5f0f # \u61d2\u6c49\u5f0f\uff1a \u9ed8\u8ba4\u4e0d\u4f1a\u5b9e\u4f8b\u5316\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\u4ec0\u4e48\u65f6\u5019new 1. \u6784\u9020\u5668\u79c1\u6709\u5316 2. \u5b9a\u4e49\u4e00\u4e2astatic\u9759\u6001\u5c5e\u6027\u5bf9\u8c61 3. \u63d0\u4f9b\u4e00\u4e2apublic\u7684static\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u8be5\u7c7b\u5bf9\u8c61 4. \u61d2\u6c49\u5f0f\uff0c\u53ea\u6709\u5f53\u7528\u6237\u4f7f\u7528getInstance\u65f6\uff0c\u624d\u8fd4\u56de\u5bf9\u8c61\uff0c\u540e\u9762\u518d\u6b21\u8c03\u7528\u65f6\uff0c\u4f1a\u8fd4\u56de\u4e0a\u6b21\u521b\u5efa\u7684\u8be5\u7c7b\u5bf9\u8c61\uff0c\u4ece\u800c\u4fdd\u8bc1\u5355\u4f8b package cn.meowrain.singlecasemode ; class test02 { public static void main ( String [] args ) { Lazy lazy = Lazy . getInstanceOf (); System . out . println ( lazy . name ); } } public class Lazy { public String name ; private Lazy ( String name ){ this . name = name ; } private static Lazy lazy = null ; public static Lazy getInstanceOf (){ if ( lazy == null ){ lazy = new Lazy ( \"mmm\" ); } return lazy ; } } \u997f\u6c49\u5f0f\u548c\u61d2\u6c49\u5f0f\u7684\u533a\u522b # \uff081\uff09\u4e8c\u8005\u6700\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u673a\u4e0d\u540c\uff1a \u997f\u6c49\u5f0f\u662f\u5728\u7c7b\u52a0\u8f7d\u65f6\u5c31\u521b\u5efa\u4e86\u5bf9\u8c61\u5b9e\u4f8b\uff0c \u800c\u61d2\u6c49\u5f0f\u662f\u5728\u4f7f\u7528\u65f6\u624d\u521b\u5efa\u3002 \uff082\uff09\u997f\u6c49\u5f0f\u4e0d\u5b58\u5728\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u61d2\u6c49\u5f0f\u5b58\u5728\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \uff083\uff09\u997f\u6c49\u5f0f\u5b58\u5728\u6d6a\u8d39\u8d44\u6e90\u7684\u53ef\u80fd\uff08\u6ca1\u6709\u4f7f\u7528\u5230\u8fd9\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff09\uff0c\u800c\u61d2\u6c49\u5f0f\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 \uff084\uff09\u5728javaSE\u6807\u51c6\u7c7b\u4e2d\uff0cjava.lang.Runtime\u5c31\u662f\u7ecf\u5178\u7684\u5355\u4f8b\u6a21\u5f0f\u3002 final\u5173\u952e\u5b57 # \u57fa\u672c\u4ecb\u7ecd\uff1a # final\u53ef\u4ee5\u4fee\u9970\u7c7b\uff0c\u5c5e\u6027\uff0c\u65b9\u6cd5\u548c\u5c40\u90e8\u53d8\u91cf \u4f7f\u7528\u73af\u5883\uff1a 1. \u5f53\u4e0d\u5e0c\u671b\u7c7b\u88ab\u7ee7\u627f\u65f6\uff0c\u53ef\u4ee5\u7528final\u4fee\u9970 2. \u5f53\u4e0d\u5e0c\u671b\u7236\u7c7b\u7684\u67d0\u4e2a\u65b9\u6cd5\u88ab\u5b50\u7c7b\u8986\u76d6/\u91cd\u5199\u65f6\uff0c\u53ef\u4ee5\u7528final\u5173\u952e\u5b57\u4fee\u9970 3. \u5f53\u4e0d\u5e0c\u671b\u7c7b\u7684\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\u88ab\u4fee\u6539\uff0c\u53ef\u7528final\u4fee\u9970 4. \u5f53\u4e0d\u5e0c\u671b\u67d0\u4e2a\u5c40\u90e8\u53d8\u91cf\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u7528final\u4fee\u9970 final\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879 # final\u4fee\u9970\u7684\u5c5e\u6027\u53c8\u53eb\u5e38\u91cf final\u4fee\u9970\u7684\u5c5e\u6027\u5728\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8d4b\u521d\u503c\uff0c\u5e76\u4e14\u4ee5\u540e\u4e0d\u80fd\u518d\u4fee\u6539 \u5982\u679cfinal\u4fee\u9970\u7684\u5c5e\u6027\u662f\u9759\u6001\u7684\uff0c\u5219\u521d\u59cb\u5316\u7684\u4f4d\u7f6e\u53ea\u80fd\u662f 1.\u5b9a\u4e49\u65f6 2.\u5728\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u53ef\u4ee5\u8d4b\u503c\uff0c\u4e0d\u80fd\u5728\u6784\u9020\u5668\u4e2d\u8d4b\u503c final\u7c7b\u4e0d\u80fd\u7ee7\u627f\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u5982\u679c\u7c7b\u4e0d\u662ffinal\u7c7b\uff0c\u4f46\u662f\u6709final\u65b9\u6cd5\uff0c\u5219\u8be5\u65b9\u6cd5\u867d\u7136\u4e0d\u80fd\u91cd\u5199\uff0c\u4f46\u53ef\u4ee5\u88ab\u7ee7\u627f 6.final\u548cstatic\u5f80\u5f80\u642d\u914d\u4f7f\u7528\uff0c\u6548\u7387\u66f4\u9ad8\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7c7b\u52a0\u8f7d\uff0c\u5e95\u5c42\u7f16\u8bd1\u5668\u505a\u4e86\u4f18\u5316\u5904\u7406 \u5305\u88c5\u7c7b( Integer,Double,Float,Boolean\u7b49\u90fd\u662ffinal )\uff0c**String**\u4e5f\u662ffinal\u7c7b \u62bd\u8c61\u7c7b #","title":"Java\u9762\u5411\u5bf9\u8c61(\u9ad8\u7ea7)"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#java\u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7","text":"","title":"Java\u9762\u5411\u5bf9\u8c61(\u9ad8\u7ea7)"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7c7b\u53d8\u91cf\u7c7b\u65b9\u6cd5","text":"\u7c7b\u53d8\u91cf/\u7c7b\u65b9\u6cd5-\u535a\u5ba2\u56ed","title":"\u7c7b\u53d8\u91cf/\u7c7b\u65b9\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7c7b\u53d8\u91cf\u5feb\u901f\u5165\u95e8","text":"","title":"\u7c7b\u53d8\u91cf\u5feb\u901f\u5165\u95e8"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u4ecb\u7ecd","text":"\u7c7b\u53d8\u91cf\uff08\u53c8\u53eb\u9759\u6001\u53d8\u91cf\uff09\u662f\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u53d8\u91cf\uff0c\u4efb\u4f55\u4e00\u4e2a\u8be5\u7c7b\u7684\u5bf9\u8c61\u53bb\u8bbf\u95ee\u5b83\u65f6\uff0c\u53d6\u5230\u7684\u90fd\u662f\u76f8\u540c\u7684\u503c\uff0c\u540c\u6837\u4efb\u4f55\u4e00\u4e2a\u8be5\u7c7b\u7684\u5bf9\u8c61\u53bb\u4fee\u6539\u5b83\u65f6\uff0c\u4fee\u6539\u7684\u4e5f\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\u3002 \u5b9a\u4e49\u7c7b\u53d8\u91cf\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26 static \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d; \u9759\u6001\u53d8\u91cf\u662f\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u5c31\u521b\u5efa\u4e86,\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf count ,\u662f\u4e00\u4e2a\u7c7b\u53d8\u91cf(\u9759\u6001\u53d8\u91cf) static \u9759\u6001 \u8be5\u53d8\u91cf\u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u4f1a\u88abChild \u7c7b\u7684\u6240\u6709\u7684\u5bf9\u8c61\u5b9e\u4f8b\u5171\u4eab package cn.meowrain.classVariable ; public class var01 { public static void main ( String [] args ) { Child child01 = new Child ( \"mike\" ); Child child02 = new Child ( \"john\" ); child01 . count ++ ; child02 . count ++ ; System . out . println ( \"\u5171\u6709\" + Child . count + \"\u4e2a\u5c0f\u670b\u53cb\u53c2\u52a0\u4e86\u6e38\u620f\" ); } } class Child { private String name ; public static int count = 0 ; public Child ( String name ){ this . name = name ; } public void join () { System . out . println ( \"\u5c0f\u670b\u53cb\" + name + \"\u52a0\u5165\u4e86\u6e38\u620f....\" ); } } \u8f93\u51fa: \u5171\u67092\u4e2a\u5c0f\u670b\u53cb\u53c2\u52a0\u4e86\u6e38\u620f","title":"\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u8bbf\u95ee\u7c7b\u53d8\u91cf","text":"\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d.\u7c7b\u53d8\u91cf\u540d \u6216\u8005 \u5bf9\u8c61\u540d.\u7c7b\u53d8\u91cf\u540d \u6765\u8bbf\u95ee\uff0c\u4f46Java\u8bbe\u8ba1\u8005\u63a8\u8350\u6211\u4eec\u4f7f\u7528 \u7c7b\u540d.\u7c7b\u53d8\u91cf\u540d \u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u3002 package cn.meowrain.classVariable ; public class var01 { public static void main ( String [] args ) { Child child01 = new Child ( \"mike\" ); Child child02 = new Child ( \"john\" ); child01 . join (); child02 . join (); System . out . println ( \"\u5171\u6709\" + Child . count + \"\u4e2a\u5c0f\u670b\u53cb\u53c2\u52a0\u4e86\u6e38\u620f\" ); //\u901a\u8fc7 \u5bf9\u8c61\u540d.\u7c7b\u53d8\u91cf\u540d \u6765\u8bbf\u95ee } } class Child { private String name ; public static int count = 0 ; public Child ( String name ){ this . name = name ; } public void join () { System . out . println ( \"\u5c0f\u670b\u53cb\" + name + \"\u52a0\u5165\u4e86\u6e38\u620f....\" ); count ++ ; } }","title":"\u8bbf\u95ee\u7c7b\u53d8\u91cf"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7c7b\u65b9\u6cd5","text":"","title":"\u7c7b\u65b9\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u4ecb\u7ecd_1","text":"\u7c7b\u53d8\u91cf\u4e5f\u53eb\u9759\u6001\u53d8\u91cf\u3002 \u5b9a\u4e49\u683c\u5f0f\u5982\u4e0b\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26 static \u6570\u636e\u8fd4\u56de\u7c7b\u578b \u65b9\u6cd5\u540d(){}","title":"\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7c7b\u65b9\u6cd5\u7ecf\u5178\u4f7f\u7528\u573a\u666f","text":"\uff081\uff09\u5f53\u65b9\u6cd5\u4e2d\u4e0d\u6d89\u53ca\u5230\u4efb\u4f55\u548c\u5bf9\u8c61\u76f8\u5173\u7684\u6210\u5458\uff0c\u5219\u53ef\u4ee5\u5c06\u65b9\u6cd5\u8bbe\u8ba1\u6210\u9759\u6001\u65b9\u6cd5\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \uff082\uff09\u6bd4\u5982\u5de5\u5177\u7c7b\u4e2d\u7684\u65b9\u6cd5 utils Math\u7c7b\u3001Arrays\u7c7b\u3001Collections\u96c6\u5408\u7c7b \uff083\uff09\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5f80\u5f80\u5c06\u4e00\u4e9b\u901a\u7528\u7684\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u6210\u9759\u6001\u65b9\u6cd5\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u5982\u6253\u5370\u4e00\u7ef4\u6570\u7ec4\uff0c\u5192\u6ce1\u6392\u5e8f\u7b49\u7b49","title":"\u7c7b\u65b9\u6cd5\u7ecf\u5178\u4f7f\u7528\u573a\u666f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7c7b\u65b9\u6cd5\u548c\u666e\u901a\u65b9\u6cd5\u7684\u533a\u522b","text":"\u7c7b\u65b9\u6cd5\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528\u548c\u5bf9\u8c61\u6709\u5173\u7684\u5173\u952e\u5b57\uff0c \u6bd4\u5982this \u548csuper\u3002\u666e\u901a\u65b9\u6cd5(\u6210\u5458\u65b9\u6cd5)\u53ef\u4ee5\u3002 \u7c7b\u65b9\u6cd5\u4e2d\uff0c\u53ea\u80fd\u8bbf\u95ee \u9759\u6001\u53d8\u91cf \u6216 \u9759\u6001\u65b9\u6cd5\uff1b\u800c\u666e\u901a\u65b9\u6cd5\u65e2\u53ef\u4ee5\u8bbf\u95ee\u666e\u901a\u53d8\u91cf\uff08\u65b9\u6cd5\uff09\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u9759\u6001\u7684\u3002","title":"\u7c7b\u65b9\u6cd5\u548c\u666e\u901a\u65b9\u6cd5\u7684\u533a\u522b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7c7b\u65b9\u6cd5\u53ef\u4ee5\u91cd\u5199\u5417","text":"\u53ef\u4ee5\u88ab\u7ee7\u627f\uff0c\u4f46\u662f\u4e0d\u80fd\u88ab\u91cd\u5199\uff0c\u5982\u679c\u7236\u5b50\u7c7b\u9759\u6001\u65b9\u6cd5\u540d\u76f8\u540c\uff0c\u5219\u4f1a\u9690\u85cfderive\u7c7b\u65b9\u6cd5\uff08\u8c03\u7528base\u7c7b\u7684\u65b9\u6cd5\uff09 \u9759\u6001\u65b9\u6cd5\u662f\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u7684\uff0c\u65b9\u6cd5\u91cd\u5199\u662f\u8fd0\u884c\u65f6\u7ed1\u5b9a\u7684\u3002 https://blog.csdn.net/m0_37974032/article/details/81157433 \u7c7b\u65b9\u6cd5\u7684\u4f7f\u7528\uff1a \u4f7f\u7528\uff1a \u5982\u4e0b\uff1a package cn.meowrain.classVariable ; public class var02 { } class Caculate { public static void main ( String [] args ) { int sum01 = sum ( 1 , 2 ); int sum02 = sum ( 5 , 10 , 20 ); System . out . println ( sum01 + \" \" + sum02 ); //3 35 } public static int sum ( int a , int b ) { return a + b ; } public static int sum ( int a , int b , int c ) { return a + b + c ; } }","title":"\u7c7b\u65b9\u6cd5\u53ef\u4ee5\u91cd\u5199\u5417\uff1f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u7406\u89e3main\u65b9\u6cd5","text":"\u76f4\u63a5\u770b\u4e0b\u9762\u8fd9\u4e2a\u6587\u7ae0\u5c31\u884c\u4e86\uff0c\u5199\u5f97\u5f88\u4e0d\u9519 https://www.cnblogs.com/ffforward/p/15253293.html","title":"\u7406\u89e3main\u65b9\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#java\u4ee3\u7801\u5757","text":"","title":"Java\u4ee3\u7801\u5757"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u57fa\u672c\u4ecb\u7ecd","text":"\u4ee3\u7801\u5757\u53c8\u79f0\u4e3a\u521d\u59cb\u5316\u5757\uff0c\u5c5e\u4e8e\u7c7b\u4e2d\u7684\u6210\u5458\uff0c\u7c7b\u4f3c\u4e8e\u65b9\u6cd5\uff0c\u628a\u903b\u8f91\u8bed\u53e5\u5c01\u88c5\u5728\u65b9\u6cd5\u4f53\u4e2d\uff0c\u901a\u8fc7{}\u5305\u56f4\u8d77\u6765 \u5176\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u9690\u5f0f\u8c03\u7528","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u57fa\u672c\u8bed\u6cd5","text":"[\u4fee\u9970\u7b26]{ \u4ee3\u7801 } \u8bf4\u660e\uff1a (1) \u4fee\u9970\u7b26\u53ef\u9009\uff0c\u8981\u5199\u7684\u8bdd\uff0c\u4e5f\u53ea\u80fd\u5199static (2) \u4ee3\u7801\u5757\u5206\u4e3a\u4e24\u7c7b\uff0c\u4f7f\u7528static\u4fee\u9970\u7684\u53eb**\u9759\u6001\u4ee3\u7801\u5757**\uff0c\u6ca1\u6709static\u4fee\u9970\u7684\uff0c\u53eb**\u666e\u901a\u4ee3\u7801\u5757** (3) \u903b\u8f91\u8bed\u53e5\u53ef\u4ee5\u4e3a\u4efb\u4f55\u903b\u8f91\u8bed\u53e5\uff08\u8f93\u5165\u3001\u8f93\u51fa\u3001\u65b9\u6cd5\u8c03\u7528\u3001\u5faa\u73af\u3001\u5224\u65ad\u7b49 (4) \u5206\u53f7\uff1b\u53ef\u4ee5\u5199\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u4ee3\u7801\u5757\u7684\u597d\u5904","text":"\uff081\uff09\u76f8\u5f53\u4e8e\u53e6\u5916\u4e00\u79cd\u5f62\u5f0f\u7684\u6784\u9020\u5668\uff08\u5bf9\u6784\u9020\u5668\u7684\u8865\u5145\u673a\u5236\uff09\uff0c\u53ef\u4ee5\u505a\u521d\u59cb\u5316\u7684\u64cd\u4f5c\u3002 \uff082\uff09\u5982\u679c\u591a\u4e2a\u6784\u9020\u5668\u4e2d\u90fd\u6709\u91cd\u590d\u7684\u8bed\u53e5\uff0c\u53ef\u4ee5\u62bd\u53d6\u5230\u521d\u59cb\u5316\u5757\u4e2d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027 \u5b9e\u9645\u4f7f\u7528\uff1a \u5982\u4e0b\uff0c\u6211\u4eec\u7684\u4e09\u4e2a\u6784\u9020\u5668\u4e2d\u90fd\u542b\u6709 System.out.println(\"Welcome to Code World!\"); \uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u5f88\u5197\u6742\uff0c\u4f7f\u7528\u4ee3\u7801\u5757\uff0c\u5c31\u80fd\u8ba9\u8fd9\u4e2a\u4ee3\u7801\u66f4\u597d\u770b\u4e00\u4e9b\uff0c\u4ee3\u7801\u5757\u4f1a\u5728\u6bcf\u6b21\u7c7b\u521b\u5efa\u65f6\u8c03\u7528 package cn.meowrain.codeBlock ; public class code01 { public static void main ( String [] args ) { code01_child child01 = new code01_child ( \"mike\" ); code01_child child02 = new code01_child ( \"meme\" , 15 ); code01_child child03 = new code01_child ( \"meow\" , 18 , \"bear\" ); } } class code01_child { String name ; int age ; String love ; public code01_child ( String name ) { this . name = name ; System . out . println ( \"Welcome to Code World!\" ); System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age ) { this . name = name ; this . age = age ; System . out . println ( \"Welcome to Code World!\" ); System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age , String love ) { this . name = name ; this . love = love ; this . age = age ; System . out . println ( \"Welcome to Code World!\" ); System . out . println ( \"hello \" + name ); } } \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u4fee\u6539\u7248\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 package cn.meowrain.codeBlock ; public class code01 { public static void main ( String [] args ) { code01_child child01 = new code01_child ( \"mike\" ); code01_child child02 = new code01_child ( \"meme\" , 15 ); code01_child child03 = new code01_child ( \"meow\" , 18 , \"bear\" ); } } class code01_child { String name ; int age ; String love ; { System . out . println ( \"Welcome to Code World!\" ); } public code01_child ( String name ) { this . name = name ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age ) { this . name = name ; this . age = age ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age , String love ) { this . name = name ; this . love = love ; this . age = age ; System . out . println ( \"hello \" + name ); } } \u8f93\u51fa\u7ed3\u679c\uff1a Welcome to Code World! hello mike Welcome to Code World! hello meme Welcome to Code World! hello meow","title":"\u4ee3\u7801\u5757\u7684\u597d\u5904"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#static-\u4ee3\u7801\u5757","text":"static\u4ee3\u7801\u5757\u4e5f\u53eb\u9759\u6001\u4ee3\u7801\u5757\uff0c\u4f5c\u7528\u5c31\u662f\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u4e14\u5b83\u968f\u7740\u7c7b\u7684\u52a0\u8f7d\u800c\u6267\u884c\uff0c\u5e76\u4e14\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u3002 \u5b9e\u9645\u4f7f\u7528\uff1a package cn.meowrain.codeBlock ; public class code01 { public static void main ( String [] args ) { code01_child child01 = new code01_child ( \"mike\" ); code01_child child02 = new code01_child ( \"meme\" , 15 ); code01_child child03 = new code01_child ( \"meow\" , 18 , \"bear\" ); } } class code01_child { String name ; int age ; String love ; static { System . out . println ( \"Welcome to Code World!\" ); } public code01_child ( String name ) { this . name = name ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age ) { this . name = name ; this . age = age ; System . out . println ( \"hello \" + name ); } public code01_child ( String name , int age , String love ) { this . name = name ; this . love = love ; this . age = age ; System . out . println ( \"hello \" + name ); } } \u8f93\u51fa\u7ed3\u679c\uff1a \u56e0\u4e3a\u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u6240\u4ee5\u53ea\u8f93\u51fa\u4e00\u6b21 Welcome to Code World! Welcome to Code World! hello mike hello meme hello meow","title":"static \u4ee3\u7801\u5757"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u4ee3\u7801\u5757\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879","text":"static\u4ee3\u7801\u5757\u4e5f\u53eb\u9759\u6001\u4ee3\u7801\u5757\uff0c\u4f5c\u7528\u5c31\u662f\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u4e14\u5b83\u968f\u7740**\u7c7b\u7684\u52a0\u8f7d\u800c\u6267\u884c\uff0c\u53ea\u4f1a\u6267\u884c\u4e00\u6b21**\u3002\u5982\u679c\u662f\u666e\u901a\u4ee3\u7801\u5757\uff0c\u6bcf\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c31\u6267\u884c\u4e00\u6b21\u3002\u53ef\u4ee5\u770b\u4e0a\u9762\u7684\u4ee3\u7801\u548c\u8fd0\u884c\u7ed3\u679c \u7c7b\u4ec0\u4e48\u65f6\u5019\u88ab\u52a0\u8f7d\uff1f \u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b new \u7684\u65f6\u5019 \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u7236\u7c7b\u4e5f\u4f1a\u88ab\u52a0\u8f7d \u4f7f\u7528\u7c7b\u7684\u9759\u6001\u6210\u5458\u65f6\uff08\u9759\u6001\u5c5e\u6027\uff0c\u9759\u6001\u65b9\u6cd5\uff09 package cn.meowrain.codeBlock ; public class code02 { public static void main ( String [] args ) { int c = A . sum ( 109 , 10 ); } } class A { static { System . out . println ( \"hello\" ); } public static int sum ( int a , int b ){ return a + b ; } } class B extends A { } > \u8fd0\u884c\u7ed3\u679c\uff1a hello \u7531\u4e0a\u53ef\u89c1,\u9759\u6001\u4ee3\u7801\u5757\u4f1a\u5728\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\u6267\u884c \u666e\u901a\u7684\u4ee3\u7801\u5757\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff08new\u7684\u65f6\u5019\uff09\uff0c\u4f1a\u88ab\u9690\u5f0f\u8c03\u7528\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u4f7f\u7528\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf\uff0c\u666e\u901a\u4ee3\u7801\u5757\u4e0d\u4f1a\u88ab\u6267\u884c package cn.meowrain.codeBlock ; public class code02 { public static void main ( String [] args ) { int c = A . sum ( 109 , 10 ); } } class A { { System . out . println ( \"hello\" ); } static int a = 10 ; public static int sum ( int a , int b ) { return a + b ; } } class B extends A { } \u8f93\u51fa\u7ed3\u679c\uff1a \u65e0 \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5728\u4e00\u4e2a\u7c7b\u7684\u8c03\u7528\u987a\u5e8f\u662f: \u8c03\u7528\u9759\u6001\u4ee3\u7801\u5757\u548c\u9759\u6001\u5c5e\u6027\u521d\u59cb\u5316\uff0c\u6309\u7167\u987a\u5e8f\u8c03\u7528 \u8c03\u7528\u666e\u901a\u4ee3\u7801\u5757\u548c\u666e\u901a\u5c5e\u6027\u7684\u521d\u59cb\u5316\uff0c\u6309\u7167\u987a\u5e8f\u8c03\u7528 \u8c03\u7528\u6784\u9020\u65b9\u6cd5 package cn.meowrain.codeBlock ; public class code03 { public static void main ( String [] args ) { AB ab = new AB (); } } class AB { static { System . out . println ( \"\u9759\u6001\u4ee3\u7801\u5757\u521d\u59cb\u5316\" ); } static int a = getN1 (); public static int getN1 (){ System . out . println ( \"\u9759\u6001\u65b9\u6cd5getN1\u521d\u59cb\u5316\" ); return 100 ; } int c = getN2 (); public int getN2 () { System . out . println ( \"\u666e\u901a\u65b9\u6cd5getN2\u521d\u59cb\u5316\" ); return 200 ; } public AB (){ System . out . println ( \"\u6784\u9020\u5668\u88ab\u8c03\u7528\" ); } } \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b \u9759\u6001\u4ee3\u7801\u5757\u521d\u59cb\u5316 \u9759\u6001\u65b9\u6cd5getN1\u521d\u59cb\u5316 \u666e\u901a\u65b9\u6cd5getN2\u521d\u59cb\u5316 \u6784\u9020\u5668\u88ab\u8c03\u7528","title":"\u4ee3\u7801\u5757\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f","text":"\u53c2\u8003https:// www.cnblogs.com/ffforward/p/15259948.html","title":"\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u4ecb\u7ecd_2","text":"\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5c31\u662f\u91c7\u53d6\u4e00\u5b9a\u7684\u65b9\u6cd5\u4fdd\u8bc1\u5728\u6574\u4e2a\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u67d0\u4e2a\u7c7b\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u5e76\u4e14\u8be5\u7c7b\u53ea\u63d0\u4f9b\u4e00\u4e2a\u53d6\u5f97\u5176\u5bf9\u8c61\u5b9e\u4f8b\u7684\u65b9\u6cd5 \u5355\u4f8b\u6a21\u5f0f\u6709\u4e24\u79cd\uff1a 1. \u997f\u6c49\u5f0f 2. \u61d2\u6c49\u5f0f","title":"\u4ecb\u7ecd\uff1a"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u5b9e\u73b0\u65b9\u5f0f","text":"\u6784\u9020\u5668\u79c1\u6709\u5316 \u7c7b\u7684\u5185\u90e8\u521b\u5efa\u5bf9\u8c61 \u5411\u5916\u66b4\u9732\u4e00\u4e2a\u9759\u6001\u7684\u516c\u5171\u65b9\u6cd5","title":"\u5b9e\u73b0\u65b9\u5f0f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u997f\u6c49\u5f0f","text":"\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\u5b9e\u4f8b\u5316\uff0c\u5e76\u4e14\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61 1. \u6784\u9020\u5668\u79c1\u6709\u5316 2. \u5728\u7c7b\u7684\u5185\u90e8\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e3astatic 3. \u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u7684static\u65b9\u6cd5\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61 package cn.meowrain.singlecasemode ; class test { public static void main ( String [] args ) { Hungry hungry = Hungry . getInstance (); System . out . println ( hungry . name ); } } public class Hungry { public String name ; private Hungry ( String name ){ this . name = name ; } //\u6784\u9020\u5668\u79c1\u6709\u5316 private static Hungry hungry = new Hungry ( \"hello\" ); public static Hungry getInstance (){ return hungry ; } }","title":"\u997f\u6c49\u5f0f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u61d2\u6c49\u5f0f","text":"\u61d2\u6c49\u5f0f\uff1a \u9ed8\u8ba4\u4e0d\u4f1a\u5b9e\u4f8b\u5316\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\u4ec0\u4e48\u65f6\u5019new 1. \u6784\u9020\u5668\u79c1\u6709\u5316 2. \u5b9a\u4e49\u4e00\u4e2astatic\u9759\u6001\u5c5e\u6027\u5bf9\u8c61 3. \u63d0\u4f9b\u4e00\u4e2apublic\u7684static\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u8be5\u7c7b\u5bf9\u8c61 4. \u61d2\u6c49\u5f0f\uff0c\u53ea\u6709\u5f53\u7528\u6237\u4f7f\u7528getInstance\u65f6\uff0c\u624d\u8fd4\u56de\u5bf9\u8c61\uff0c\u540e\u9762\u518d\u6b21\u8c03\u7528\u65f6\uff0c\u4f1a\u8fd4\u56de\u4e0a\u6b21\u521b\u5efa\u7684\u8be5\u7c7b\u5bf9\u8c61\uff0c\u4ece\u800c\u4fdd\u8bc1\u5355\u4f8b package cn.meowrain.singlecasemode ; class test02 { public static void main ( String [] args ) { Lazy lazy = Lazy . getInstanceOf (); System . out . println ( lazy . name ); } } public class Lazy { public String name ; private Lazy ( String name ){ this . name = name ; } private static Lazy lazy = null ; public static Lazy getInstanceOf (){ if ( lazy == null ){ lazy = new Lazy ( \"mmm\" ); } return lazy ; } }","title":"\u61d2\u6c49\u5f0f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u997f\u6c49\u5f0f\u548c\u61d2\u6c49\u5f0f\u7684\u533a\u522b","text":"\uff081\uff09\u4e8c\u8005\u6700\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u673a\u4e0d\u540c\uff1a \u997f\u6c49\u5f0f\u662f\u5728\u7c7b\u52a0\u8f7d\u65f6\u5c31\u521b\u5efa\u4e86\u5bf9\u8c61\u5b9e\u4f8b\uff0c \u800c\u61d2\u6c49\u5f0f\u662f\u5728\u4f7f\u7528\u65f6\u624d\u521b\u5efa\u3002 \uff082\uff09\u997f\u6c49\u5f0f\u4e0d\u5b58\u5728\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u61d2\u6c49\u5f0f\u5b58\u5728\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \uff083\uff09\u997f\u6c49\u5f0f\u5b58\u5728\u6d6a\u8d39\u8d44\u6e90\u7684\u53ef\u80fd\uff08\u6ca1\u6709\u4f7f\u7528\u5230\u8fd9\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff09\uff0c\u800c\u61d2\u6c49\u5f0f\u4e0d\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u3002 \uff084\uff09\u5728javaSE\u6807\u51c6\u7c7b\u4e2d\uff0cjava.lang.Runtime\u5c31\u662f\u7ecf\u5178\u7684\u5355\u4f8b\u6a21\u5f0f\u3002","title":"\u997f\u6c49\u5f0f\u548c\u61d2\u6c49\u5f0f\u7684\u533a\u522b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#final\u5173\u952e\u5b57","text":"","title":"final\u5173\u952e\u5b57"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u57fa\u672c\u4ecb\u7ecd_1","text":"final\u53ef\u4ee5\u4fee\u9970\u7c7b\uff0c\u5c5e\u6027\uff0c\u65b9\u6cd5\u548c\u5c40\u90e8\u53d8\u91cf \u4f7f\u7528\u73af\u5883\uff1a 1. \u5f53\u4e0d\u5e0c\u671b\u7c7b\u88ab\u7ee7\u627f\u65f6\uff0c\u53ef\u4ee5\u7528final\u4fee\u9970 2. \u5f53\u4e0d\u5e0c\u671b\u7236\u7c7b\u7684\u67d0\u4e2a\u65b9\u6cd5\u88ab\u5b50\u7c7b\u8986\u76d6/\u91cd\u5199\u65f6\uff0c\u53ef\u4ee5\u7528final\u5173\u952e\u5b57\u4fee\u9970 3. \u5f53\u4e0d\u5e0c\u671b\u7c7b\u7684\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\u88ab\u4fee\u6539\uff0c\u53ef\u7528final\u4fee\u9970 4. \u5f53\u4e0d\u5e0c\u671b\u67d0\u4e2a\u5c40\u90e8\u53d8\u91cf\u88ab\u4fee\u6539\uff0c\u53ef\u4ee5\u7528final\u4fee\u9970","title":"\u57fa\u672c\u4ecb\u7ecd\uff1a"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#final\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879","text":"final\u4fee\u9970\u7684\u5c5e\u6027\u53c8\u53eb\u5e38\u91cf final\u4fee\u9970\u7684\u5c5e\u6027\u5728\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8d4b\u521d\u503c\uff0c\u5e76\u4e14\u4ee5\u540e\u4e0d\u80fd\u518d\u4fee\u6539 \u5982\u679cfinal\u4fee\u9970\u7684\u5c5e\u6027\u662f\u9759\u6001\u7684\uff0c\u5219\u521d\u59cb\u5316\u7684\u4f4d\u7f6e\u53ea\u80fd\u662f 1.\u5b9a\u4e49\u65f6 2.\u5728\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u53ef\u4ee5\u8d4b\u503c\uff0c\u4e0d\u80fd\u5728\u6784\u9020\u5668\u4e2d\u8d4b\u503c final\u7c7b\u4e0d\u80fd\u7ee7\u627f\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u5982\u679c\u7c7b\u4e0d\u662ffinal\u7c7b\uff0c\u4f46\u662f\u6709final\u65b9\u6cd5\uff0c\u5219\u8be5\u65b9\u6cd5\u867d\u7136\u4e0d\u80fd\u91cd\u5199\uff0c\u4f46\u53ef\u4ee5\u88ab\u7ee7\u627f 6.final\u548cstatic\u5f80\u5f80\u642d\u914d\u4f7f\u7528\uff0c\u6548\u7387\u66f4\u9ad8\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7c7b\u52a0\u8f7d\uff0c\u5e95\u5c42\u7f16\u8bd1\u5668\u505a\u4e86\u4f18\u5316\u5904\u7406 \u5305\u88c5\u7c7b( Integer,Double,Float,Boolean\u7b49\u90fd\u662ffinal )\uff0c**String**\u4e5f\u662ffinal\u7c7b","title":"final\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%28%E9%AB%98%E7%BA%A7%29-java-mian-xiang-dui-xiang--gao-ji-/#\u62bd\u8c61\u7c7b","text":"","title":"\u62bd\u8c61\u7c7b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/","text":"Java\u9762\u5411\u5bf9\u8c61\u57fa\u7840(\u521d\u7ea7) # \u5bf9\u9762\u5411\u5bf9\u8c61\u548c\u9762\u5411\u8fc7\u7a0b\u7684\u7406\u89e3 \u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u8fc7\u7a0b\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3_\u667a\u5341\u4e03\u00b0\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u9762\u5411\u5bf9\u8c61\u548c\u9762\u5411\u8fc7\u7a0b\u7684\u7406\u89e3 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81 # \u5c01\u88c5 (Encapsulation) \u7ee7\u627f (Inheritance) \u591a\u6001 (Polymorphism) \u521d\u8bc6\u5bf9\u8c61\u548c\u7c7b # \u521d\u6b21\u4f7f\u7528\u5bf9\u8c61\u548c\u7c7b # \u5982\u4e0b\uff0c\u5728\u4e0b\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u732b\u7c7b\uff0c\u7136\u540e\u5229\u7528\u732b\u7c7b\u521b\u5efa\u4e86\u4e24\u4e2a\u732b\u5bf9\u8c61\uff0c\u4e00\u4e2a\u8d4b\u503c\u7ed9cat01\uff0c\u4e00\u4e2a\u8d4b\u503c\u7ed9cat02 package cn.meowrain.Object_ ; public class relean_01 { public static void main ( String [] args ) { //\u521b\u5efa\u4e24\u732b\u5bf9\u8c61 Cat cat01 = new Cat (); cat01 . name = \"\u5c0f\u82b1\" ; cat01 . age = 1 ; cat01 . color = \"\u82b1\u8272\" ; Cat cat02 = new Cat (); cat02 . name = \"\u5c0f\u767d\" ; cat02 . age = 2 ; cat02 . color = \"\u767d\u8272\" ; //\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027 System . out . println ( cat01 . name ); System . out . println ( cat02 . name ); cat01 . eat (); cat02 . eat (); } } class Cat { public String name ; public int age ; public String color ; public void eat (){ System . out . println ( name + \"\u5403\u996d\" ); } public void drink (){ System . out . println ( name + \"\u559d\u6c34\" ); } } new Cat() //\u521b\u5efa\u4e00\u53ea\u732b\u5bf9\u8c61 Cat cat01 = new Cat(); //\u628a\u521b\u5efa\u7684\u732b\u5bf9\u8c61\u8d4b\u503c\u7ed9cat01 cat01\u662f\u5bf9\u8c61\u540d(\u5bf9\u8c61\u5f15\u7528) \u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 # 1 ) \u5148\u58f0\u660e\u518d\u521b\u5efa Cat cat ; //\u58f0\u660e\u5bf9\u8c61 cat cat = new Cat (); //\u521b\u5efa 2 ) \u76f4\u63a5\u521b\u5efa Cat cat = new Cat (); \u8865\u5145\uff1aJava\u4e2d\u5b9e\u4f8b\u5316\u5bf9\u8c61\u662f\u4ec0\u4e48\u610f\u601d \u5728Java\u8bed\u8a00\u4e2d\u4f7f\u7528**new\u5173\u952e\u5b57\u521b\u5efa/\u6784\u9020\u5bf9\u8c61\u7684\u8fc7\u7a0b\u53eb\u505a\u7c7b\u7684\u5b9e\u4f8b\u5316**\uff0c\u8be5\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u4f1a\u5728 \u5185\u5b58 \u7a7a\u95f4\u7684**\u5806\u533a\u7533\u8bf7\u4e00\u5757\u5b58\u50a8\u533a\u57df**\uff0c\u7528\u4e8e**\u8bb0\u5f55\u8be5\u5bf9\u8c61\u72ec\u6709\u7684\u6210\u5458\u53d8\u91cf\u4fe1\u606f**\u3002 \u901a\u4fd7\u70b9\u5c31\u662f\uff0c\u5b9e\u4f8b\u5316\uff1a\u4f7f\u7528\u5173\u952e\u5b57new\u6765\u521b\u5efa\u5bf9\u8c61\u3002 \u4f8b\u5982\uff1a Person person = new Person(); \u8fd9\u6837\u7684\u8bed\u53e5\u79f0\u4e3a\u521b\u5efa\u5bf9\u8c61\u3002 \u5bf9\u8c61\u662f\u6839\u636e\u7c7b\u521b\u5efa\u7684\u3002\u5728Java\u4e2d\u4f7f\u7528\u5173\u952e\u5b57new\u521b\u5efa\u5bf9\u8c61\u3002 new Person(); \u662f \u58f0\u660e\u4e00\u4e2aPerson\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728\u5806\u533a\u533a\u57df\u3002 new Person(); ()\u662f\u6307\u521b\u5efaPerson\u7c7b\u578b\u7684\u5bf9\u8c61\u540e\uff0c\u81ea\u52a8\u8c03\u7528Person\u7c7b\u4e2d\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6765\u8fdb\u884c\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002 Person person \uff0cPerson\u4e3a\u7c7b\u540d\uff0cperson \u4e3a\u5f15\u7528\u53d8\u91cf\u540d\u3002 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3aCSDN\u535a\u4e3b\u300c\u667a\u5341\u4e03\u00b0\u300d\u7684\u539f\u521b\u6587\u7ae0\uff0c\u9075\u5faaCC 4.0 BY-SA\u7248\u6743\u534f\u8bae\uff0c\u8f6c\u8f7d\u8bf7\u9644\u4e0a\u539f\u6587\u51fa\u5904\u94fe\u63a5\u53ca\u672c\u58f0\u660e\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/weixin_45812336/article/details/113954823 \u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u5728\u5f62\u5f0f # \u5c5e\u6027\uff0c\u6210\u5458\u53d8\u91cf # package cn.meowrain.Object_ ; public class relearn_02 { } class Hunman { //\u4e0b\u9762\u90fd\u5c5e\u4e8eHuman\u7c7b\u7684\u5c5e\u6027 String name ; double salary ; int age ; String country ; } \u5c5e\u6027\u662f\u7c7b\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u4e00\u822c\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b,\u4e5f\u53ef\u662f\u5f15\u7528\u7c7b\u578b(\u5bf9\u8c61\uff0c\u6570\u7ec4)\u3002\u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\u7684 name , salary \u7b49\u90fd\u662f\u8fd9\u4e2a Human \u7c7b\u7684\u5c5e\u6027 \u5c5e\u6027\u7684\u5b9a\u4e49\u8bed\u6cd5\u540c\u53d8\u91cf\uff0c \u793a\u4f8b\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26 \u5c5e\u6027\u7c7b\u578b \u5c5e\u6027\u540d \u8bbf\u95ee\u4fee\u9970\u7b26\u8be6\u60c5\u89c1 Java \u8bbf\u95ee\u4fee\u9970\u7b26 - \u55b5\u96e8\u306e\u5c0f\u5c4b|\u6728\u66f4\u8001\u5a46\uff01\uff01\uff01 (meowrain.cn) \u5c5e\u6027\u7684\u5b9a\u4e49\u7c7b\u578b\u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\uff0c\u5305\u542b\u57fa\u672c\u7c7b\u578b\u6216\u5f15\u7528\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u8be6\u89c1 Java\u6570\u636e\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b (biancheng.net) Java\u6570\u636e\u7c7b\u578b\uff08\u516b\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b + \u56db\u79cd\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff09_\u706b\u706b\u7b14\u8bb0\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u5f15\u7528\u6570\u636e\u7c7b\u578b\u6709\u54ea\u51e0\u79cd \u5c5e\u6027\u5982\u679c\u4e0d\u8d4b\u503c\uff0c\u6709\u9ed8\u8ba4\u503c\uff0c\u89c4\u5219\u548c\u6570\u7ec4\u4e00\u81f4\u3002 \u5177\u4f53: int 0\uff0cshort 0, byte 0, long 0, float 0.0,double 0.0\uff0cchar \\u0000\uff0c boolean false\uff0cString null \u5982\u4f55\u8bbf\u95ee\u5c5e\u6027 # \u57fa\u672c\u8bed\u6cd5 \u5bf9\u8c61\u540d.\u5c5e\u6027\u540d; \u793a\u8303\uff1a package cn.meowrain.Object_ ; public class relearn_02 { Human human01 = new Human (); human01 . name = \"mike\" ; human01 . age = 20 ; System . out . println ( human . name + \"is\" + human01 . age + \"years old\" ) } class Hunman { //\u4e0b\u9762\u90fd\u5c5e\u4e8eHuman\u7c7b\u7684\u5c5e\u6027 String name ; double salary ; int age ; String country ; } \u7c7b\u548c\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u673a\u5236 # \u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u4eba\u7c7b(Person)(\u5305\u62ec \u540d\u5b57,\u5e74\u9f84) package cn.meowrain.Object_ ; public class relearn_03 { public static void main ( String [] args ) { Person p1 = new Person (); p1 . age = 10 ; p1 . name = \"\u5c0f\u660e\" ; Person p2 = p1 ; System . out . println ( p2 . age ); } } class Person { public int age ; public String name ; } \u95ee\u9898\uff1a p2.age \u7a76\u7adf\u662f\u591a\u5c11\uff0c\u753b\u51fa\u5185\u5b58\u56fe Java \u5185\u5b58\u7684\u7ed3\u6784\u5206\u6790 # 1) \u6808\uff1a \u4e00\u822c\u5b58\u653e\u57fa\u672c\u6570\u636e\u7c7b\u578b(\u5c40\u90e8\u53d8\u91cf) 2) \u5806\uff1a \u5b58\u653e\u5bf9\u8c61(Cat cat , \u6570\u7ec4\u7b49) 3) \u65b9\u6cd5\u533a\uff1a\u5e38\u91cf\u6c60(\u5e38\u91cf\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32)\uff0c \u7c7b\u52a0\u8f7d\u4fe1\u606f Java \u521b\u5efa\u5bf9\u8c61\u7684\u6d41\u7a0b\u7b80\u5355\u5206\u6790 # \u65b9\u6cd5\u91cd\u8f7d # java\u4e2d\u5141\u8bb8\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u591a\u4e2a\u540c\u540d\u65b9\u6cd5\u7684\u5b58\u5728\uff0c\u4f46\u662f\u8981\u6c42\u5f62\u53c2\u5217\u8868\u4e0d\u4e00\u81f4 \u901a\u8fc7\u91cd\u8f7d\uff0c\u6211\u4eec\u51cf\u8f7b\u4e86\u8d77\u540d\u7684\u9ebb\u70e6 \u6848\u4f8b\uff1a package cn.meowrain.Object_ ; public class relearn_06 { public static void main ( String [] args ) { rel rel = new rel (); int m = rel . getSum ( 1 , 2 , 3 ); System . out . println ( m ); int n = rel . getSum ( 1 , 2 ); } } class rel { public int getSum ( int n1 , int n2 ){ return n1 + n2 ; } public int getSum ( int n1 , int n2 , int n3 ){ return n1 + n2 + n3 ; } } \u53ef\u53d8\u53c2\u6570 # java\u5141\u8bb8\u628a\u540c\u4e00\u4e2a\u7c7b\u4e2d\u591a\u4e2a\u540c\u540d\u540c\u529f\u80fd\u4f46\u662f\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a\u65b9\u6cd5 \u57fa\u672c\u8bed\u6cd5\uff1a //int... \u8868\u793a\u63a5\u53d7\u7684\u662f\u53ef\u53d8\u53c2\u6570\uff0c\u7c7b\u578b\u662fint\uff0c\u5373\u53ef\u4ee5\u63a5\u6536\u591a\u4e2aint //\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u65f6\u5019\uff0c\u53ef\u4ee5\u5f53\u6570\u7ec4\u6765\u4f7f\u7528\uff0cnums\u53ef\u4ee5\u5f53\u505a\u6570\u7ec4 package cn.meowrain.Object_ ; public class relearn_07 { public static void main ( String [] args ) { rel_07 rel = new rel_07 (); int m = rel . getSum ( 1 , 2 , 3 , 4 ); //10 int n = rel . getSum ( 5 , 6 , 7 ); //18 int b = rel . getSum ( 0 , 1 ); //1 System . out . println ( m ); System . out . println ( n ); System . out . println ( b ); } } class rel_07 { //int... \u8868\u793a\u63a5\u53d7\u7684\u662f\u53ef\u53d8\u53c2\u6570\uff0c\u7c7b\u578b\u662fint\uff0c\u5373\u53ef\u4ee5\u63a5\u6536\u591a\u4e2aint //\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u65f6\u5019\uff0c\u53ef\u4ee5\u5f53\u6570\u7ec4\u6765\u4f7f\u7528\uff0cnums\u53ef\u4ee5\u5f53\u505a\u6570\u7ec4 public int getSum ( int ... nums ){ int res = 0 ; for ( int i = 0 ; i < nums . length ; i ++ ){ res += nums [ i ] ; } return res ; } } \u4f5c\u7528\u57df # package cn.meowrain.Object_ ; public class relearn_08 { public static void main ( String [] args ) { } } class Dog { //\u5168\u5c40\u53d8\u91cf\uff1a\u4e5f\u5c31\u662f\u5c5e\u6027\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u4f53Cat\u7c7b\uff0ccry eat\u7b49\u65b9\u6cd5\u4f7f\u7528\u5c5e\u6027 //\u5c5e\u6027\u5728\u5b9a\u4e49\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c int age = 10 ; double weight ; //\u9ed8\u8ba4\u662f0.0 public void hi () { //\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c\u540e\u624d\u80fd\u4f7f\u7528\uff0c\u56e0\u4e3a\u6ca1\u6709\u9ed8\u8ba4\u503c //\u5c40\u90e8\u53d8\u91cf\u4e00\u822c\u662f\u6307\u5728\u6210\u5458\u65b9\u6cd5\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf int num = 1 ; String address = \"Beijing's Dog\" ; System . out . println ( \"num=\" + num ); System . out . println ( \"address\" + address ); System . out . println ( \"weight=\" + weight ); } public void cry () { int n = 10 ; String name = \"jack\" ; System . out . println ( name + \"cry for\" + n + \"times\" ); } public void eat () { String name = \"meow\" ; System . out . println ( name + \"eat\" ); } } \u6ce8\u610f\u4e8b\u9879\u548c\u4f7f\u7528\u7ec6\u8282 # \u5c5e\u6027\u53ef\u4ee5\u52a0\u4fee\u9970\u7b26\uff0c\u4f46\u662f\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u52a0\u4fee\u9970\u7b26 \u6784\u9020\u5668 # \u6784\u9020\u65b9\u6cd5\u53c8\u53eb\u6784\u9020\u5668(constructor)\uff0c\u662f\u7c7b\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c \u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b8c\u6210\u5bf9\u65b0\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u3002\u5b83\u6709\u51e0\u4e2a\u7279\u70b9\uff1a 1) \u65b9\u6cd5\u540d\u548c\u7c7b\u540d\u76f8\u540c 1) \u6ca1\u6709\u8fd4\u56de\u503c 1) \u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u7684\u8c03\u7528\u8be5\u7c7b\u7684\u6784\u9020\u5668\u5b8c\u6210\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u3002 \u57fa\u672c\u8bed\u6cd5\uff1a [ \u4fee\u9970\u7b26 ] \u65b9\u6cd5\u540d ( \u5f62\u53c2\u5217\u8868 ) { \u65b9\u6cd5\u4f53 } \u6848\u4f8b\uff1a package cn.meowrain.Object_ ; public class relearn_09 { public static void main ( String [] args ) { rel_09 rel = new rel_09 ( \"meowrain\" , 18 ); rel_09 rel_1 = new rel_09 ( \"meow\" , 20 , \"mouse\" ); rel . getInfo (); rel_1 . getItem (); } } class rel_09 { String name ; int age ; String item ; public rel_09 ( String name , int age ) { this . name = name ; this . age = age ; } // \u6784\u9020\u5668\u91cd\u8f7d public rel_09 ( String name , int age , String item ) { this . name = name ; this . age = age ; this . item = item ; } public void getInfo () { System . out . println ( this . name + \" \" + this . age ); } public void getItem () { System . out . println ( this . item ); } } \u7ec3\u4e60\u9898\uff1a # package cn.meowrain.Object_ ; public class relearn_10 { public static void main ( String [] args ) { Person_n person01 = new Person_n ( \"meow\" , 12 ); Person_n person02 = new Person_n (); System . out . println ( person01 . name + \" is \" + person01 . age + \"years old\" ); System . out . println ( person02 . name + \" is \" + person02 . age + \"years old\" ); } } class Person_n { String name ; int age ; public Person_n () { this . age = 18 ; } public Person_n ( String name , int age ) { this . name = name ; this . age = age ; } } \u5bf9\u8c61\u521b\u5efa\u7684\u6d41\u7a0b\u5206\u6790 # this\u5173\u952e\u5b57 # \u4ec0\u4e48\u662fthis? \u7b80\u5355\u8bf4\uff1a\u54ea\u4e2a\u5bf9\u8c61\u8c03\u7528\uff0cthis\u5c31\u4ee3\u8868\u54ea\u4e2a\u5bf9\u8c61 package cn.meowrain.Object_ ; public class relearn12 { } class This01 { public static void main ( String [] args ) { Dog_new dog_new = new Dog_new ( \"\u5927\u9ec4\" , 1 ); dog_new . info (); } } class Dog_new { String name ; int age ; public Dog_new ( String name , int age ) { this . name = name ; this . age = age ; } public void info (){ System . out . println ( \"this.hashCode=\" + this . hashCode ()); System . out . println ( name + \"\\t\" + age + \"\\t\" ); } } \u7ec3\u4e60\u9898\uff1a # package cn.meowrain.Object_ ; public class relearn13 { public static void main ( String [] args ) { person_01 p1 = new person_01 ( \"mary\" , 18 ); person_01 p2 = new person_01 ( \"mary\" , 18 ); System . out . println ( p1 . compareTo ( p2 )); //true } } class person_01 { String name ; int age ; public person_01 ( String name , int age ) { this . name = name ; this . age = age ; } public boolean compareTo ( person_01 p ){ if ( this . name . equals ( p . name ) && this . age == p . age ) { return true ; } return false ; } } \u4f5c\u4e1a # \u4f5c\u4e1a1 # package cn.meowrain.Object_.homework ; public class h1 { public static void main ( String [] args ) { double [] arr = { 1.0 , - 2.0 , 4.5 }; A01 a01 = new A01 (); double max = a01 . max ( arr ); System . out . println ( max ); } } class A01 { public double max ( double [] a ) { double m = a [ 0 ] ; for ( int i = 0 ; i < a . length ; i ++ ) { if ( a [ i ] > m ) m = a [ i ] ; } return m ; } } \u4f5c\u4e1a2 # package cn.meowrain.Object_.homework ; public class h2 { public static void main ( String [] args ) { String [] strArr = { \"helloworld\" , \"meowrain\" }; A02 a02 = new A02 (); int a = a02 . find ( strArr ); if ( a == 0 ){ System . out . println ( true ); } else { System . out . println ( false ); } } } class A02 { public int find ( String [] arr ){ for ( int i = 0 ; i < arr . length ; i ++ ){ if ( arr [ i ] . equals ( \"helloworld\" )){ return i ; } } return - 1 ; } } \u4f5c\u4e1a3 # package cn.meowrain.Object_.homework ; public class h3 { public static void main ( String [] args ) { Book book = new Book ( \"\u732b\u7684\u6545\u4e8b\" , 200 ); Book book2 = new Book ( \"\u72d7\u7684\u6545\u4e8b\" , 120 ); Book book3 = new Book ( \"\u9a74\u7684\u6545\u4e8b\" , 20 ); book . updatePrice ( book . price ); book2 . updatePrice ( book2 . price ); book3 . updatePrice ( book3 . price ); System . out . println ( book . name + \" : \" + book . price ); System . out . println ( book2 . name + \" : \" + book2 . price ); System . out . println ( book3 . name + \" : \" + book3 . price ); /* * \u732b\u7684\u6545\u4e8b : 150.0 \u72d7\u7684\u6545\u4e8b : 100.0 \u9a74\u7684\u6545\u4e8b : 20.0 * */ } } class Book { String name ; double price ; public Book ( String name , double price ) { this . name = name ; this . price = price ; } public void updatePrice ( double price ){ if ( price > 150 ){ this . price = 150 ; } else if ( price > 100 ) { this . price = 100 ; } } } \u4f5c\u4e1a4 # package cn.meowrain.Object_.homework ; public class h4 { public static void main ( String [] args ) { A03 a03 = new A03 (); int [] arr = { 1 , 2 , 3 , 4 , 5 }; int [] a1 = a03 . copyArr ( arr ); for ( int i = 0 ; i < a1 . length ; i ++ ){ System . out . println ( a1 [ i ] ); } } } class A03 { public int [] copyArr ( int [] arr ) { int [] a = new int [ arr . length ] ; for ( int i = 0 ; i < arr . length ; i ++ ){ a [ i ] = arr [ i ] ; } return a ; } } \u4f5c\u4e1a5 # package cn.meowrain.Object_.homework ; public class h5 { public static void main ( String [] args ) { Circle circle = new Circle ( 2 ); double perimeter = circle . perimeter (); double area = circle . area (); System . out . printf ( \"%.2f\\n\" , perimeter ); System . out . printf ( \"%.2f\\n\" , area ); /* * 12.57 12.57 */ } } class Circle { double r ; public Circle ( double r ) { this . r = r ; } public double perimeter () { return Math . PI * r * 2 ; } public double area () { return Math . PI * r * r ; } } \u4f5c\u4e1a6 # package cn.meowrain.Object_.homework ; public class h6 { public static void main ( String [] args ) { Cale cale01 = new Cale ( 5 , 2 ); Cale cale02 = new Cale ( 1 , 0 ); cale01 . divide (); cale02 . divide (); } } class Cale { int a , b ; public Cale ( int a , int b ) { this . a = a ; this . b = b ; } public int sum () { return a + b ; } public int multiply () { return a * b ; } public void divide () { if ( b == 0 ) { System . out . println ( \"\u8f93\u5165\u7684\u9664\u6570\u4e0d\u80fd\u4e3a0\uff01\" ); } else { System . out . println ( a * 1.0 / b ); } } } \u4f5c\u4e1a7 # package cn.meowrain.Object_.homework ; public class h7 { public static void main ( String [] args ) { Dog dog = new Dog ( \"mike\" , \"white\" , 2 ); dog . show (); } } class Dog { String name ; String color ; int age ; public Dog ( String name , String color , int age ){ this . name = name ; this . color = color ; this . age = age ; } public void show (){ System . out . println ( \"the dog \" + name + \" is \" + age + \" \" + \"years old and its color is \" + color ); } } \u4f5c\u4e1a8 # \u4f5c\u4e1a9 # package cn.meowrain.Object_.homework ; public class h9 { public static void main ( String [] args ) { Music music01 = new Music ( \"\u9752\u82b1\u74f7\" , \"4:00\" ); Music music02 = new Music ( \"\u9e21\u4f60\u592a\u7f8e\" , \"3:00\" ); music01 . getInfo (); music01 . play (); } } class Music { String name ; String times ; public Music ( String name , String times ){ this . name = name ; this . times = times ; } public void play (){ System . out . println ( name + \"is palying for \" + times ); } public void getInfo (){ System . out . println ( \"the music name is \" + name + \"times is : \" + times ); } } \u4f5c\u4e1a10 # package cn.meowrain.Object_.homework ; public class h8 { int i = 100 ; public void m (){ int j = i ++ ; System . out . println ( \"i=\" + i ); System . out . println ( \"j=\" + j ); } } class Test { public static void main ( String [] args ) { h8 demo = new h8 (); h8 demo2 = new h8 (); demo . m (); System . out . println ( demo . i ); System . out . println ( demo2 . i ); } } i = 101 j = 100 101 100 \u4f5c\u4e1a11 # \u4e0d\u505a\u4e86 \u4f5c\u4e1a12 # package cn.meowrain.Object_.homework ; public class h12 { Employee_ emp1 = new Employee_ ( \"\u7ecf\u7406\" , \"10000\" ); } class Employee_ { String name ; String sex ; int age ; String position ; String salary ; public Employee_ ( String name , String sex , int age , String position , String salary ) { this . name = name ; this . sex = sex ; this . age = age ; this . position = position ; this . salary = salary ; } public Employee_ ( String name , String sex , int age ) { this . name = name ; this . sex = sex ; this . age = age ; } public Employee_ ( String position , String salary ) { this . position = position ; this . salary = salary ; } } \u4f5c\u4e1a13 # package cn.meowrain.Object_.homework ; public class h13 { public static void main ( String [] args ) { Circle01 circle = new Circle01 (); PassObject pass = new PassObject (); pass . printAreas ( circle , 5 ); } } class Circle01 { public double radius ; public double findArea (){ return radius * radius * Math . PI ; } } class PassObject { public void printAreas ( Circle01 c , int times ) { for ( int i = times ; i > 0 ; i -- ){ c . radius = i ; System . out . println ( \"r:\" + i + \" \" + \"S=\" + c . findArea ()); } } }","title":"Java\u9762\u5411\u5bf9\u8c61\u57fa\u7840(\u521d\u7ea7)"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#java\u9762\u5411\u5bf9\u8c61\u57fa\u7840\u521d\u7ea7","text":"\u5bf9\u9762\u5411\u5bf9\u8c61\u548c\u9762\u5411\u8fc7\u7a0b\u7684\u7406\u89e3 \u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u8fc7\u7a0b\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3_\u667a\u5341\u4e03\u00b0\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u9762\u5411\u5bf9\u8c61\u548c\u9762\u5411\u8fc7\u7a0b\u7684\u7406\u89e3","title":"Java\u9762\u5411\u5bf9\u8c61\u57fa\u7840(\u521d\u7ea7)"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81","text":"\u5c01\u88c5 (Encapsulation) \u7ee7\u627f (Inheritance) \u591a\u6001 (Polymorphism)","title":"\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u521d\u8bc6\u5bf9\u8c61\u548c\u7c7b","text":"","title":"\u521d\u8bc6\u5bf9\u8c61\u548c\u7c7b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u521d\u6b21\u4f7f\u7528\u5bf9\u8c61\u548c\u7c7b","text":"\u5982\u4e0b\uff0c\u5728\u4e0b\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\uff0c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u732b\u7c7b\uff0c\u7136\u540e\u5229\u7528\u732b\u7c7b\u521b\u5efa\u4e86\u4e24\u4e2a\u732b\u5bf9\u8c61\uff0c\u4e00\u4e2a\u8d4b\u503c\u7ed9cat01\uff0c\u4e00\u4e2a\u8d4b\u503c\u7ed9cat02 package cn.meowrain.Object_ ; public class relean_01 { public static void main ( String [] args ) { //\u521b\u5efa\u4e24\u732b\u5bf9\u8c61 Cat cat01 = new Cat (); cat01 . name = \"\u5c0f\u82b1\" ; cat01 . age = 1 ; cat01 . color = \"\u82b1\u8272\" ; Cat cat02 = new Cat (); cat02 . name = \"\u5c0f\u767d\" ; cat02 . age = 2 ; cat02 . color = \"\u767d\u8272\" ; //\u8bbf\u95ee\u5bf9\u8c61\u5c5e\u6027 System . out . println ( cat01 . name ); System . out . println ( cat02 . name ); cat01 . eat (); cat02 . eat (); } } class Cat { public String name ; public int age ; public String color ; public void eat (){ System . out . println ( name + \"\u5403\u996d\" ); } public void drink (){ System . out . println ( name + \"\u559d\u6c34\" ); } } new Cat() //\u521b\u5efa\u4e00\u53ea\u732b\u5bf9\u8c61 Cat cat01 = new Cat(); //\u628a\u521b\u5efa\u7684\u732b\u5bf9\u8c61\u8d4b\u503c\u7ed9cat01 cat01\u662f\u5bf9\u8c61\u540d(\u5bf9\u8c61\u5f15\u7528)","title":"\u521d\u6b21\u4f7f\u7528\u5bf9\u8c61\u548c\u7c7b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61","text":"1 ) \u5148\u58f0\u660e\u518d\u521b\u5efa Cat cat ; //\u58f0\u660e\u5bf9\u8c61 cat cat = new Cat (); //\u521b\u5efa 2 ) \u76f4\u63a5\u521b\u5efa Cat cat = new Cat (); \u8865\u5145\uff1aJava\u4e2d\u5b9e\u4f8b\u5316\u5bf9\u8c61\u662f\u4ec0\u4e48\u610f\u601d \u5728Java\u8bed\u8a00\u4e2d\u4f7f\u7528**new\u5173\u952e\u5b57\u521b\u5efa/\u6784\u9020\u5bf9\u8c61\u7684\u8fc7\u7a0b\u53eb\u505a\u7c7b\u7684\u5b9e\u4f8b\u5316**\uff0c\u8be5\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u4f1a\u5728 \u5185\u5b58 \u7a7a\u95f4\u7684**\u5806\u533a\u7533\u8bf7\u4e00\u5757\u5b58\u50a8\u533a\u57df**\uff0c\u7528\u4e8e**\u8bb0\u5f55\u8be5\u5bf9\u8c61\u72ec\u6709\u7684\u6210\u5458\u53d8\u91cf\u4fe1\u606f**\u3002 \u901a\u4fd7\u70b9\u5c31\u662f\uff0c\u5b9e\u4f8b\u5316\uff1a\u4f7f\u7528\u5173\u952e\u5b57new\u6765\u521b\u5efa\u5bf9\u8c61\u3002 \u4f8b\u5982\uff1a Person person = new Person(); \u8fd9\u6837\u7684\u8bed\u53e5\u79f0\u4e3a\u521b\u5efa\u5bf9\u8c61\u3002 \u5bf9\u8c61\u662f\u6839\u636e\u7c7b\u521b\u5efa\u7684\u3002\u5728Java\u4e2d\u4f7f\u7528\u5173\u952e\u5b57new\u521b\u5efa\u5bf9\u8c61\u3002 new Person(); \u662f \u58f0\u660e\u4e00\u4e2aPerson\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728\u5806\u533a\u533a\u57df\u3002 new Person(); ()\u662f\u6307\u521b\u5efaPerson\u7c7b\u578b\u7684\u5bf9\u8c61\u540e\uff0c\u81ea\u52a8\u8c03\u7528Person\u7c7b\u4e2d\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6765\u8fdb\u884c\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002 Person person \uff0cPerson\u4e3a\u7c7b\u540d\uff0cperson \u4e3a\u5f15\u7528\u53d8\u91cf\u540d\u3002 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3aCSDN\u535a\u4e3b\u300c\u667a\u5341\u4e03\u00b0\u300d\u7684\u539f\u521b\u6587\u7ae0\uff0c\u9075\u5faaCC 4.0 BY-SA\u7248\u6743\u534f\u8bae\uff0c\u8f6c\u8f7d\u8bf7\u9644\u4e0a\u539f\u6587\u51fa\u5904\u94fe\u63a5\u53ca\u672c\u58f0\u660e\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/weixin_45812336/article/details/113954823","title":"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u5728\u5f62\u5f0f","text":"","title":"\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u5728\u5f62\u5f0f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u5c5e\u6027\u6210\u5458\u53d8\u91cf","text":"package cn.meowrain.Object_ ; public class relearn_02 { } class Hunman { //\u4e0b\u9762\u90fd\u5c5e\u4e8eHuman\u7c7b\u7684\u5c5e\u6027 String name ; double salary ; int age ; String country ; } \u5c5e\u6027\u662f\u7c7b\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u4e00\u822c\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b,\u4e5f\u53ef\u662f\u5f15\u7528\u7c7b\u578b(\u5bf9\u8c61\uff0c\u6570\u7ec4)\u3002\u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\u7684 name , salary \u7b49\u90fd\u662f\u8fd9\u4e2a Human \u7c7b\u7684\u5c5e\u6027 \u5c5e\u6027\u7684\u5b9a\u4e49\u8bed\u6cd5\u540c\u53d8\u91cf\uff0c \u793a\u4f8b\uff1a\u8bbf\u95ee\u4fee\u9970\u7b26 \u5c5e\u6027\u7c7b\u578b \u5c5e\u6027\u540d \u8bbf\u95ee\u4fee\u9970\u7b26\u8be6\u60c5\u89c1 Java \u8bbf\u95ee\u4fee\u9970\u7b26 - \u55b5\u96e8\u306e\u5c0f\u5c4b|\u6728\u66f4\u8001\u5a46\uff01\uff01\uff01 (meowrain.cn) \u5c5e\u6027\u7684\u5b9a\u4e49\u7c7b\u578b\u53ef\u4ee5\u4e3a\u4efb\u610f\u7c7b\u578b\uff0c\u5305\u542b\u57fa\u672c\u7c7b\u578b\u6216\u5f15\u7528\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u8be6\u89c1 Java\u6570\u636e\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b (biancheng.net) Java\u6570\u636e\u7c7b\u578b\uff08\u516b\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b + \u56db\u79cd\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff09_\u706b\u706b\u7b14\u8bb0\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u5f15\u7528\u6570\u636e\u7c7b\u578b\u6709\u54ea\u51e0\u79cd \u5c5e\u6027\u5982\u679c\u4e0d\u8d4b\u503c\uff0c\u6709\u9ed8\u8ba4\u503c\uff0c\u89c4\u5219\u548c\u6570\u7ec4\u4e00\u81f4\u3002 \u5177\u4f53: int 0\uff0cshort 0, byte 0, long 0, float 0.0,double 0.0\uff0cchar \\u0000\uff0c boolean false\uff0cString null","title":"\u5c5e\u6027\uff0c\u6210\u5458\u53d8\u91cf"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u5982\u4f55\u8bbf\u95ee\u5c5e\u6027","text":"\u57fa\u672c\u8bed\u6cd5 \u5bf9\u8c61\u540d.\u5c5e\u6027\u540d; \u793a\u8303\uff1a package cn.meowrain.Object_ ; public class relearn_02 { Human human01 = new Human (); human01 . name = \"mike\" ; human01 . age = 20 ; System . out . println ( human . name + \"is\" + human01 . age + \"years old\" ) } class Hunman { //\u4e0b\u9762\u90fd\u5c5e\u4e8eHuman\u7c7b\u7684\u5c5e\u6027 String name ; double salary ; int age ; String country ; }","title":"\u5982\u4f55\u8bbf\u95ee\u5c5e\u6027"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u7c7b\u548c\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u673a\u5236","text":"\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u4eba\u7c7b(Person)(\u5305\u62ec \u540d\u5b57,\u5e74\u9f84) package cn.meowrain.Object_ ; public class relearn_03 { public static void main ( String [] args ) { Person p1 = new Person (); p1 . age = 10 ; p1 . name = \"\u5c0f\u660e\" ; Person p2 = p1 ; System . out . println ( p2 . age ); } } class Person { public int age ; public String name ; } \u95ee\u9898\uff1a p2.age \u7a76\u7adf\u662f\u591a\u5c11\uff0c\u753b\u51fa\u5185\u5b58\u56fe","title":"\u7c7b\u548c\u5bf9\u8c61\u7684\u5185\u5b58\u5206\u914d\u673a\u5236"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#java-\u5185\u5b58\u7684\u7ed3\u6784\u5206\u6790","text":"1) \u6808\uff1a \u4e00\u822c\u5b58\u653e\u57fa\u672c\u6570\u636e\u7c7b\u578b(\u5c40\u90e8\u53d8\u91cf) 2) \u5806\uff1a \u5b58\u653e\u5bf9\u8c61(Cat cat , \u6570\u7ec4\u7b49) 3) \u65b9\u6cd5\u533a\uff1a\u5e38\u91cf\u6c60(\u5e38\u91cf\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32)\uff0c \u7c7b\u52a0\u8f7d\u4fe1\u606f","title":"Java \u5185\u5b58\u7684\u7ed3\u6784\u5206\u6790"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#java-\u521b\u5efa\u5bf9\u8c61\u7684\u6d41\u7a0b\u7b80\u5355\u5206\u6790","text":"","title":"Java \u521b\u5efa\u5bf9\u8c61\u7684\u6d41\u7a0b\u7b80\u5355\u5206\u6790"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u65b9\u6cd5\u91cd\u8f7d","text":"java\u4e2d\u5141\u8bb8\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u591a\u4e2a\u540c\u540d\u65b9\u6cd5\u7684\u5b58\u5728\uff0c\u4f46\u662f\u8981\u6c42\u5f62\u53c2\u5217\u8868\u4e0d\u4e00\u81f4 \u901a\u8fc7\u91cd\u8f7d\uff0c\u6211\u4eec\u51cf\u8f7b\u4e86\u8d77\u540d\u7684\u9ebb\u70e6 \u6848\u4f8b\uff1a package cn.meowrain.Object_ ; public class relearn_06 { public static void main ( String [] args ) { rel rel = new rel (); int m = rel . getSum ( 1 , 2 , 3 ); System . out . println ( m ); int n = rel . getSum ( 1 , 2 ); } } class rel { public int getSum ( int n1 , int n2 ){ return n1 + n2 ; } public int getSum ( int n1 , int n2 , int n3 ){ return n1 + n2 + n3 ; } }","title":"\u65b9\u6cd5\u91cd\u8f7d"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u53ef\u53d8\u53c2\u6570","text":"java\u5141\u8bb8\u628a\u540c\u4e00\u4e2a\u7c7b\u4e2d\u591a\u4e2a\u540c\u540d\u540c\u529f\u80fd\u4f46\u662f\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a\u65b9\u6cd5 \u57fa\u672c\u8bed\u6cd5\uff1a //int... \u8868\u793a\u63a5\u53d7\u7684\u662f\u53ef\u53d8\u53c2\u6570\uff0c\u7c7b\u578b\u662fint\uff0c\u5373\u53ef\u4ee5\u63a5\u6536\u591a\u4e2aint //\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u65f6\u5019\uff0c\u53ef\u4ee5\u5f53\u6570\u7ec4\u6765\u4f7f\u7528\uff0cnums\u53ef\u4ee5\u5f53\u505a\u6570\u7ec4 package cn.meowrain.Object_ ; public class relearn_07 { public static void main ( String [] args ) { rel_07 rel = new rel_07 (); int m = rel . getSum ( 1 , 2 , 3 , 4 ); //10 int n = rel . getSum ( 5 , 6 , 7 ); //18 int b = rel . getSum ( 0 , 1 ); //1 System . out . println ( m ); System . out . println ( n ); System . out . println ( b ); } } class rel_07 { //int... \u8868\u793a\u63a5\u53d7\u7684\u662f\u53ef\u53d8\u53c2\u6570\uff0c\u7c7b\u578b\u662fint\uff0c\u5373\u53ef\u4ee5\u63a5\u6536\u591a\u4e2aint //\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u65f6\u5019\uff0c\u53ef\u4ee5\u5f53\u6570\u7ec4\u6765\u4f7f\u7528\uff0cnums\u53ef\u4ee5\u5f53\u505a\u6570\u7ec4 public int getSum ( int ... nums ){ int res = 0 ; for ( int i = 0 ; i < nums . length ; i ++ ){ res += nums [ i ] ; } return res ; } }","title":"\u53ef\u53d8\u53c2\u6570"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u7528\u57df","text":"package cn.meowrain.Object_ ; public class relearn_08 { public static void main ( String [] args ) { } } class Dog { //\u5168\u5c40\u53d8\u91cf\uff1a\u4e5f\u5c31\u662f\u5c5e\u6027\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u4f53Cat\u7c7b\uff0ccry eat\u7b49\u65b9\u6cd5\u4f7f\u7528\u5c5e\u6027 //\u5c5e\u6027\u5728\u5b9a\u4e49\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c int age = 10 ; double weight ; //\u9ed8\u8ba4\u662f0.0 public void hi () { //\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c\u540e\u624d\u80fd\u4f7f\u7528\uff0c\u56e0\u4e3a\u6ca1\u6709\u9ed8\u8ba4\u503c //\u5c40\u90e8\u53d8\u91cf\u4e00\u822c\u662f\u6307\u5728\u6210\u5458\u65b9\u6cd5\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf int num = 1 ; String address = \"Beijing's Dog\" ; System . out . println ( \"num=\" + num ); System . out . println ( \"address\" + address ); System . out . println ( \"weight=\" + weight ); } public void cry () { int n = 10 ; String name = \"jack\" ; System . out . println ( name + \"cry for\" + n + \"times\" ); } public void eat () { String name = \"meow\" ; System . out . println ( name + \"eat\" ); } }","title":"\u4f5c\u7528\u57df"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u6ce8\u610f\u4e8b\u9879\u548c\u4f7f\u7528\u7ec6\u8282","text":"\u5c5e\u6027\u53ef\u4ee5\u52a0\u4fee\u9970\u7b26\uff0c\u4f46\u662f\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u52a0\u4fee\u9970\u7b26","title":"\u6ce8\u610f\u4e8b\u9879\u548c\u4f7f\u7528\u7ec6\u8282"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u6784\u9020\u5668","text":"\u6784\u9020\u65b9\u6cd5\u53c8\u53eb\u6784\u9020\u5668(constructor)\uff0c\u662f\u7c7b\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c \u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b8c\u6210\u5bf9\u65b0\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u3002\u5b83\u6709\u51e0\u4e2a\u7279\u70b9\uff1a 1) \u65b9\u6cd5\u540d\u548c\u7c7b\u540d\u76f8\u540c 1) \u6ca1\u6709\u8fd4\u56de\u503c 1) \u5728\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u7684\u8c03\u7528\u8be5\u7c7b\u7684\u6784\u9020\u5668\u5b8c\u6210\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u3002 \u57fa\u672c\u8bed\u6cd5\uff1a [ \u4fee\u9970\u7b26 ] \u65b9\u6cd5\u540d ( \u5f62\u53c2\u5217\u8868 ) { \u65b9\u6cd5\u4f53 } \u6848\u4f8b\uff1a package cn.meowrain.Object_ ; public class relearn_09 { public static void main ( String [] args ) { rel_09 rel = new rel_09 ( \"meowrain\" , 18 ); rel_09 rel_1 = new rel_09 ( \"meow\" , 20 , \"mouse\" ); rel . getInfo (); rel_1 . getItem (); } } class rel_09 { String name ; int age ; String item ; public rel_09 ( String name , int age ) { this . name = name ; this . age = age ; } // \u6784\u9020\u5668\u91cd\u8f7d public rel_09 ( String name , int age , String item ) { this . name = name ; this . age = age ; this . item = item ; } public void getInfo () { System . out . println ( this . name + \" \" + this . age ); } public void getItem () { System . out . println ( this . item ); } }","title":"\u6784\u9020\u5668"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u7ec3\u4e60\u9898","text":"package cn.meowrain.Object_ ; public class relearn_10 { public static void main ( String [] args ) { Person_n person01 = new Person_n ( \"meow\" , 12 ); Person_n person02 = new Person_n (); System . out . println ( person01 . name + \" is \" + person01 . age + \"years old\" ); System . out . println ( person02 . name + \" is \" + person02 . age + \"years old\" ); } } class Person_n { String name ; int age ; public Person_n () { this . age = 18 ; } public Person_n ( String name , int age ) { this . name = name ; this . age = age ; } }","title":"\u7ec3\u4e60\u9898\uff1a"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u5bf9\u8c61\u521b\u5efa\u7684\u6d41\u7a0b\u5206\u6790","text":"","title":"\u5bf9\u8c61\u521b\u5efa\u7684\u6d41\u7a0b\u5206\u6790"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#this\u5173\u952e\u5b57","text":"\u4ec0\u4e48\u662fthis? \u7b80\u5355\u8bf4\uff1a\u54ea\u4e2a\u5bf9\u8c61\u8c03\u7528\uff0cthis\u5c31\u4ee3\u8868\u54ea\u4e2a\u5bf9\u8c61 package cn.meowrain.Object_ ; public class relearn12 { } class This01 { public static void main ( String [] args ) { Dog_new dog_new = new Dog_new ( \"\u5927\u9ec4\" , 1 ); dog_new . info (); } } class Dog_new { String name ; int age ; public Dog_new ( String name , int age ) { this . name = name ; this . age = age ; } public void info (){ System . out . println ( \"this.hashCode=\" + this . hashCode ()); System . out . println ( name + \"\\t\" + age + \"\\t\" ); } }","title":"this\u5173\u952e\u5b57"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u7ec3\u4e60\u9898_1","text":"package cn.meowrain.Object_ ; public class relearn13 { public static void main ( String [] args ) { person_01 p1 = new person_01 ( \"mary\" , 18 ); person_01 p2 = new person_01 ( \"mary\" , 18 ); System . out . println ( p1 . compareTo ( p2 )); //true } } class person_01 { String name ; int age ; public person_01 ( String name , int age ) { this . name = name ; this . age = age ; } public boolean compareTo ( person_01 p ){ if ( this . name . equals ( p . name ) && this . age == p . age ) { return true ; } return false ; } }","title":"\u7ec3\u4e60\u9898\uff1a"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a","text":"","title":"\u4f5c\u4e1a"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a1","text":"package cn.meowrain.Object_.homework ; public class h1 { public static void main ( String [] args ) { double [] arr = { 1.0 , - 2.0 , 4.5 }; A01 a01 = new A01 (); double max = a01 . max ( arr ); System . out . println ( max ); } } class A01 { public double max ( double [] a ) { double m = a [ 0 ] ; for ( int i = 0 ; i < a . length ; i ++ ) { if ( a [ i ] > m ) m = a [ i ] ; } return m ; } }","title":"\u4f5c\u4e1a1"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a2","text":"package cn.meowrain.Object_.homework ; public class h2 { public static void main ( String [] args ) { String [] strArr = { \"helloworld\" , \"meowrain\" }; A02 a02 = new A02 (); int a = a02 . find ( strArr ); if ( a == 0 ){ System . out . println ( true ); } else { System . out . println ( false ); } } } class A02 { public int find ( String [] arr ){ for ( int i = 0 ; i < arr . length ; i ++ ){ if ( arr [ i ] . equals ( \"helloworld\" )){ return i ; } } return - 1 ; } }","title":"\u4f5c\u4e1a2"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a3","text":"package cn.meowrain.Object_.homework ; public class h3 { public static void main ( String [] args ) { Book book = new Book ( \"\u732b\u7684\u6545\u4e8b\" , 200 ); Book book2 = new Book ( \"\u72d7\u7684\u6545\u4e8b\" , 120 ); Book book3 = new Book ( \"\u9a74\u7684\u6545\u4e8b\" , 20 ); book . updatePrice ( book . price ); book2 . updatePrice ( book2 . price ); book3 . updatePrice ( book3 . price ); System . out . println ( book . name + \" : \" + book . price ); System . out . println ( book2 . name + \" : \" + book2 . price ); System . out . println ( book3 . name + \" : \" + book3 . price ); /* * \u732b\u7684\u6545\u4e8b : 150.0 \u72d7\u7684\u6545\u4e8b : 100.0 \u9a74\u7684\u6545\u4e8b : 20.0 * */ } } class Book { String name ; double price ; public Book ( String name , double price ) { this . name = name ; this . price = price ; } public void updatePrice ( double price ){ if ( price > 150 ){ this . price = 150 ; } else if ( price > 100 ) { this . price = 100 ; } } }","title":"\u4f5c\u4e1a3"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a4","text":"package cn.meowrain.Object_.homework ; public class h4 { public static void main ( String [] args ) { A03 a03 = new A03 (); int [] arr = { 1 , 2 , 3 , 4 , 5 }; int [] a1 = a03 . copyArr ( arr ); for ( int i = 0 ; i < a1 . length ; i ++ ){ System . out . println ( a1 [ i ] ); } } } class A03 { public int [] copyArr ( int [] arr ) { int [] a = new int [ arr . length ] ; for ( int i = 0 ; i < arr . length ; i ++ ){ a [ i ] = arr [ i ] ; } return a ; } }","title":"\u4f5c\u4e1a4"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a5","text":"package cn.meowrain.Object_.homework ; public class h5 { public static void main ( String [] args ) { Circle circle = new Circle ( 2 ); double perimeter = circle . perimeter (); double area = circle . area (); System . out . printf ( \"%.2f\\n\" , perimeter ); System . out . printf ( \"%.2f\\n\" , area ); /* * 12.57 12.57 */ } } class Circle { double r ; public Circle ( double r ) { this . r = r ; } public double perimeter () { return Math . PI * r * 2 ; } public double area () { return Math . PI * r * r ; } }","title":"\u4f5c\u4e1a5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a6","text":"package cn.meowrain.Object_.homework ; public class h6 { public static void main ( String [] args ) { Cale cale01 = new Cale ( 5 , 2 ); Cale cale02 = new Cale ( 1 , 0 ); cale01 . divide (); cale02 . divide (); } } class Cale { int a , b ; public Cale ( int a , int b ) { this . a = a ; this . b = b ; } public int sum () { return a + b ; } public int multiply () { return a * b ; } public void divide () { if ( b == 0 ) { System . out . println ( \"\u8f93\u5165\u7684\u9664\u6570\u4e0d\u80fd\u4e3a0\uff01\" ); } else { System . out . println ( a * 1.0 / b ); } } }","title":"\u4f5c\u4e1a6"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a7","text":"package cn.meowrain.Object_.homework ; public class h7 { public static void main ( String [] args ) { Dog dog = new Dog ( \"mike\" , \"white\" , 2 ); dog . show (); } } class Dog { String name ; String color ; int age ; public Dog ( String name , String color , int age ){ this . name = name ; this . color = color ; this . age = age ; } public void show (){ System . out . println ( \"the dog \" + name + \" is \" + age + \" \" + \"years old and its color is \" + color ); } }","title":"\u4f5c\u4e1a7"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a8","text":"","title":"\u4f5c\u4e1a8"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a9","text":"package cn.meowrain.Object_.homework ; public class h9 { public static void main ( String [] args ) { Music music01 = new Music ( \"\u9752\u82b1\u74f7\" , \"4:00\" ); Music music02 = new Music ( \"\u9e21\u4f60\u592a\u7f8e\" , \"3:00\" ); music01 . getInfo (); music01 . play (); } } class Music { String name ; String times ; public Music ( String name , String times ){ this . name = name ; this . times = times ; } public void play (){ System . out . println ( name + \"is palying for \" + times ); } public void getInfo (){ System . out . println ( \"the music name is \" + name + \"times is : \" + times ); } }","title":"\u4f5c\u4e1a9"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a10","text":"package cn.meowrain.Object_.homework ; public class h8 { int i = 100 ; public void m (){ int j = i ++ ; System . out . println ( \"i=\" + i ); System . out . println ( \"j=\" + j ); } } class Test { public static void main ( String [] args ) { h8 demo = new h8 (); h8 demo2 = new h8 (); demo . m (); System . out . println ( demo . i ); System . out . println ( demo2 . i ); } } i = 101 j = 100 101 100","title":"\u4f5c\u4e1a10"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a11","text":"\u4e0d\u505a\u4e86","title":"\u4f5c\u4e1a11"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a12","text":"package cn.meowrain.Object_.homework ; public class h12 { Employee_ emp1 = new Employee_ ( \"\u7ecf\u7406\" , \"10000\" ); } class Employee_ { String name ; String sex ; int age ; String position ; String salary ; public Employee_ ( String name , String sex , int age , String position , String salary ) { this . name = name ; this . sex = sex ; this . age = age ; this . position = position ; this . salary = salary ; } public Employee_ ( String name , String sex , int age ) { this . name = name ; this . sex = sex ; this . age = age ; } public Employee_ ( String position , String salary ) { this . position = position ; this . salary = salary ; } }","title":"\u4f5c\u4e1a12"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%28%E5%88%9D%E7%BA%A7%29-java-mian-xiang-dui-xiang-ji-chu--chu-ji-/#\u4f5c\u4e1a13","text":"package cn.meowrain.Object_.homework ; public class h13 { public static void main ( String [] args ) { Circle01 circle = new Circle01 (); PassObject pass = new PassObject (); pass . printAreas ( circle , 5 ); } } class Circle01 { public double radius ; public double findArea (){ return radius * radius * Math . PI ; } } class PassObject { public void printAreas ( Circle01 c , int times ) { for ( int i = times ; i > 0 ; i -- ){ c . radius = i ; System . out . println ( \"r:\" + i + \" \" + \"S=\" + c . findArea ()); } } }","title":"\u4f5c\u4e1a13"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/","text":"Java\u9762\u5411\u5bf9\u8c61\u57fa\u7840\uff08\u4e2d\u7ea7\uff09 # Consolas, 'Courier New', monospace \u5305 # \u5305\u7684\u4e09\u5927\u4f5c\u7528 # 1.\u533a\u5206\u76f8\u540c\u540d\u5b57\u7684\u7c7b 2.\u5f53\u7c7b\u5f88\u591a\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u7ba1\u7406\u7c7b 3.\u63a7\u5236\u8bbf\u95ee\u8303\u56f4 \u5305\u7684\u57fa\u672c\u8bed\u6cd5 # 1. package \u5173\u952e\u5b57 2. com . xxxx \u8868\u793a\u5305\u540d \u5305\u7684\u672c\u8d28\u5206\u6790 # \u5305\u7684\u672c\u8d28\u5c31\u662f\u521b\u5efa\u4e0d\u540c\u7684\u6587\u4ef6\u5939\u548c\u76ee\u5f55\u6765\u4fdd\u5b58\u7c7b\u6587\u4ef6 \u5305\u7684\u547d\u540d # \u53ea\u80fd\u5305\u542b\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\uff0c\u5c0f\u5706\u70b9\uff0c\u4f46\u4e0d\u80fd\u7528\u6570\u5b57\u5f00\u5934\uff0c\u4e5f\u4e0d\u80fd\u662f\u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u547d\u540d\u89c4\u8303\uff1a com.xxxx.usr \u7528\u6237\u6a21\u5757 com.xxxx.utils \u5de5\u5177\u6a21\u5757 \u57df\u540d\u53cd\u7740\u5199\uff0c\u6700\u540e\u52a0\u4e0a\u6a21\u5757\u540d \u5e38\u7528\u7684\u5305 # \u5f15\u5165\u5305 # \u8bed\u6cd5\uff1a import \u5305\u540d.\u7c7b\u540d \u6848\u4f8b\uff1a package cn.meowrain.Object_.package_ ; import java.util.Scanner ; public class package_01 { public static void main ( String [] args ) { Scanner sc = new Scanner ( System . in ); int a = sc . nextInt (); System . out . println ( a ); } } \u8bbf\u95ee\u4fee\u9970\u7b26 # \u5c01\u88c5 # \u5c01\u88c5\u4ecb\u7ecd # \u5c01\u88c5\u5c31\u662f\u628a\u62bd\u8c61\u51fa\u7684\u6570\u636e[\u5c5e\u6027]\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c**[\u65b9\u6cd5] \u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u6570\u636e\u88ab\u4fdd\u62a4\u5728\u5185\u90e8\uff0c\u7a0b\u5e8f\u7684\u5176\u5b83\u90e8\u5206\u53ea\u6709\u901a\u8fc7\u88ab\u6388\u6743\u7684\u64cd\u4f5c [\u65b9\u6cd5]**\uff0c\u624d\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c \u5c01\u88c5\u7684\u7406\u89e3\u548c\u597d\u5904 # \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282 \u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4fdd\u8bc1\u5b89\u5168\u5408\u7406 \u5c01\u88c5\u5b9e\u73b0\u7684\u6b65\u9aa4 # \u5c06\u5c5e\u6027\u8fdb\u884c\u79c1\u6709\u5316\uff08\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u5c5e\u6027\uff09 \u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u7684(public)set\u65b9\u6cd5\uff0c\u7528\u4e8e\u5bf9\u5c5e\u6027\u5224\u65ad\u5e76\u8d4b\u503c java public void setXXX(\u7c7b\u578b \u53c2\u6570\u540d) { // XXX\u8868\u793a\u67d0\u4e2a\u5c5e\u6027 //\u52a0\u5165\u6570\u636e\u9a8c\u8bc1\u7684\u4e1a\u52a1\u903b\u8f91 \u5c5e\u6027 = \u53c2\u6570\u540d; } \u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u7684(public)get\u65b9\u6cd5\uff0c\u7528\u4e8e\u83b7\u53d6\u5c5e\u6027\u7684\u503c java public \u6570\u636e\u7c7b\u578b getXXX(){ //\u6743\u9650\u5224\u65ad\uff0cxxx\u67d0\u4e2a\u5c5e\u6027 return xxx; } \u5feb\u901f\u5165\u95e8\u6848\u4f8b # package cn.meowrain.Encap_ ; public class encap_01 { public static void main ( String [] args ) { Person person = new Person (); person . setName ( \"meowrainyyds\" ); person . setAge ( - 1 ); } } class Person { public String name ; private int age ; private double salary ; private String job ; public void setName ( String name ) { if ( name . length () >= 6 || name . length () <= 2 ){ System . out . println ( \"\u540d\u5b57\u7684\u957f\u5ea6\u9519\u8bef\uff0c\u957f\u5ea6\u9700\u8981\u57282-6\u4e4b\u95f4\" ); } else { this . name = name ; } } public void setAge ( int age ) { if ( age <= 1 || age >= 120 ){ System . out . println ( \"\u8f93\u5165\u5e74\u9f84\u9519\u8bef(1-120)\" ); } else { this . age = age ; } } public void setSalary ( double salary ) { this . salary = salary ; } public void setJob ( String job ) { this . job = job ; } public String getName () { return name ; } public int getAge () { return age ; } public double getSalary () { return salary ; } public String getJob () { return job ; } public void getInfo () { System . out . println ( name + \" \" + \"is\" + age + \"years old\" ); } } \u628a\u6784\u9020\u5668\u548c\u5c01\u88c5\u7ed3\u5408 # \u5728\u6784\u9020\u5668\u4e2d\u6dfb\u52a0 setName ( name ); setAge ( age ); \u5373\u53ef\u5b9e\u73b0\u6784\u9020\u7684\u65f6\u5019\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u4ece\u800c\u5224\u65ad\u8f93\u5165\u7684\u6570\u636e\u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u8fdb\u884c\u8d4b\u503c package cn.meowrain.Encap_ ; public class encap_01 { public static void main ( String [] args ) { Person person = new Person ( \"meowrainyyds\" , - 1 ); person . getInfo (); } } class Person { public String name ; private int age ; private double salary ; private String job ; public Person ( String name , int age ) { setName ( name ); setAge ( age ); } public void setName ( String name ) { if ( name . length () >= 6 || name . length () <= 2 ) { System . out . println ( \"\u540d\u5b57\u7684\u957f\u5ea6\u9519\u8bef\uff0c\u957f\u5ea6\u9700\u8981\u57282-6\u4e4b\u95f4\" ); } else { this . name = name ; } } public void setAge ( int age ) { if ( age <= 1 || age >= 120 ) { System . out . println ( \"\u8f93\u5165\u5e74\u9f84\u9519\u8bef(1-120)\" ); } else { this . age = age ; } } public void setSalary ( double salary ) { this . salary = salary ; } public void setJob ( String job ) { this . job = job ; } public String getName () { return name ; } public int getAge () { return age ; } public double getSalary () { return salary ; } public String getJob () { return job ; } public void getInfo () { System . out . println ( name + \" \" + \"is\" + age + \"years old\" ); } } \u8bfe\u5802\u7ec3\u4e60 # package cn.meowrain.Encap_ ; public class encap_02 { } class Account { String name ; int balance ; public Account ( String name , int balance ) { setName ( name ); setBalance ( balance ); } public void setName ( String name ) { if ( name . length () >= 2 && name . length () <= 4 ) { this . name = name ; } else { System . out . println ( \"\u540d\u5b57\u957f\u5ea6\u57282-4\u4f4d\u4e4b\u95f4\uff0c\u4f60\u8f93\u5165\u7684\u540d\u5b57\u4e0d\u5408\u6cd5\" ); } } public void setBalance ( int balance ) { if ( balance > 20 ){ this . balance = balance ; } else { System . out . println ( \"\u4f59\u989d\u5fc5\u987b\u5927\u4e8e20\" ); } } public void getInfo (){ System . out . println ( name + \" \" + balance ); } } class AccountTest { public static void main ( String [] args ) { Account account = new Account ( \"meowrain\" , 24 ); account . getInfo (); } } \u7ee7\u627f # \u4e3a\u4ec0\u4e48\u9700\u8981\u7ee7\u627f # \u7ee7\u627f\u7684\u57fa\u672c\u4ecb\u7ecd\u548c\u793a\u610f\u56fe # \u7ee7\u627f\u7684\u57fa\u672c\u8bed\u6cd5 # class \u5b50\u7c7b extends \u7236\u7c7b { } 1.\u5b50\u7c7b\u5c31\u4f1a\u81ea\u52a8\u62e5\u6709\u7236\u7c7b\u5b9a\u4e49\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 2.\u7236\u7c7b\u53c8\u53eb\u8d85\u7c7b\u548c\u57fa\u7c7b 3.\u5b50\u7c7b\u53c8\u53eb\u505a\u6d3e\u751f\u7c7b \u5feb\u901f\u5165\u95e8\u6848\u4f8b # package cn.meowrain.extends_ ; public class extends_01 { public static void main ( String [] args ) { Student student = new Student ( \"mike\" , 17 , 100 ); student . eat (); //mike is eating } } class Human { String name ; int age ; public Human ( String name , int age ) { this . name = name ; this . age = age ; } //\u4e0b\u9762\u8fd9\u4e2aeat\u65b9\u6cd5\u662f\u5171\u6709\u7684\u65b9\u6cd5 public void eat (){ System . out . println ( name + \" is \" + \"eating\" ); } } class Student extends Human { //Student\u7ee7\u627f\u4e86\u7236\u7c7bHuman\u7684\u6240\u6709\u5c5e\u6027 double grades ; public Student ( String name , int age , double grades ) { super ( name , age ); //\u6784\u9020\u5668\u8981\u4f7f\u7528super this . grades = grades ; } } \u7ee7\u627f\u7ed9\u7f16\u7a0b\u5e26\u6765\u7684\u4fbf\u5229 # \u590d\u7528\u6027\u589e\u5f3a \u4ee3\u7801\u7684\u6269\u5c55\u6027\u548c\u7ef4\u62a4\u6027\u63d0\u9ad8 \u7ec6\u8282\u95ee\u9898 # \u5b50\u7c7b\u7ee7\u627f\u4e86\u6240\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u975e\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u53ef\u4ee5\u5728\u5b50\u7c7b\u76f4\u63a5\u8bbf\u95ee\uff0c\u8981\u901a\u8fc7\u7236\u7c7b\u63d0\u4f9b\u516c\u5171\u7684\u65b9\u6cd5\u53bb\u8bbf\u95ee \u5b50\u7c7b\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u5668\uff0c\u5b8c\u6210\u7236\u7c7b\u7684\u521d\u59cb\u5316 \u5f53\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4e0d\u7ba1\u4f7f\u7528\u5b50\u7c7b\u7684\u54ea\u4e2a\u6784\u9020\u5668\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u603b\u4f1a\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u5982\u679c\u7236\u7c7b\u6ca1\u6709\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u5668\uff0c\u5219\u5fc5\u987b\u5728\u5b50\u7c7b\u7684\u6784\u9020\u5668\u4e2d\u7528 super \u53bb\u6307\u5b9a\u4f7f\u7528\u7236\u7c7b\u7684\u54ea\u4e2a\u6784\u9020\u5668\u5b8c\u6210\u5bf9\u7236\u7c7b\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u4f1a\u901a\u8fc7 \u5982\u679c\u5e0c\u671b\u6307\u5b9a\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u67d0\u4e2a\u6784\u9020\u5668\uff0c\u5219\u663e\u5f0f\u5730\u8c03\u7528\u4e00\u4e0b\uff1a super(\u53c2\u6570\u5217\u8868) super \u5728\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u653e\u5728\u6784\u9020\u5668\u7b2c\u4e00\u884c\uff08**super**\u53ea\u80fd\u5728\u6784\u9020\u5668\u4e2d\u4f7f\u7528\uff09 super() \u548c this() \u90fd\u53ea\u80fd\u653e\u5728\u6784\u9020\u5668\u7684\u7b2c\u4e00\u884c\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u5171\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u5668 super\uff08\u53c2\u6570\uff09\uff1a\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u67d0\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff08\u5e94\u8be5\u4e3a\u6784\u9020\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\uff09\u3002 this\uff08\u53c2\u6570\uff09\uff1a\u8c03\u7528\u672c\u7c7b\u4e2d\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff08\u5e94\u8be5\u4e3a\u6784\u9020\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\uff09\u3002 java\u6240\u6709\u7c7b\u90fd\u662f **Object\u7c7b**\u7684\u5b50\u7c7b\uff0c**Object\u7c7b**\u662f\u6240\u6709\u7c7b\u7684\u57fa\u7c7b \u7236\u7c7b\u6784\u9020\u5668\u7684\u8c03\u7528\u4e0d\u9650\u4e8e\u76f4\u63a5\u7236\u7c7b\uff0c\u5c06\u4e00\u76f4\u5f80\u4e0a\u8ffd\u6eaf\u76f4\u5230 **Object**\u7c7b \u5b50\u7c7b\u6700\u591a\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b \u4e0d\u80fd\u6ee5\u7528\u7ee7\u627f\uff0c\u5b50\u7c7b\u548c\u7236\u7c7b\u4e4b\u95f4\u5fc5\u987b\u6ee1\u8db3 is-a \u7684\u903b\u8f91\u5173\u7cfb package cn.meowrain.extends_ ; public class extends_02 { } class Base { int n1 ; int n2 ; String name ; public Base () { } // \u65e0\u53c2\u6784\u9020\u5668 public Base ( int n1 ) { this . n1 = n1 ; } public Base ( int n1 , int n2 ) { this . n1 = n1 ; this . n2 = n2 ; } public Base ( int n1 , int n2 , String name ) { this ( n1 , n2 ); /* * \u8fd9\u4e2athis(n1,n2); * \u76f8\u5f53\u4e8e\u8c03\u7528\u4e0a\u9762\u7684 this.n1 = n1; this.n2 = n2; */ this . name = name ; } } class kids extends Base { int age ; public kids ( int n1 , int n2 , int age ){ super ( n1 , n2 ); /* super(n1,n2); * \u76f8\u5f53\u4e8e * this.n1 = n1; this.n2 = n2; */ this . age = age ; } } class adult extends Base { public adult ( int n1 , int n2 , String name ){ super ( n1 , n2 , name ); } } class little_kids extends kids { String love ; public little_kids ( int n1 , int n2 , int age , String love ){ super ( n1 , n2 , age ); this . love = love ; } } \u7ee7\u627f\u7684\u672c\u8d28\u5206\u6790 # \u770b\u4e0b\u9762\u8fd9\u4e9b\u4ee3\u7801 package com.hspedu.extend_ ; /** * \u8bb2\u89e3\u7ee7\u627f\u7684\u672c\u8d28 */ public class ExtendsTheory { public static void main ( String [] args ) { Son son = new Son (); // \u5185\u5b58\u7684\u5e03\u5c40 // ?-> \u8fd9\u65f6\u8bf7\u5927\u5bb6\u6ce8\u610f\uff0c\u8981\u6309\u7167\u67e5\u627e\u5173\u7cfb\u6765\u8fd4\u56de\u4fe1\u606f // (1) \u9996\u5148\u770b\u5b50\u7c7b\u662f\u5426\u6709\u8be5\u5c5e\u6027 // (2) \u5982\u679c\u5b50\u7c7b\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5219\u8fd4\u56de\u4fe1\u606f // (3) \u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5c31\u770b\u7236\u7c7b\u6709\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027(\u5982\u679c\u7236\u7c7b\u6709\u8be5\u5c5e\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5c31\u8fd4\u56de\u4fe1\u606f..) // (4) \u5982\u679c\u7236\u7c7b\u6ca1\u6709\u5c31\u6309\u7167(3)\u7684\u89c4\u5219\uff0c\u7ee7\u7eed\u627e\u4e0a\u7ea7\u7236\u7c7b\uff0c\u76f4\u5230 Object... // System.out.println(son.name);//\u8fd4\u56de\u5c31\u662f\u5927\u5934\u513f\u5b50 // System.out.println(son.age);//\u8fd4\u56de\u7684\u5c31\u662f 39 // System.out.println(son.getAge());//\u8fd4\u56de\u7684\u5c31\u662f 39 System . out . println ( son . hobby ); // \u8fd4\u56de\u7684\u5c31\u662f\u65c5\u6e38 } } class GrandPa { // \u7237\u7c7b String name = \"\u5927\u5934\u7237\u7237\" ; String hobby = \"\u65c5\u6e38\" ; } class Father extends GrandPa { // \u7236\u7c7b String name = \"\u5927\u5934\u7238\u7238\" ; private int age = 39 ; public int getAge () { return age ; } } class Son extends Father { // \u5b50\u7c7b String name = \"\u5927\u5934\u513f\u5b50\" ; } \u5b50\u7c7b\u521b\u5efa\u7684\u5185\u5b58\u5e03\u5c40 \u7ec3\u4e60 # \u4f1a\u8f93\u51fa a b name b \u5206\u6790\uff1aB\u7c7b\u65e0\u53c2\u6784\u9020\u5668\u4e2d\uff0c\u5176\u5b9e\u7b2c\u4e00\u53e5\u662f\u9690\u85cf\u7684 super() \uff0c\u6240\u4ee5\u4f1a\u5148\u6267\u884cA\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u8f93\u51faa\uff0c\u7136\u540e\u6267\u884c this(\"abc\") \uff0c\u8c03\u7528B\u7c7b\u672c\u7c7b\u4e0b\u7684\u6709\u53c2\u6784\u9020\u5668\uff0c\u8f93\u51fa b name \uff0c\u63a5\u7740\u6267\u884c System.out.println(\"b\") \uff0c\u8f93\u51fab \u7f16\u5199 Computer \u7c7b\uff0c\u5305\u542b CPU\u3001\u5185\u5b58\u3001\u786c\u76d8\u7b49\u5c5e\u6027\uff0cgetDetails \u65b9\u6cd5\u7528\u4e8e\u8fd4\u56de Computer \u7684\u8be6\u7ec6\u4fe1\u606f \u7f16\u5199 PC \u5b50\u7c7b\uff0c\u7ee7\u627f Computer \u7c7b\uff0c\u6dfb\u52a0\u7279\u6709\u5c5e\u6027\u3010\u54c1\u724c brand\u3011 \u7f16\u5199 NotePad \u5b50\u7c7b\uff0c\u7ee7\u627f Computer \u7c7b\uff0c\u6dfb\u52a0\u7279\u6709\u5c5e\u6027\u3010color\u3011 \u7f16\u5199 Test \u7c7b\uff0c\u5728 main \u65b9\u6cd5\u4e2d\u521b\u5efa PC \u548c NotePad \u5bf9\u8c61\uff0c\u5206\u522b\u7ed9\u5bf9\u8c61\u4e2d\u7279\u6709\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u4ee5\u53ca\u4ece Computer \u7c7b\u7ee7\u627f\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u5e76\u4f7f\u7528\u65b9\u6cd5\u5e76\u6253\u5370\u8f93\u51fa\u4fe1\u606f package cn.meowrain.extends_ ; class Test { public static void main ( String [] args ) { PC pc = new PC ( \"i5\" , 16 , 512 , \"Lenovo\" ); Notepad notepad = new Notepad ( \"j1900\" , 8 , 64 , \"white\" ); pc . getDetails (); notepad . getDetails (); } } public class Computer { String brand ; String cpu ; int memory ; int disk_size ; public Computer ( String cpu , int memory , int disk_size ) { this . cpu = cpu ; this . memory = memory ; this . disk_size = disk_size ; } public void getDetails () { System . out . println ( \"the computer's\" + \" \" + \"cpu is \" + cpu + \" \" + \"the memory size is \" + memory + \" \" + \"the disk size is\" + \" \" + disk_size ); } } class PC extends Computer { String brand ; public PC ( String cpu , int memory , int disk_size , String brand ) { super ( cpu , memory , disk_size ); this . brand = brand ; } public void getDetails () { System . out . println ( \"the computer's brand is\" + brand + \" \" + \"cpu is \" + cpu + \" \" + \"the memory size is \" + memory + \" \" + \"the disk size is\" + \" \" + disk_size ); } } class Notepad extends Computer { String color ; public Notepad ( String cpu , int memory , int disk_size , String color ) { super ( cpu , memory , disk_size ); this . color = color ; } public void getDetails () { System . out . println ( \"the computer's color is\" + color + \" \" + \"cpu is \" + cpu + \" \" + \"the memory size is \" + memory + \" \" + \"the disk size is\" + \" \" + disk_size ); } } super\u5173\u952e\u5b57 # \u57fa\u672c\u4ecb\u7ecd # super \u4ee3\u8868\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u7528\u4e8e**\u8bbf\u95ee\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u65b9\u6cd5\u548c\u6784\u9020\u5668** \u57fa\u672c\u8bed\u6cd5 # \u8bbf\u95ee\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684 **private**\u5c5e\u6027 \u4f7f\u7528\uff1a super.\u5c5e\u6027\u540d \u8bbf\u95ee\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684private\u65b9\u6cd5 \u4f7f\u7528\uff1a super.\u65b9\u6cd5\u540d(\u53c2\u6570\u5217\u8868) \u8bbf\u95ee\u7236\u7c7b\u7684\u6784\u9020\u5668 \u4f7f\u7528\uff1a super(\u53c2\u6570\u5217\u8868) \u53ea\u80fd\u653e\u5728\u6784\u9020\u5668\u7684\u7b2c\u4e00\u53e5\uff0c\u53ea\u80fd\u51fa\u73b0\u4e00\u53e5 \u6848\u4f8b\uff1a package cn.meowrain.extends_ ; public class super_ { public static void main ( String [] args ) { Child_01 child = new Child_01 (); child . getRes (); } } class Base_01 { public String name = \"mike\" ; private int age = 8 ; public int getSum ( int a , int b ) { return a + b ; } } class Child_01 extends Base_01 { public String name = super . name ; //\u628a\u7236\u7c7b\u7684name\u5c5e\u6027\u7684\u503c\u8d4b\u503c\u7ed9\u81ea\u96f7\u7684name\u5c5e\u6027 // public int age = super.age; \u62a5\u9519 public void getRes (){ System . out . println ( super . getSum ( 19 , 20 )); //\u8c03\u7528\u5e76\u4e14\u8f93\u51fa\u7236\u7c7b\u4e2dgetSum\u65b9\u6cd5\u7684\u8fd4\u56de\u503c } } super\u7ed9\u7f16\u7a0b\u5e26\u6765\u7684\u4fbf\u5229 # super\u548cthis\u7684\u6bd4\u8f83 # \u65b9\u6cd5\u91cd\u5199\uff08Override\uff09 # \u57fa\u672c\u4ecb\u7ecd # \u65b9\u6cd5\u91cd\u5199\u5c31\u662f\u5b50\u7c7b\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u548c\u7236\u7c7b\u7684\u67d0\u4e2a\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u8fd4\u56de\u7c7b\u578b\uff0c\u53c2\u6570\u4e00\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\u5b50\u7c7b\u7684\u8fd9\u4e2a\u65b9\u6cd5\u8986\u76d6\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5 \u5feb\u901f\u5165\u95e8 # package cn.meowrain.extends_ ; public class override_ { public static void main ( String [] args ) { Child_02 child_02 = new Child_02 (); child_02 . getInfo (); } } class Base_02 { public void getInfo () { System . out . println ( \"hello my friends\" ); } } class Child_02 extends Base_02 { @Override public void getInfo () { System . out . println ( \"hello my good friends\" ); } } \u6ce8\u610f\u9879 # \u5b50\u7c7b\u65b9\u6cd5\u4e0d\u80fd\u7f29\u5c0f\u7236\u7c7b\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650 \u5b50\u7c7b\u65b9\u6cd5\u7684\u5f62\u53c2\u5217\u8868\uff0c\u65b9\u6cd5\u540d\u79f0\uff0c\u8981\u548c\u7236\u7c7b\u65b9\u6cd5\u7684\u5f62\u53c2\u5217\u8868\uff0c\u65b9\u6cd5\u540d\u79f0\u5b8c\u5168\u4e00\u6837 \u5b50\u7c7b\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u7236\u7c7b\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u8981\u4e00\u6837\uff0c\u6216\u8005\u662f\u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\uff0c\u6bd4\u5982\uff1a \u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u662fObject\uff0c\u5b50\u7c7b\u65b9\u6cd5\u8fd4\u56de\u7684\u7c7b\u578b\u662fString \u65b9\u6cd5\u91cd\u5199\u548c\u91cd\u8f7d\u7684\u533a\u522b # \u91cd\u8f7d\u662f https://meowrain.cn/archives/java-mian-xiang-dui-xiang-ji-chu--chu-ji- \u4e2d\u7684\u5185\u5bb9\uff0c\u56de\u987e\u6e05\u770b\u4e0a\u9762\u94fe\u63a5\u7684\u5185\u5bb9 \u591a\u6001 # \u57fa\u672c\u4ecb\u7ecd # \u65b9\u6cd5\u6216\u5bf9\u8c61\u5177\u6709\u591a\u79cd\u5f62\u6001\uff0c\u662f\u9762\u5411\u5bf9\u8c61\u7684\u7b2c\u4e09\u5927\u7279\u5f81\uff0c\u591a\u6001\u662f\u5efa\u7acb\u5728\u5c01\u88c5\u548c\u7ee7\u627f\u57fa\u7840\u4e0a\u7684 \u591a\u6001\u5b58\u5728\u7684\u4e09\u4e2a\u5fc5\u8981\u6761\u4ef6 # \u7ee7\u627f \u91cd\u5199 \u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\uff1a Parent p = new Child(); \u591a\u6001\u7684\u5177\u4f53\u4f53\u73b0 # \u65b9\u6cd5\u7684\u591a\u6001 # \u4e0a\u56fe\u4ee3\u7801\u5b9e\u73b0\uff1a Shap.java package cn.meowrain.Poly ; public class Shape { public void draw (){ System . out . println ( \"\u753b\u56fe\u5f62\" ); } } Circle.java package cn.meowrain.Poly ; public class Circle extends Shape { public void draw (){ System . out . println ( \"\u753b\u5706\u5f62\" ); } } Square.java package cn.meowrain.Poly ; public class Square extends Shape { public void draw (){ System . out . println ( \"\u753b\u65b9\u5f62\" ); } } Triangle.java package cn.meowrain.Poly ; public class Triangle extends Shape { public void draw (){ System . out . println ( \"\u753b\u4e09\u89d2\u5f62\" ); } } Runner.java package cn.meowrain.Poly ; public class Runner { public static void main ( String [] args ) { Shape circle = new Circle (); circle . draw (); Shape triangle = new Triangle (); triangle . draw (); Shape square = new Square (); square . draw (); } } \u6ce8\u610f\uff1a 1.\u4e00\u4e2a\u5bf9\u8c61\u7684\u7f16\u8bd1\u7c7b\u578b\u548c\u8fd0\u884c\u7c7b\u578b\u53ef\u4ee5\u4e0d\u4e00\u81f4 2.\u7f16\u8bd1\u7c7b\u578b\u5728\u5b9a\u4e49\u5bf9\u8c61\u65f6\u5c31\u786e\u5b9a\u4e86\uff0c\u4e0d\u80fd\u6539\u53d8 3.\u8fd0\u884c\u7c7b\u578b\u662f\u53ef\u4ee5\u53d8\u5316\u7684 4.\u7f16\u8bd1\u7c7b\u578b\u770b\u5b9a\u4e49\u65f6\u5019=\u53f7\u7684\u5de6\u8fb9\uff0c\u8fd0\u884c\u7c7b\u578b\u770b=\u53f7\u7684\u53f3\u8fb9 \u591a\u6001\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282\u8ba8\u8bba # \u591a\u6001\u7684\u524d\u63d0\u662f\uff1a \u4e24\u4e2a\u5bf9\u8c61\uff08\u7c7b\uff09\u5b58\u5728\u7ee7\u627f\u5173\u7cfb \u591a\u6001\u7684\u5411\u4e0a\u8f6c\u578b # \u672c\u8d28\uff1a\u7236\u7c7b\u7684\u5f15\u7528\u6307\u5411\u4e86\u5b50\u7c7b\u7684\u5bf9\u8c61 \u8bed\u6cd5\uff1a \u7236\u7c7b\u7c7b\u578b \u5f15\u7528\u540d = new \u5b50\u7c7b\u7c7b\u578b(); \u7279\u70b9\uff1a \u7f16\u8bd1\u7c7b\u578b\u770b\u5de6\u8fb9\uff0c\u8fd0\u884c\u7c7b\u578b\u770b\u53f3\u8fb9 \u53ef\u4ee5\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u6240\u6709\u6210\u5458\uff08\u9700\u9075\u5b88\u8bbf\u95ee\u6743\u9650\uff09 \u4e0d\u80fd\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u7279\u6709\u6210\u5458\u2192\u53ea\u80fd\u8c03\u7528\u5b50\u7c7b\u548c\u7236\u7c7b\u5171\u6709\u7684\u6210\u5458 \u6700\u7ec8\u8fd0\u884c\u6548\u679c\u770b\u5b50\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0 \u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b # \u8bed\u6cd5\uff1a \u5b50\u7c7b\u7c7b\u578b \u5f15\u7528\u540d = (\u5b50\u7c7b\u7c7b\u578b)\u7236\u7c7b\u5f15\u7528; \u53ea\u80fd\u5f3a\u5236\u8f6c\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u4e0d\u80fd\u5f3a\u8f6c\u7236\u7c7b\u7684\u5bf9\u8c61 \u8981\u6c42\u7236\u7c7b\u7684\u5f15\u7528\u5fc5\u987b\u6307\u5411\u7684\u662f\u5f53\u524d\u76ee\u6807\u7c7b\u578b\u7684\u5bf9\u8c61 \u5f53\u5411\u4e0b\u8f6c\u578b\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u5b50\u7c7b\u7c7b\u578b\u4e2d\u6240\u6709\u6210\u5458 \u6848\u4f8b\u6f14\u793a: Animal.java package cn.meowrain.Poly.poly02 ; public class Animal { String name = \"\u52a8\u7269\" ; int age = 10 ; public void sleeper () { System . out . println ( \"\u7761\" ); } public void run () { System . out . println ( \"\u8dd1\" ); } public void eat (){ System . out . println ( \"\u5403\" ); } public void show () { System . out . println ( \"hello \u4f60\u597d\" ); } } Cat.java package cn.meowrain.Poly.poly02 ; public class Cat extends Animal { public void eat (){ //\u65b9\u6cd5\u91cd\u5199 System . out . println ( \"\u732b\u5403\u9c7c\" ); } public void catchMouse () { //cat\u7279\u6709\u65b9\u6cd5 System . out . println ( \"\u732b\u6293\u8001\u9f20\" ); } } PolyDetail.java package cn.meowrain.Poly.poly02 ; public class PolyDetail { public static void main ( String [] args ) { //\u5411\u4e0a\u8f6c\u578b,\u7236\u7c7b\u7684\u5f15\u7528\u6307\u5411\u4e86\u5b50\u7c7b\u7684\u5bf9\u8c61 Animal animal = new Cat (); //animal.catchMouse() \u9519\u8bef,\u53ea\u80fd\u8c03\u7528\u5171\u540c\u7684\u5c5e\u6027 //\u56e0\u4e3a\u5728\u7f16\u8bd1\u9636\u6bb5,\u80fd\u8c03\u7528\u54ea\u4e9b\u6210\u5458,\u662f\u7531\u7f16\u8bd1\u7c7b\u578b\u51b3\u5b9a\u7684 //\u6700\u7ec8\u8fd0\u884c\u6548\u679c\u770b\u8fd0\u884c\u7c7b\u578b\u7684\u5177\u4f53\u5b9e\u73b0 animal . eat (); animal . run (); animal . show (); animal . sleeper (); //\u5982\u679c\u60f3\u8c03\u7528Cat\u7684catchMouse\u65b9\u6cd5 //\u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b //\u5b50\u7c7b\u7c7b\u578b \u5f15\u7528\u540d = (\u5b50\u7c7b\u7c7b\u578b)\u7236\u7c7b\u5f15\u7528 Cat cat = ( Cat ) animal ; cat . catchMouse (); } } \u6ce8\u610f: \u5c5e\u6027\u6ca1\u6709\u91cd\u5199\u53ea\u8bf4! \u5c5e\u6027\u7684\u503c\u770b\u7f16\u8bd1\u7c7b\u578b,\u4e5f\u5c31\u662f\u5de6\u4fa7 \u770b\u4e0b\u9762\u7684\u4ee3\u7801: package cn.meowrain.Poly.poly03 ; public class item { public static void main ( String [] args ) { Base base = new Sub (); //\u5c5e\u6027\u7684\u503c\u770b\u7f16\u8bd1\u7c7b\u578b System . out . println ( base . count ); //120 } } class Base { //\u7236\u7c7b int count = 120 ; } class Sub extends Base { //\u5b50\u7c7b int count = 234 ; } instanceOf\u6bd4\u8f83\u64cd\u4f5c\u7b26 # \u4ecb\u7ecd: **instanceOf**\u6bd4\u8f83\u64cd\u4f5c\u7b26,\u7528\u4e8e\u5224\u65ad\u5bf9\u8c61\u7684\u8fd0\u884c\u7c7b\u578b\u662f\u5426\u4e3aXX\u7c7b\u578b\u7684\u5b50\u7c7b\u578b \u4e3e\u4e2a\u4f8b\u5b50: package cn.meowrain.Poly.poly03 ; public class PolyDetail03 { public static void main ( String [] args ) { BB bb = new BB (); //\u8fd0\u884c\u7c7b\u578b\u662fBB System . out . println ( bb instanceof BB ); //true System . out . println ( bb instanceof AA ); //true //\u5411\u4e0a\u8f6c\u578b //AA\u662f\u7f16\u8bd1\u7c7b\u578b,BB\u662f\u8fd0\u884c\u7c7b\u578b AA aa = new BB (); //\u8fd0\u884c\u7c7b\u578b\u662fBB System . out . println ( aa instanceof AA ); //true System . out . println ( aa instanceof BB ); // true //\u5411\u4e0b\u8f6c\u578b BB ab = ( BB ) aa ; //\u8fd0\u884c\u7c7b\u578b\u662fBB System . out . println ( ab instanceof AA ); //true System . out . println ( ab instanceof BB ); //true AA am = new AA (); //\u8fd0\u884c\u7c7b\u578b\u662fAA System . out . println ( am instanceof AA ); // true System . out . println ( am instanceof BB ); //false } } class AA { } class BB extends AA { } java\u7684\u52a8\u6001\u7ed1\u5b9a # \u5f53\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u7684\u65f6\u5019\uff0c\u8be5\u65b9\u6cd5\u56de\u548c\u8be5\u90fd\u897f\u6602\u7684\u5185\u5b58\u5730\u5740/\u8fd0\u884c\u7c7b\u578b\u7ed1\u5b9a \u5f53\u8c03\u7528\u5bf9\u8c61\u5c5e\u6027\u65f6\uff0c\u6ca1\u6709\u52a8\u6001\u7ed1\u5b9a\u673a\u5236\uff0c\u54ea\u91cc\u58f0\u660e\uff0c\u54ea\u91cc\u4f7f\u7528 \u5728\u5411\u4e0a\u8f6c\u578b\u60c5\u51b5\u4e0b\u7684\u52a8\u6001\u7ed1\u5b9a\u793a\u4f8b # \u7236\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1aclass cn.meowrain.bind.Son package cn.meowrain.bind ; public class bind01 { public static void main ( String [] args ) { Father sample = new Son (); //\u5411\u4e0a\u8f6c\u578b sample . method (); } } class Father { public void method (){ System . out . println ( \"\u7236\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a\" + this . getClass ()); } } class Son extends Father { } \u58f0\u660e\u7684\u662f\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u4f46\u662f\u8c03\u7528\u4e86\u5b50\u7c7b\u5bf9\u8c61\uff0c\u8c03\u7528method\uff0c\u5b50\u7c7b\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5c31\u53bb\u7236\u7c7b\u4e2d\u53bb\u627e\uff0c\u7136\u540e\u8fdb\u884c\u8c03\u7528 \u63a5\u4e0b\u6765\u6211\u4eec\u4fee\u6539\u5b50\u7c7b\uff0c\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199 method \u65b9\u6cd5 package cn.meowrain.bind ; public class bind01 { public static void main ( String [] args ) { Father sample = new Son (); //\u5411\u4e0a\u8f6c\u578b sample . method (); } } class Father { public void method (){ System . out . println ( \"\u7236\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a\" + this . getClass ()); } } class Son extends Father { @Override public void method () { System . out . println ( \"\u5b50\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a \" + this . getClass ()); } } \u5b50\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a class cn.meowrain.bind.Son \u6389\u7528\u5b50\u7c7b\u5bf9\u8c61\uff0c\u5b50\u7c7b\u4e2d\u542b\u6709 method \u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u8fd9\u4e2amethod\u65b9\u6cd5 \u6ce8\u610f\uff1a \u4e0b\u9762\u8bf4\u5230\u7684\u4e0d\u5c5e\u4e8e\u52a8\u6001\u7ed1\u5b9a \u8fd0\u884c\u65f6\uff08\u52a8\u6001\uff09\u7ed1\u5b9a\u9488\u5bf9\u7684\u8303\u7574\u53ea\u662f\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u4e00\u770b\u5c5e\u6027\u7ed1\u5b9a package cn.meowrain.bind ; public class bind01 { public static void main ( String [] args ) { Father sample = new Son (); //\u5411\u4e0a\u8f6c\u578b System . out . println ( sample . name ); } } class Father { String name = \"\u7236\u7c7b\u5c5e\u6027\" ; } class Son extends Father { String name = \"\u5b50\u7c7b\u5c5e\u6027\" ; } \u8fd0\u884c\u7ed3\u679c\uff1a \u7236\u7c7b\u5c5e\u6027 \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8f93\u51fa\u662f\u7531\u7f16\u8bd1\u7c7b\u578b\u51b3\u5b9a\u7684 \u591a\u6001\u7684\u5e94\u7528 # \u591a\u6001\u6570\u7ec4 # \u6570\u7ec4\u7684\u5b9a\u4e49\u7c7b\u578b\u662f\u7236\u7c7b\u7c7b\u578b\uff0c\u91cc\u9762\u4fdd\u5b58\u7684\u5b9e\u9645\u5143\u7d20\u7c7b\u578b\u4e3a\u5b50\u7c7b\u7c7b\u578b \u5e94\u7528\u5b9e\u4f8b\uff1a\uff1a \u73b0\u6709\u4e00\u4e2a\u7ed3\u6784\u5982\u4e0b\uff0c\u8981\u6c42\u521b\u5efa1\u4e2aPerson\u5bf9\u8c61\uff0c2\u4e2aStudent\u5bf9\u8c61\u548c2\u4e2aTeacher\u5bf9\u8c61\uff0c\u7edf\u4e00\u653e\u5728\u6570\u7ec4\u4e2d\uff0c\u5e76\u8c03\u7528\u6bcf\u4e2a\u5bf9\u8c61\u7684say\u65b9\u6cd5 package cn.meowrain.bind ; public class bind02 { public static void main ( String [] args ) { Person [] persons = new Person [ 5 ] ; persons [ 0 ] = new Person ( \"jack\" , 20 ); persons [ 1 ] = new Student ( \"mike\" , 18 , 100 ); persons [ 2 ] = new Student ( \"meowrain\" , 19 , 150 ); persons [ 3 ] = new Teacher ( \"gac\" , 24 , 110 ); persons [ 4 ] = new Teacher ( \"jjj\" , 25 , 123 ); // persons[i]\u7f16\u8bd1\u7c7b\u578b\u662fPerson\uff0c\u8fd0\u884c\u7c7b\u578b\u662f\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u901a\u8fc7JVM\u5224\u65ad\u7684 for ( int i = 0 ; i < persons . length ; i ++ ) { System . out . println ( persons [ i ] . say ()); // \u52a8\u6001\u7ed1\u5b9a\u673a\u5236 if ( persons [ i ] instanceof Student ) { Student student = ( Student ) persons [ i ] ; //\u5411\u4e0b\u8f6c\u578b student . study (); //\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u66ff\u4ee3 // ((Student)persons[i]).study(); } else if ( persons [ i ] instanceof Teacher ) { Teacher teacher = ( Teacher ) persons [ i ] ; //\u5411\u4e0b\u8f6c\u578b teacher . teach (); //\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u66ff\u4ee3 // ((Teacher)persons[i]).teach(); } } } } class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } public String say () { return \"Perosn \" + getName () + \" is \" + getAge () + \"years old\" ; } } class Student extends Person { private int score ; public Student ( String name , int age , int score ) { super ( name , age ); this . score = score ; } public int getScore () { return score ; } public void setScore ( int score ) { this . score = score ; } @Override public String say () { return \"Student \" + getName () + \" \" + \"is\" + \" \" + \"learning\" + \" \" + \"his score is \" + getScore (); } public void study () { System . out . println ( \"student \" + getName () + \"is learning\" ); } } class Teacher extends Person { private double salary ; public Teacher ( String name , int age , double salary ) { super ( name , age ); this . salary = salary ; } public double getSalary () { return salary ; } public void setSalary ( double salary ) { this . salary = salary ; } @Override public String say () { return \"Teacher \" + getName () + \"is teaching\" + \" \" + \"his salary is \" + getSalary (); } public void teach () { System . out . println ( \"Teacher \" + getName () + \"is teaching\" ); } } \u591a\u6001\u53c2\u6570 # \u65b9\u6cd5\u5b9a\u4e49\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u7236\u7c7b\u7c7b\u578b\uff0c\u5b9e\u53c2\u7c7b\u578b\u5141\u8bb8\u4e3a\u5b50\u7c7b\u7c7b\u578b \u5b9a\u4e49\u5458\u5de5\u7c7bEmployee,\u5305\u542b\u59d3\u540d\u548c\u6708\u5de5\u8d44\uff08private)\uff0c\u4ee5\u53ca\u8ba1\u7b97\u5e74\u5de5\u8d44getAnnual\u7684\u65b9\u6cd5\uff0c\u666e\u901a\u5458\u5de5\u548c\u7ecf\u7406\u7ee7\u627f\u4e86\u5458\u5de5\uff0c\u7ecf\u7406\u7c7b\u591a\u4e86\u5956\u91d1bonus\u548c\u7ba1\u7406manage\u65b9\u6cd5\uff0c\u666e\u901a\u5458\u5de5\u591a\u4e86work\u65b9\u6cd5\uff0c\u666e\u901a\u5458\u5de5\u548c\u7ecf\u7406\u7c7b\u8981\u6c42\u5206\u522b\u91cd\u5199getAnnual\u65b9\u6cd5 \u6d4b\u8bd5\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5showEmpAnnual(Employee e),\u5b9e\u73b0\u83b7\u53d6\u4efb\u4f55\u5458\u5de5\u5bf9\u8c61\u7684\u5e74\u5de5\u8d44\uff0c\u5e76\u5728main\u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5[e.getAnnual] \u6d4b\u8bd5\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5\uff0ctestWork,\u5982\u679c\u662f\u666e\u901a\u5458\u5de5\uff0c\u5c31\u8c03\u7528\u90a3\u4e2awork\u65b9\u6cd5\u3002\u5982\u679c\u662f\u7ecf\u7406\uff0c\u5c31\u8c03\u7528manage\u65b9\u6cd5 Test.java package cn.meowrain.Poly.poly04 ; public class Test { public double showEmpAnnual ( Employee e ) { return e . getAnnual (); } public void testWork ( Employee e ){ if ( e instanceof NormalEmployee ){ (( NormalEmployee ) e ). work (); } else if ( e instanceof Manager ){ (( Manager ) e ). manage (); } } public static void main ( String [] args ) { NormalEmployee worker = new NormalEmployee ( \"mike\" , 4000 ); Manager manager = new Manager ( \"john\" , 4300 , 5000 ); Test test = new Test (); System . out . println ( \"\u7ba1\u7406\u8005\u5de5\u8d44\uff1a \" + test . showEmpAnnual ( manager )); System . out . println ( \"\u5de5\u4eba\u5de5\u8d44\uff1a \" + test . showEmpAnnual ( worker )); test . testWork ( manager ); test . testWork ( worker ); } } Employee.java package cn.meowrain.Poly.poly04 ; public class Employee { private String name ; private double salary ; public Employee ( String name , double salary ) { this . name = name ; this . salary = salary ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public double getSalary () { return salary ; } public void setSalary ( double salary ) { this . salary = salary ; } public double getAnnual () { return salary * 12 ; } } Manager.java package cn.meowrain.Poly.poly04 ; public class Manager extends Employee { private double bonus ; public Manager ( String name , double salary , double bonus ) { super ( name , salary ); this . bonus = bonus ; } public double getBonus () { return bonus ; } public void setBonus ( double bonus ) { this . bonus = bonus ; } public void manage (){ System . out . println ( \"Manager \" + getName () + \" \" + \"is managing\" ); } @Override public double getAnnual () { return ( getSalary () * 12 + bonus ); } } NormalEmployee.java package cn.meowrain.Poly.poly04 ; public class NormalEmployee extends Employee { public NormalEmployee ( String name , double salary ) { super ( name , salary ); } public void work (){ System . out . println ( \"\u666e\u901a\u5de5\u4eba\" + \" \" + getName () + \" \" + \"is working\" ); } @Override public double getAnnual () { // TODO Auto-generated method stub return super . getAnnual (); } } Object\u7c7b\u8be6\u89e3 # equals\u65b9\u6cd5 # == \u662f\u4e00\u4e2a\u6bd4\u8f83\u8fd0\u7b97\u7b26 \u5728\u770b\u4e0b\u9762\u8fd9\u4e2a\u4e1c\u897f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u629b\u51fa\u4e00\u4e2a\u95ee\u9898 String\u5c5e\u4e8e\u4ec0\u4e48\u6570\u636e\u7c7b\u578b\uff1f https://zhuanlan.zhihu.com/p/136468277 \u5f15\u7528\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u8be6\u89c1 Java\u6570\u636e\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b (biancheng.net) \u533a\u5206 package com.hsp.object ; public class Equals_exercise02 { public static void main ( String [] args ) { String name_1 = \"hello\" ; String name_2 = \"hello\" ; System . out . println ( name_2 == name_1 ); //true /* * String str1 = \"abcd\"\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff1a\u9996\u5148\u6808\u533a\u521b\u5efastr\u5f15\u7528\uff0c * \u7136\u540e\u5728String\u6c60\uff08\u72ec\u7acb\u4e8e\u6808\u548c\u5806\u800c\u5b58\u5728\uff0c\u5b58\u50a8\u4e0d\u53ef\u53d8\u91cf\uff09 * \u4e2d\u5bfb\u627e\u5176\u6307\u5411\u7684\u5185\u5bb9\u4e3a\"abcd\"\u7684\u5bf9\u8c61\uff0c\u5982\u679cString\u6c60\u4e2d\u6ca1\u6709\uff0c * \u5219\u521b\u5efa\u4e00\u4e2a\uff0c\u7136\u540estr\u6307\u5411String\u6c60\u4e2d\u7684\u5bf9\u8c61\uff0c * \u5982\u679c\u6709\uff0c\u5219\u76f4\u63a5\u5c06str1\u6307\u5411\"abcd\"\"\uff1b * \u5982\u679c\u540e\u6765\u53c8\u5b9a\u4e49\u4e86\u5b57\u7b26\u4e32\u53d8\u91cf str2 = \"abcd\", * \u5219\u76f4\u63a5\u5c06str2\u5f15\u7528\u6307\u5411String\u6c60\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u201cabcd\u201d\uff0c * \u4e0d\u518d\u91cd\u65b0\u521b\u5efa\u5bf9\u8c61\uff1b\u5f53str1\u8fdb\u884c\u4e86\u8d4b\u503c\uff08str1=\u201cabc\u201d\uff09\uff0c * \u5219str1\u5c06\u4e0d\u518d\u6307\u5411\"abcd\"\uff0c\u800c\u662f\u91cd\u65b0\u6307String\u6c60\u4e2d\u7684\"abc\"\uff0c * \u6b64\u65f6\u5982\u679c\u5b9a\u4e49String str3 = \"abc\",\u8fdb\u884cstr1 == str3\u64cd\u4f5c\uff0c * \u8fd4\u56de\u503c\u4e3atrue\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u503c\u4e00\u6837\uff0c\u5730\u5740\u4e00\u6837\uff0c * \u4f46\u662f\u5982\u679c\u5185\u5bb9\u4e3a\"abc\"\u7684str1\u8fdb\u884c\u4e86\u5b57\u7b26\u4e32\u7684+\u8fde\u63a5str1 = str1+\"d\" * \uff1b\u6b64\u65f6str1\u6307\u5411\u7684\u662f\u5728\u5806\u4e2d\u65b0\u5efa\u7684\u5185\u5bb9\u4e3a\"abcd\"\u7684\u5bf9\u8c61\uff0c * \u5373\u6b64\u65f6\u8fdb\u884cstr1==str2\uff0c\u8fd4\u56de\u503cfalse\uff0c\u56e0\u4e3a\u5730\u5740\u4e0d\u4e00\u6837\u3002 String str3 = new String(\"abcd\")\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff1a * \u76f4\u63a5\u5728\u5806\u4e2d\u521b\u5efa\u5bf9\u8c61\u3002 * \u5982\u679c\u540e\u6765\u53c8\u6709 * String str4 = new String(\"abcd\")\uff0cstr4\u4e0d\u4f1a\u6307\u5411\u4e4b\u524d\u7684\u5bf9\u8c61\uff0c * \u800c\u662f\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5e76\u6307\u5411\u5b83\uff0c * \u6240\u4ee5\u5982\u679c\u6b64\u65f6\u8fdb\u884cstr3==str4\u8fd4\u56de\u503c\u662ffalse\uff0c * \u56e0\u4e3a\u4e24\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\u4e0d\u4e00\u6837\uff0c\u5982\u679c\u662fstr3.equals(str4)\uff0c * \u8fd4\u56detrue,\u56e0\u4e3a\u5185\u5bb9\u76f8\u540c\u3002 * */ String name_3 = new String ( \"hello\" ); String name_4 = new String ( \"hello\" ); System . out . println ( name_3 == name_4 ); //false System . out . println ( name_3 . equals ( name_4 )); System . out . println ( name_1 . equals ( name_2 )); } } hashCode\u65b9\u6cd5 # \u63d0\u9ad8\u5177\u6709\u54c8\u5e0c\u7ed3\u6784\u7684\u5bb9\u5668\u6548\u7387 \u4e24\u4e2a\u5f15\u7528\uff0c\u5982\u679c\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219**\u54c8\u5e0c\u503c**\u80af\u5b9a\u662f\u4e00\u6837\u7684 \u4e24\u4e2a\u5f15\u7528\uff0c\u5982\u679c\u6307\u5411\u7684\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u5219**\u54c8\u5e0c\u503c**\u662f\u4e0d\u4e00\u6837\u7684 \u54c8\u5e0c\u503c\u4e3b\u8981\u6839\u636e\u5730\u5740\u53f7\u6765\u7684\uff0c\u4e0d\u80fd\u5c06**\u54c8\u5e0c\u503c**\u7b49\u4ef7\u4e8e\u5730\u5740 package com.hsp.object ; public class HashCode { public static void main ( String [] args ) { AA aa = new AA (); AA aa2 = new AA (); System . out . println ( aa . hashCode ()); System . out . println ( aa2 . hashCode ()); /*460141958 1163157884*/ } } class AA {} toString\u65b9\u6cd5 # \u57fa\u672c\u4ecb\u7ecd\uff1a \u9ed8\u8ba4\u8fd4\u56de\uff1a \u5168\u7c7b\u540d + @ + \u54c8\u5e0c\u503c\u7684\u5341\u516d\u8fdb\u5236 \u5b50\u7c7b\u5f80\u5f80\u91cd\u5199toString\u65b9\u6cd5\uff0c\u7528\u4e8e\u8fd4\u56de\u5bf9\u8c61\u7684\u5c5e\u6027\u4fe1\u606f package com.hsp.object ; public class toString { public static void main ( String [] args ) { Monster monster = new Monster ( \"\u5996\u602a\" , \"\u4fdd\u5b89\" , 1000 ); System . out . println ( monster . toString ()); //com.hsp.object.Monster@1b6d3586 } } class Monster { private String name ; private String job ; private double sal ; public Monster ( String name , String job , double sal ) { this . name = name ; this . job = job ; this . sal = sal ; } } \u91cd\u5199 toString\u65b9\u6cd5 \uff0c\u6253\u5370\u5bf9\u8c61\u6216\u62fc\u63a5\u5bf9\u8c61\u65f6\uff0c\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684toString\u5f62\u5f0f package com.hsp.object ; public class toString { public static void main ( String [] args ) { Monster monster = new Monster ( \"\u5996\u602a\" , \"\u4fdd\u5b89\" , 1000 ); System . out . println ( monster . toString ()); //Monster{name='\u5996\u602a', job='\u4fdd\u5b89', sal=1000.0} } } class Monster { private String name ; private String job ; private double sal ; // \u91cd\u5199toString\u65b9\u6cd5 @Override public String toString () { return \"Monster{\" + \"name='\" + name + '\\'' + \", job='\" + job + '\\'' + \", sal=\" + sal + '}' ; } public Monster ( String name , String job , double sal ) { this . name = name ; this . job = job ; this . sal = sal ; } } \u5f53\u76f4\u63a5\u8f93\u51fa\u4e00\u4e2a\u5bf9\u8c61\u65f6\u5019\uff0c toString\u65b9\u6cd5 \u4f1a\u88ab\u9ed8\u8ba4\u7684\u8c03\u7528 package com.hsp.object ; public class toString { public static void main ( String [] args ) { Monster monster = new Monster ( \"\u5996\u602a\" , \"\u4fdd\u5b89\" , 1000 ); System . out . println ( monster ); } } class Monster { private String name ; private String job ; private double sal ; // \u91cd\u5199toString\u65b9\u6cd5 @Override public String toString () { return \"Monster{\" + \"name='\" + name + '\\'' + \", job='\" + job + '\\'' + \", sal=\" + sal + '}' ; } public Monster ( String name , String job , double sal ) { this . name = name ; this . job = job ; this . sal = sal ; } } finalize() # \u5f53\u5783\u573e\u56de\u6536\u5668\u786e\u5b9a\u4e0d\u5b58\u5728\u5bf9\u8be5\u5bf9\u8c61\u7684\u66f4\u591a\u5f15\u7528\u65f6\uff0c\u7531\u5bf9\u8c61\u7684\u5783\u573e\u56de\u6536\u5668\u8c03\u7528\u6b64\u65b9\u6cd5 1.\u5f53\u5bf9\u8c61\u88ab\u56de\u6536\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684finalize\u65b9\u6cd5\u3002\u5b50\u7c7b\u53ef\u4ee5\u91cd\u5199\u8be5\u65b9\u6cd5\uff0c\u505a\u4e00\u4e9b\u91ca\u653e\u8d44\u6e90\u7684\u64cd\u4f5c 2.\u4ec0\u4e48\u65f6\u5019\u88ab\u56de\u6536\uff1a\u5f53\u67d0\u4e2a\u5bf9\u8c61\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5219jvm\u5c31\u8ba4\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4e00\u4e2a\u5783\u573e\u5bf9\u8c61\uff0c\u5c31\u4f1a\u7528\u5783\u573e\u56de\u6536\u673a\u5236\u6765\u9500\u6bc1\u8be5\u5bf9\u8c61\uff0c\u5728\u9500\u6bc1\u8be5\u5bf9\u8c61\u524d\uff0c\u4f1a\u5148\u8c03\u7528finalize\u65b9\u6cd5 3.\u5783\u573e\u56de\u6536\u673a\u5236\u7684\u8c03\u7528\uff0c\u662f\u7531\u7cfb\u7edf\u6765\u51b3\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u7531 System.gc() \u4e3b\u52a8\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236 \u5b9e\u9645\u5f00\u53d1\u4e2d\u57fa\u672c\u4e0d\u4f1a\u8fd0\u7528\uff0c\u5e94\u4ed8\u9762\u8bd5","title":"Java\u9762\u5411\u5bf9\u8c61\u57fa\u7840\uff08\u4e2d\u7ea7\uff09"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#java\u9762\u5411\u5bf9\u8c61\u57fa\u7840\u4e2d\u7ea7","text":"Consolas, 'Courier New', monospace","title":"Java\u9762\u5411\u5bf9\u8c61\u57fa\u7840\uff08\u4e2d\u7ea7\uff09"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5305","text":"","title":"\u5305"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5305\u7684\u4e09\u5927\u4f5c\u7528","text":"1.\u533a\u5206\u76f8\u540c\u540d\u5b57\u7684\u7c7b 2.\u5f53\u7c7b\u5f88\u591a\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u7ba1\u7406\u7c7b 3.\u63a7\u5236\u8bbf\u95ee\u8303\u56f4","title":"\u5305\u7684\u4e09\u5927\u4f5c\u7528"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5305\u7684\u57fa\u672c\u8bed\u6cd5","text":"1. package \u5173\u952e\u5b57 2. com . xxxx \u8868\u793a\u5305\u540d","title":"\u5305\u7684\u57fa\u672c\u8bed\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5305\u7684\u672c\u8d28\u5206\u6790","text":"\u5305\u7684\u672c\u8d28\u5c31\u662f\u521b\u5efa\u4e0d\u540c\u7684\u6587\u4ef6\u5939\u548c\u76ee\u5f55\u6765\u4fdd\u5b58\u7c7b\u6587\u4ef6","title":"\u5305\u7684\u672c\u8d28\u5206\u6790"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5305\u7684\u547d\u540d","text":"\u53ea\u80fd\u5305\u542b\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\uff0c\u5c0f\u5706\u70b9\uff0c\u4f46\u4e0d\u80fd\u7528\u6570\u5b57\u5f00\u5934\uff0c\u4e5f\u4e0d\u80fd\u662f\u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u547d\u540d\u89c4\u8303\uff1a com.xxxx.usr \u7528\u6237\u6a21\u5757 com.xxxx.utils \u5de5\u5177\u6a21\u5757 \u57df\u540d\u53cd\u7740\u5199\uff0c\u6700\u540e\u52a0\u4e0a\u6a21\u5757\u540d","title":"\u5305\u7684\u547d\u540d"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5e38\u7528\u7684\u5305","text":"","title":"\u5e38\u7528\u7684\u5305"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5f15\u5165\u5305","text":"\u8bed\u6cd5\uff1a import \u5305\u540d.\u7c7b\u540d \u6848\u4f8b\uff1a package cn.meowrain.Object_.package_ ; import java.util.Scanner ; public class package_01 { public static void main ( String [] args ) { Scanner sc = new Scanner ( System . in ); int a = sc . nextInt (); System . out . println ( a ); } }","title":"\u5f15\u5165\u5305"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u8bbf\u95ee\u4fee\u9970\u7b26","text":"","title":"\u8bbf\u95ee\u4fee\u9970\u7b26"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5c01\u88c5","text":"","title":"\u5c01\u88c5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5c01\u88c5\u4ecb\u7ecd","text":"\u5c01\u88c5\u5c31\u662f\u628a\u62bd\u8c61\u51fa\u7684\u6570\u636e[\u5c5e\u6027]\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c**[\u65b9\u6cd5] \u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u6570\u636e\u88ab\u4fdd\u62a4\u5728\u5185\u90e8\uff0c\u7a0b\u5e8f\u7684\u5176\u5b83\u90e8\u5206\u53ea\u6709\u901a\u8fc7\u88ab\u6388\u6743\u7684\u64cd\u4f5c [\u65b9\u6cd5]**\uff0c\u624d\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c","title":"\u5c01\u88c5\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5c01\u88c5\u7684\u7406\u89e3\u548c\u597d\u5904","text":"\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282 \u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4fdd\u8bc1\u5b89\u5168\u5408\u7406","title":"\u5c01\u88c5\u7684\u7406\u89e3\u548c\u597d\u5904"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5c01\u88c5\u5b9e\u73b0\u7684\u6b65\u9aa4","text":"\u5c06\u5c5e\u6027\u8fdb\u884c\u79c1\u6709\u5316\uff08\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u5c5e\u6027\uff09 \u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u7684(public)set\u65b9\u6cd5\uff0c\u7528\u4e8e\u5bf9\u5c5e\u6027\u5224\u65ad\u5e76\u8d4b\u503c java public void setXXX(\u7c7b\u578b \u53c2\u6570\u540d) { // XXX\u8868\u793a\u67d0\u4e2a\u5c5e\u6027 //\u52a0\u5165\u6570\u636e\u9a8c\u8bc1\u7684\u4e1a\u52a1\u903b\u8f91 \u5c5e\u6027 = \u53c2\u6570\u540d; } \u63d0\u4f9b\u4e00\u4e2a\u516c\u5171\u7684(public)get\u65b9\u6cd5\uff0c\u7528\u4e8e\u83b7\u53d6\u5c5e\u6027\u7684\u503c java public \u6570\u636e\u7c7b\u578b getXXX(){ //\u6743\u9650\u5224\u65ad\uff0cxxx\u67d0\u4e2a\u5c5e\u6027 return xxx; }","title":"\u5c01\u88c5\u5b9e\u73b0\u7684\u6b65\u9aa4"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5feb\u901f\u5165\u95e8\u6848\u4f8b","text":"package cn.meowrain.Encap_ ; public class encap_01 { public static void main ( String [] args ) { Person person = new Person (); person . setName ( \"meowrainyyds\" ); person . setAge ( - 1 ); } } class Person { public String name ; private int age ; private double salary ; private String job ; public void setName ( String name ) { if ( name . length () >= 6 || name . length () <= 2 ){ System . out . println ( \"\u540d\u5b57\u7684\u957f\u5ea6\u9519\u8bef\uff0c\u957f\u5ea6\u9700\u8981\u57282-6\u4e4b\u95f4\" ); } else { this . name = name ; } } public void setAge ( int age ) { if ( age <= 1 || age >= 120 ){ System . out . println ( \"\u8f93\u5165\u5e74\u9f84\u9519\u8bef(1-120)\" ); } else { this . age = age ; } } public void setSalary ( double salary ) { this . salary = salary ; } public void setJob ( String job ) { this . job = job ; } public String getName () { return name ; } public int getAge () { return age ; } public double getSalary () { return salary ; } public String getJob () { return job ; } public void getInfo () { System . out . println ( name + \" \" + \"is\" + age + \"years old\" ); } }","title":"\u5feb\u901f\u5165\u95e8\u6848\u4f8b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u628a\u6784\u9020\u5668\u548c\u5c01\u88c5\u7ed3\u5408","text":"\u5728\u6784\u9020\u5668\u4e2d\u6dfb\u52a0 setName ( name ); setAge ( age ); \u5373\u53ef\u5b9e\u73b0\u6784\u9020\u7684\u65f6\u5019\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u4ece\u800c\u5224\u65ad\u8f93\u5165\u7684\u6570\u636e\u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u8fdb\u884c\u8d4b\u503c package cn.meowrain.Encap_ ; public class encap_01 { public static void main ( String [] args ) { Person person = new Person ( \"meowrainyyds\" , - 1 ); person . getInfo (); } } class Person { public String name ; private int age ; private double salary ; private String job ; public Person ( String name , int age ) { setName ( name ); setAge ( age ); } public void setName ( String name ) { if ( name . length () >= 6 || name . length () <= 2 ) { System . out . println ( \"\u540d\u5b57\u7684\u957f\u5ea6\u9519\u8bef\uff0c\u957f\u5ea6\u9700\u8981\u57282-6\u4e4b\u95f4\" ); } else { this . name = name ; } } public void setAge ( int age ) { if ( age <= 1 || age >= 120 ) { System . out . println ( \"\u8f93\u5165\u5e74\u9f84\u9519\u8bef(1-120)\" ); } else { this . age = age ; } } public void setSalary ( double salary ) { this . salary = salary ; } public void setJob ( String job ) { this . job = job ; } public String getName () { return name ; } public int getAge () { return age ; } public double getSalary () { return salary ; } public String getJob () { return job ; } public void getInfo () { System . out . println ( name + \" \" + \"is\" + age + \"years old\" ); } }","title":"\u628a\u6784\u9020\u5668\u548c\u5c01\u88c5\u7ed3\u5408"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u8bfe\u5802\u7ec3\u4e60","text":"package cn.meowrain.Encap_ ; public class encap_02 { } class Account { String name ; int balance ; public Account ( String name , int balance ) { setName ( name ); setBalance ( balance ); } public void setName ( String name ) { if ( name . length () >= 2 && name . length () <= 4 ) { this . name = name ; } else { System . out . println ( \"\u540d\u5b57\u957f\u5ea6\u57282-4\u4f4d\u4e4b\u95f4\uff0c\u4f60\u8f93\u5165\u7684\u540d\u5b57\u4e0d\u5408\u6cd5\" ); } } public void setBalance ( int balance ) { if ( balance > 20 ){ this . balance = balance ; } else { System . out . println ( \"\u4f59\u989d\u5fc5\u987b\u5927\u4e8e20\" ); } } public void getInfo (){ System . out . println ( name + \" \" + balance ); } } class AccountTest { public static void main ( String [] args ) { Account account = new Account ( \"meowrain\" , 24 ); account . getInfo (); } }","title":"\u8bfe\u5802\u7ec3\u4e60"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ee7\u627f","text":"","title":"\u7ee7\u627f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u4e3a\u4ec0\u4e48\u9700\u8981\u7ee7\u627f","text":"","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u7ee7\u627f"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ee7\u627f\u7684\u57fa\u672c\u4ecb\u7ecd\u548c\u793a\u610f\u56fe","text":"","title":"\u7ee7\u627f\u7684\u57fa\u672c\u4ecb\u7ecd\u548c\u793a\u610f\u56fe"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ee7\u627f\u7684\u57fa\u672c\u8bed\u6cd5","text":"class \u5b50\u7c7b extends \u7236\u7c7b { } 1.\u5b50\u7c7b\u5c31\u4f1a\u81ea\u52a8\u62e5\u6709\u7236\u7c7b\u5b9a\u4e49\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 2.\u7236\u7c7b\u53c8\u53eb\u8d85\u7c7b\u548c\u57fa\u7c7b 3.\u5b50\u7c7b\u53c8\u53eb\u505a\u6d3e\u751f\u7c7b","title":"\u7ee7\u627f\u7684\u57fa\u672c\u8bed\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5feb\u901f\u5165\u95e8\u6848\u4f8b_1","text":"package cn.meowrain.extends_ ; public class extends_01 { public static void main ( String [] args ) { Student student = new Student ( \"mike\" , 17 , 100 ); student . eat (); //mike is eating } } class Human { String name ; int age ; public Human ( String name , int age ) { this . name = name ; this . age = age ; } //\u4e0b\u9762\u8fd9\u4e2aeat\u65b9\u6cd5\u662f\u5171\u6709\u7684\u65b9\u6cd5 public void eat (){ System . out . println ( name + \" is \" + \"eating\" ); } } class Student extends Human { //Student\u7ee7\u627f\u4e86\u7236\u7c7bHuman\u7684\u6240\u6709\u5c5e\u6027 double grades ; public Student ( String name , int age , double grades ) { super ( name , age ); //\u6784\u9020\u5668\u8981\u4f7f\u7528super this . grades = grades ; } }","title":"\u5feb\u901f\u5165\u95e8\u6848\u4f8b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ee7\u627f\u7ed9\u7f16\u7a0b\u5e26\u6765\u7684\u4fbf\u5229","text":"\u590d\u7528\u6027\u589e\u5f3a \u4ee3\u7801\u7684\u6269\u5c55\u6027\u548c\u7ef4\u62a4\u6027\u63d0\u9ad8","title":"\u7ee7\u627f\u7ed9\u7f16\u7a0b\u5e26\u6765\u7684\u4fbf\u5229"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ec6\u8282\u95ee\u9898","text":"\u5b50\u7c7b\u7ee7\u627f\u4e86\u6240\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u975e\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u53ef\u4ee5\u5728\u5b50\u7c7b\u76f4\u63a5\u8bbf\u95ee\uff0c\u8981\u901a\u8fc7\u7236\u7c7b\u63d0\u4f9b\u516c\u5171\u7684\u65b9\u6cd5\u53bb\u8bbf\u95ee \u5b50\u7c7b\u5fc5\u987b\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u5668\uff0c\u5b8c\u6210\u7236\u7c7b\u7684\u521d\u59cb\u5316 \u5f53\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4e0d\u7ba1\u4f7f\u7528\u5b50\u7c7b\u7684\u54ea\u4e2a\u6784\u9020\u5668\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u603b\u4f1a\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u5982\u679c\u7236\u7c7b\u6ca1\u6709\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u5668\uff0c\u5219\u5fc5\u987b\u5728\u5b50\u7c7b\u7684\u6784\u9020\u5668\u4e2d\u7528 super \u53bb\u6307\u5b9a\u4f7f\u7528\u7236\u7c7b\u7684\u54ea\u4e2a\u6784\u9020\u5668\u5b8c\u6210\u5bf9\u7236\u7c7b\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u4f1a\u901a\u8fc7 \u5982\u679c\u5e0c\u671b\u6307\u5b9a\u53bb\u8c03\u7528\u7236\u7c7b\u7684\u67d0\u4e2a\u6784\u9020\u5668\uff0c\u5219\u663e\u5f0f\u5730\u8c03\u7528\u4e00\u4e0b\uff1a super(\u53c2\u6570\u5217\u8868) super \u5728\u4f7f\u7528\u65f6\uff0c\u5fc5\u987b\u653e\u5728\u6784\u9020\u5668\u7b2c\u4e00\u884c\uff08**super**\u53ea\u80fd\u5728\u6784\u9020\u5668\u4e2d\u4f7f\u7528\uff09 super() \u548c this() \u90fd\u53ea\u80fd\u653e\u5728\u6784\u9020\u5668\u7684\u7b2c\u4e00\u884c\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e0d\u80fd\u5171\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u5668 super\uff08\u53c2\u6570\uff09\uff1a\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u67d0\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff08\u5e94\u8be5\u4e3a\u6784\u9020\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\uff09\u3002 this\uff08\u53c2\u6570\uff09\uff1a\u8c03\u7528\u672c\u7c7b\u4e2d\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff08\u5e94\u8be5\u4e3a\u6784\u9020\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\uff09\u3002 java\u6240\u6709\u7c7b\u90fd\u662f **Object\u7c7b**\u7684\u5b50\u7c7b\uff0c**Object\u7c7b**\u662f\u6240\u6709\u7c7b\u7684\u57fa\u7c7b \u7236\u7c7b\u6784\u9020\u5668\u7684\u8c03\u7528\u4e0d\u9650\u4e8e\u76f4\u63a5\u7236\u7c7b\uff0c\u5c06\u4e00\u76f4\u5f80\u4e0a\u8ffd\u6eaf\u76f4\u5230 **Object**\u7c7b \u5b50\u7c7b\u6700\u591a\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b \u4e0d\u80fd\u6ee5\u7528\u7ee7\u627f\uff0c\u5b50\u7c7b\u548c\u7236\u7c7b\u4e4b\u95f4\u5fc5\u987b\u6ee1\u8db3 is-a \u7684\u903b\u8f91\u5173\u7cfb package cn.meowrain.extends_ ; public class extends_02 { } class Base { int n1 ; int n2 ; String name ; public Base () { } // \u65e0\u53c2\u6784\u9020\u5668 public Base ( int n1 ) { this . n1 = n1 ; } public Base ( int n1 , int n2 ) { this . n1 = n1 ; this . n2 = n2 ; } public Base ( int n1 , int n2 , String name ) { this ( n1 , n2 ); /* * \u8fd9\u4e2athis(n1,n2); * \u76f8\u5f53\u4e8e\u8c03\u7528\u4e0a\u9762\u7684 this.n1 = n1; this.n2 = n2; */ this . name = name ; } } class kids extends Base { int age ; public kids ( int n1 , int n2 , int age ){ super ( n1 , n2 ); /* super(n1,n2); * \u76f8\u5f53\u4e8e * this.n1 = n1; this.n2 = n2; */ this . age = age ; } } class adult extends Base { public adult ( int n1 , int n2 , String name ){ super ( n1 , n2 , name ); } } class little_kids extends kids { String love ; public little_kids ( int n1 , int n2 , int age , String love ){ super ( n1 , n2 , age ); this . love = love ; } }","title":"\u7ec6\u8282\u95ee\u9898"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ee7\u627f\u7684\u672c\u8d28\u5206\u6790","text":"\u770b\u4e0b\u9762\u8fd9\u4e9b\u4ee3\u7801 package com.hspedu.extend_ ; /** * \u8bb2\u89e3\u7ee7\u627f\u7684\u672c\u8d28 */ public class ExtendsTheory { public static void main ( String [] args ) { Son son = new Son (); // \u5185\u5b58\u7684\u5e03\u5c40 // ?-> \u8fd9\u65f6\u8bf7\u5927\u5bb6\u6ce8\u610f\uff0c\u8981\u6309\u7167\u67e5\u627e\u5173\u7cfb\u6765\u8fd4\u56de\u4fe1\u606f // (1) \u9996\u5148\u770b\u5b50\u7c7b\u662f\u5426\u6709\u8be5\u5c5e\u6027 // (2) \u5982\u679c\u5b50\u7c7b\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5219\u8fd4\u56de\u4fe1\u606f // (3) \u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5c31\u770b\u7236\u7c7b\u6709\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027(\u5982\u679c\u7236\u7c7b\u6709\u8be5\u5c5e\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5c31\u8fd4\u56de\u4fe1\u606f..) // (4) \u5982\u679c\u7236\u7c7b\u6ca1\u6709\u5c31\u6309\u7167(3)\u7684\u89c4\u5219\uff0c\u7ee7\u7eed\u627e\u4e0a\u7ea7\u7236\u7c7b\uff0c\u76f4\u5230 Object... // System.out.println(son.name);//\u8fd4\u56de\u5c31\u662f\u5927\u5934\u513f\u5b50 // System.out.println(son.age);//\u8fd4\u56de\u7684\u5c31\u662f 39 // System.out.println(son.getAge());//\u8fd4\u56de\u7684\u5c31\u662f 39 System . out . println ( son . hobby ); // \u8fd4\u56de\u7684\u5c31\u662f\u65c5\u6e38 } } class GrandPa { // \u7237\u7c7b String name = \"\u5927\u5934\u7237\u7237\" ; String hobby = \"\u65c5\u6e38\" ; } class Father extends GrandPa { // \u7236\u7c7b String name = \"\u5927\u5934\u7238\u7238\" ; private int age = 39 ; public int getAge () { return age ; } } class Son extends Father { // \u5b50\u7c7b String name = \"\u5927\u5934\u513f\u5b50\" ; } \u5b50\u7c7b\u521b\u5efa\u7684\u5185\u5b58\u5e03\u5c40","title":"\u7ee7\u627f\u7684\u672c\u8d28\u5206\u6790"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u7ec3\u4e60","text":"\u4f1a\u8f93\u51fa a b name b \u5206\u6790\uff1aB\u7c7b\u65e0\u53c2\u6784\u9020\u5668\u4e2d\uff0c\u5176\u5b9e\u7b2c\u4e00\u53e5\u662f\u9690\u85cf\u7684 super() \uff0c\u6240\u4ee5\u4f1a\u5148\u6267\u884cA\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u8f93\u51faa\uff0c\u7136\u540e\u6267\u884c this(\"abc\") \uff0c\u8c03\u7528B\u7c7b\u672c\u7c7b\u4e0b\u7684\u6709\u53c2\u6784\u9020\u5668\uff0c\u8f93\u51fa b name \uff0c\u63a5\u7740\u6267\u884c System.out.println(\"b\") \uff0c\u8f93\u51fab \u7f16\u5199 Computer \u7c7b\uff0c\u5305\u542b CPU\u3001\u5185\u5b58\u3001\u786c\u76d8\u7b49\u5c5e\u6027\uff0cgetDetails \u65b9\u6cd5\u7528\u4e8e\u8fd4\u56de Computer \u7684\u8be6\u7ec6\u4fe1\u606f \u7f16\u5199 PC \u5b50\u7c7b\uff0c\u7ee7\u627f Computer \u7c7b\uff0c\u6dfb\u52a0\u7279\u6709\u5c5e\u6027\u3010\u54c1\u724c brand\u3011 \u7f16\u5199 NotePad \u5b50\u7c7b\uff0c\u7ee7\u627f Computer \u7c7b\uff0c\u6dfb\u52a0\u7279\u6709\u5c5e\u6027\u3010color\u3011 \u7f16\u5199 Test \u7c7b\uff0c\u5728 main \u65b9\u6cd5\u4e2d\u521b\u5efa PC \u548c NotePad \u5bf9\u8c61\uff0c\u5206\u522b\u7ed9\u5bf9\u8c61\u4e2d\u7279\u6709\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u4ee5\u53ca\u4ece Computer \u7c7b\u7ee7\u627f\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u5e76\u4f7f\u7528\u65b9\u6cd5\u5e76\u6253\u5370\u8f93\u51fa\u4fe1\u606f package cn.meowrain.extends_ ; class Test { public static void main ( String [] args ) { PC pc = new PC ( \"i5\" , 16 , 512 , \"Lenovo\" ); Notepad notepad = new Notepad ( \"j1900\" , 8 , 64 , \"white\" ); pc . getDetails (); notepad . getDetails (); } } public class Computer { String brand ; String cpu ; int memory ; int disk_size ; public Computer ( String cpu , int memory , int disk_size ) { this . cpu = cpu ; this . memory = memory ; this . disk_size = disk_size ; } public void getDetails () { System . out . println ( \"the computer's\" + \" \" + \"cpu is \" + cpu + \" \" + \"the memory size is \" + memory + \" \" + \"the disk size is\" + \" \" + disk_size ); } } class PC extends Computer { String brand ; public PC ( String cpu , int memory , int disk_size , String brand ) { super ( cpu , memory , disk_size ); this . brand = brand ; } public void getDetails () { System . out . println ( \"the computer's brand is\" + brand + \" \" + \"cpu is \" + cpu + \" \" + \"the memory size is \" + memory + \" \" + \"the disk size is\" + \" \" + disk_size ); } } class Notepad extends Computer { String color ; public Notepad ( String cpu , int memory , int disk_size , String color ) { super ( cpu , memory , disk_size ); this . color = color ; } public void getDetails () { System . out . println ( \"the computer's color is\" + color + \" \" + \"cpu is \" + cpu + \" \" + \"the memory size is \" + memory + \" \" + \"the disk size is\" + \" \" + disk_size ); } }","title":"\u7ec3\u4e60"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#super\u5173\u952e\u5b57","text":"","title":"super\u5173\u952e\u5b57"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u57fa\u672c\u4ecb\u7ecd","text":"super \u4ee3\u8868\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u7528\u4e8e**\u8bbf\u95ee\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u65b9\u6cd5\u548c\u6784\u9020\u5668**","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u57fa\u672c\u8bed\u6cd5","text":"\u8bbf\u95ee\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684 **private**\u5c5e\u6027 \u4f7f\u7528\uff1a super.\u5c5e\u6027\u540d \u8bbf\u95ee\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684private\u65b9\u6cd5 \u4f7f\u7528\uff1a super.\u65b9\u6cd5\u540d(\u53c2\u6570\u5217\u8868) \u8bbf\u95ee\u7236\u7c7b\u7684\u6784\u9020\u5668 \u4f7f\u7528\uff1a super(\u53c2\u6570\u5217\u8868) \u53ea\u80fd\u653e\u5728\u6784\u9020\u5668\u7684\u7b2c\u4e00\u53e5\uff0c\u53ea\u80fd\u51fa\u73b0\u4e00\u53e5 \u6848\u4f8b\uff1a package cn.meowrain.extends_ ; public class super_ { public static void main ( String [] args ) { Child_01 child = new Child_01 (); child . getRes (); } } class Base_01 { public String name = \"mike\" ; private int age = 8 ; public int getSum ( int a , int b ) { return a + b ; } } class Child_01 extends Base_01 { public String name = super . name ; //\u628a\u7236\u7c7b\u7684name\u5c5e\u6027\u7684\u503c\u8d4b\u503c\u7ed9\u81ea\u96f7\u7684name\u5c5e\u6027 // public int age = super.age; \u62a5\u9519 public void getRes (){ System . out . println ( super . getSum ( 19 , 20 )); //\u8c03\u7528\u5e76\u4e14\u8f93\u51fa\u7236\u7c7b\u4e2dgetSum\u65b9\u6cd5\u7684\u8fd4\u56de\u503c } }","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#super\u7ed9\u7f16\u7a0b\u5e26\u6765\u7684\u4fbf\u5229","text":"","title":"super\u7ed9\u7f16\u7a0b\u5e26\u6765\u7684\u4fbf\u5229"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#super\u548cthis\u7684\u6bd4\u8f83","text":"","title":"super\u548cthis\u7684\u6bd4\u8f83"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u65b9\u6cd5\u91cd\u5199override","text":"","title":"\u65b9\u6cd5\u91cd\u5199\uff08Override\uff09"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u57fa\u672c\u4ecb\u7ecd_1","text":"\u65b9\u6cd5\u91cd\u5199\u5c31\u662f\u5b50\u7c7b\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u548c\u7236\u7c7b\u7684\u67d0\u4e2a\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u8fd4\u56de\u7c7b\u578b\uff0c\u53c2\u6570\u4e00\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\u5b50\u7c7b\u7684\u8fd9\u4e2a\u65b9\u6cd5\u8986\u76d6\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5feb\u901f\u5165\u95e8","text":"package cn.meowrain.extends_ ; public class override_ { public static void main ( String [] args ) { Child_02 child_02 = new Child_02 (); child_02 . getInfo (); } } class Base_02 { public void getInfo () { System . out . println ( \"hello my friends\" ); } } class Child_02 extends Base_02 { @Override public void getInfo () { System . out . println ( \"hello my good friends\" ); } }","title":"\u5feb\u901f\u5165\u95e8"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u6ce8\u610f\u9879","text":"\u5b50\u7c7b\u65b9\u6cd5\u4e0d\u80fd\u7f29\u5c0f\u7236\u7c7b\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650 \u5b50\u7c7b\u65b9\u6cd5\u7684\u5f62\u53c2\u5217\u8868\uff0c\u65b9\u6cd5\u540d\u79f0\uff0c\u8981\u548c\u7236\u7c7b\u65b9\u6cd5\u7684\u5f62\u53c2\u5217\u8868\uff0c\u65b9\u6cd5\u540d\u79f0\u5b8c\u5168\u4e00\u6837 \u5b50\u7c7b\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u7236\u7c7b\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u8981\u4e00\u6837\uff0c\u6216\u8005\u662f\u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\uff0c\u6bd4\u5982\uff1a \u7236\u7c7b\u8fd4\u56de\u7c7b\u578b\u662fObject\uff0c\u5b50\u7c7b\u65b9\u6cd5\u8fd4\u56de\u7684\u7c7b\u578b\u662fString","title":"\u6ce8\u610f\u9879"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u65b9\u6cd5\u91cd\u5199\u548c\u91cd\u8f7d\u7684\u533a\u522b","text":"\u91cd\u8f7d\u662f https://meowrain.cn/archives/java-mian-xiang-dui-xiang-ji-chu--chu-ji- \u4e2d\u7684\u5185\u5bb9\uff0c\u56de\u987e\u6e05\u770b\u4e0a\u9762\u94fe\u63a5\u7684\u5185\u5bb9","title":"\u65b9\u6cd5\u91cd\u5199\u548c\u91cd\u8f7d\u7684\u533a\u522b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001","text":"","title":"\u591a\u6001"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u57fa\u672c\u4ecb\u7ecd_2","text":"\u65b9\u6cd5\u6216\u5bf9\u8c61\u5177\u6709\u591a\u79cd\u5f62\u6001\uff0c\u662f\u9762\u5411\u5bf9\u8c61\u7684\u7b2c\u4e09\u5927\u7279\u5f81\uff0c\u591a\u6001\u662f\u5efa\u7acb\u5728\u5c01\u88c5\u548c\u7ee7\u627f\u57fa\u7840\u4e0a\u7684","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u5b58\u5728\u7684\u4e09\u4e2a\u5fc5\u8981\u6761\u4ef6","text":"\u7ee7\u627f \u91cd\u5199 \u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\uff1a Parent p = new Child();","title":"\u591a\u6001\u5b58\u5728\u7684\u4e09\u4e2a\u5fc5\u8981\u6761\u4ef6"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u7684\u5177\u4f53\u4f53\u73b0","text":"","title":"\u591a\u6001\u7684\u5177\u4f53\u4f53\u73b0"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u65b9\u6cd5\u7684\u591a\u6001","text":"\u4e0a\u56fe\u4ee3\u7801\u5b9e\u73b0\uff1a Shap.java package cn.meowrain.Poly ; public class Shape { public void draw (){ System . out . println ( \"\u753b\u56fe\u5f62\" ); } } Circle.java package cn.meowrain.Poly ; public class Circle extends Shape { public void draw (){ System . out . println ( \"\u753b\u5706\u5f62\" ); } } Square.java package cn.meowrain.Poly ; public class Square extends Shape { public void draw (){ System . out . println ( \"\u753b\u65b9\u5f62\" ); } } Triangle.java package cn.meowrain.Poly ; public class Triangle extends Shape { public void draw (){ System . out . println ( \"\u753b\u4e09\u89d2\u5f62\" ); } } Runner.java package cn.meowrain.Poly ; public class Runner { public static void main ( String [] args ) { Shape circle = new Circle (); circle . draw (); Shape triangle = new Triangle (); triangle . draw (); Shape square = new Square (); square . draw (); } } \u6ce8\u610f\uff1a 1.\u4e00\u4e2a\u5bf9\u8c61\u7684\u7f16\u8bd1\u7c7b\u578b\u548c\u8fd0\u884c\u7c7b\u578b\u53ef\u4ee5\u4e0d\u4e00\u81f4 2.\u7f16\u8bd1\u7c7b\u578b\u5728\u5b9a\u4e49\u5bf9\u8c61\u65f6\u5c31\u786e\u5b9a\u4e86\uff0c\u4e0d\u80fd\u6539\u53d8 3.\u8fd0\u884c\u7c7b\u578b\u662f\u53ef\u4ee5\u53d8\u5316\u7684 4.\u7f16\u8bd1\u7c7b\u578b\u770b\u5b9a\u4e49\u65f6\u5019=\u53f7\u7684\u5de6\u8fb9\uff0c\u8fd0\u884c\u7c7b\u578b\u770b=\u53f7\u7684\u53f3\u8fb9","title":"\u65b9\u6cd5\u7684\u591a\u6001"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282\u8ba8\u8bba","text":"\u591a\u6001\u7684\u524d\u63d0\u662f\uff1a \u4e24\u4e2a\u5bf9\u8c61\uff08\u7c7b\uff09\u5b58\u5728\u7ee7\u627f\u5173\u7cfb","title":"\u591a\u6001\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282\u8ba8\u8bba"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u7684\u5411\u4e0a\u8f6c\u578b","text":"\u672c\u8d28\uff1a\u7236\u7c7b\u7684\u5f15\u7528\u6307\u5411\u4e86\u5b50\u7c7b\u7684\u5bf9\u8c61 \u8bed\u6cd5\uff1a \u7236\u7c7b\u7c7b\u578b \u5f15\u7528\u540d = new \u5b50\u7c7b\u7c7b\u578b(); \u7279\u70b9\uff1a \u7f16\u8bd1\u7c7b\u578b\u770b\u5de6\u8fb9\uff0c\u8fd0\u884c\u7c7b\u578b\u770b\u53f3\u8fb9 \u53ef\u4ee5\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u6240\u6709\u6210\u5458\uff08\u9700\u9075\u5b88\u8bbf\u95ee\u6743\u9650\uff09 \u4e0d\u80fd\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u7279\u6709\u6210\u5458\u2192\u53ea\u80fd\u8c03\u7528\u5b50\u7c7b\u548c\u7236\u7c7b\u5171\u6709\u7684\u6210\u5458 \u6700\u7ec8\u8fd0\u884c\u6548\u679c\u770b\u5b50\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0","title":"\u591a\u6001\u7684\u5411\u4e0a\u8f6c\u578b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b","text":"\u8bed\u6cd5\uff1a \u5b50\u7c7b\u7c7b\u578b \u5f15\u7528\u540d = (\u5b50\u7c7b\u7c7b\u578b)\u7236\u7c7b\u5f15\u7528; \u53ea\u80fd\u5f3a\u5236\u8f6c\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u4e0d\u80fd\u5f3a\u8f6c\u7236\u7c7b\u7684\u5bf9\u8c61 \u8981\u6c42\u7236\u7c7b\u7684\u5f15\u7528\u5fc5\u987b\u6307\u5411\u7684\u662f\u5f53\u524d\u76ee\u6807\u7c7b\u578b\u7684\u5bf9\u8c61 \u5f53\u5411\u4e0b\u8f6c\u578b\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u5b50\u7c7b\u7c7b\u578b\u4e2d\u6240\u6709\u6210\u5458 \u6848\u4f8b\u6f14\u793a: Animal.java package cn.meowrain.Poly.poly02 ; public class Animal { String name = \"\u52a8\u7269\" ; int age = 10 ; public void sleeper () { System . out . println ( \"\u7761\" ); } public void run () { System . out . println ( \"\u8dd1\" ); } public void eat (){ System . out . println ( \"\u5403\" ); } public void show () { System . out . println ( \"hello \u4f60\u597d\" ); } } Cat.java package cn.meowrain.Poly.poly02 ; public class Cat extends Animal { public void eat (){ //\u65b9\u6cd5\u91cd\u5199 System . out . println ( \"\u732b\u5403\u9c7c\" ); } public void catchMouse () { //cat\u7279\u6709\u65b9\u6cd5 System . out . println ( \"\u732b\u6293\u8001\u9f20\" ); } } PolyDetail.java package cn.meowrain.Poly.poly02 ; public class PolyDetail { public static void main ( String [] args ) { //\u5411\u4e0a\u8f6c\u578b,\u7236\u7c7b\u7684\u5f15\u7528\u6307\u5411\u4e86\u5b50\u7c7b\u7684\u5bf9\u8c61 Animal animal = new Cat (); //animal.catchMouse() \u9519\u8bef,\u53ea\u80fd\u8c03\u7528\u5171\u540c\u7684\u5c5e\u6027 //\u56e0\u4e3a\u5728\u7f16\u8bd1\u9636\u6bb5,\u80fd\u8c03\u7528\u54ea\u4e9b\u6210\u5458,\u662f\u7531\u7f16\u8bd1\u7c7b\u578b\u51b3\u5b9a\u7684 //\u6700\u7ec8\u8fd0\u884c\u6548\u679c\u770b\u8fd0\u884c\u7c7b\u578b\u7684\u5177\u4f53\u5b9e\u73b0 animal . eat (); animal . run (); animal . show (); animal . sleeper (); //\u5982\u679c\u60f3\u8c03\u7528Cat\u7684catchMouse\u65b9\u6cd5 //\u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b //\u5b50\u7c7b\u7c7b\u578b \u5f15\u7528\u540d = (\u5b50\u7c7b\u7c7b\u578b)\u7236\u7c7b\u5f15\u7528 Cat cat = ( Cat ) animal ; cat . catchMouse (); } } \u6ce8\u610f: \u5c5e\u6027\u6ca1\u6709\u91cd\u5199\u53ea\u8bf4! \u5c5e\u6027\u7684\u503c\u770b\u7f16\u8bd1\u7c7b\u578b,\u4e5f\u5c31\u662f\u5de6\u4fa7 \u770b\u4e0b\u9762\u7684\u4ee3\u7801: package cn.meowrain.Poly.poly03 ; public class item { public static void main ( String [] args ) { Base base = new Sub (); //\u5c5e\u6027\u7684\u503c\u770b\u7f16\u8bd1\u7c7b\u578b System . out . println ( base . count ); //120 } } class Base { //\u7236\u7c7b int count = 120 ; } class Sub extends Base { //\u5b50\u7c7b int count = 234 ; }","title":"\u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#instanceof\u6bd4\u8f83\u64cd\u4f5c\u7b26","text":"\u4ecb\u7ecd: **instanceOf**\u6bd4\u8f83\u64cd\u4f5c\u7b26,\u7528\u4e8e\u5224\u65ad\u5bf9\u8c61\u7684\u8fd0\u884c\u7c7b\u578b\u662f\u5426\u4e3aXX\u7c7b\u578b\u7684\u5b50\u7c7b\u578b \u4e3e\u4e2a\u4f8b\u5b50: package cn.meowrain.Poly.poly03 ; public class PolyDetail03 { public static void main ( String [] args ) { BB bb = new BB (); //\u8fd0\u884c\u7c7b\u578b\u662fBB System . out . println ( bb instanceof BB ); //true System . out . println ( bb instanceof AA ); //true //\u5411\u4e0a\u8f6c\u578b //AA\u662f\u7f16\u8bd1\u7c7b\u578b,BB\u662f\u8fd0\u884c\u7c7b\u578b AA aa = new BB (); //\u8fd0\u884c\u7c7b\u578b\u662fBB System . out . println ( aa instanceof AA ); //true System . out . println ( aa instanceof BB ); // true //\u5411\u4e0b\u8f6c\u578b BB ab = ( BB ) aa ; //\u8fd0\u884c\u7c7b\u578b\u662fBB System . out . println ( ab instanceof AA ); //true System . out . println ( ab instanceof BB ); //true AA am = new AA (); //\u8fd0\u884c\u7c7b\u578b\u662fAA System . out . println ( am instanceof AA ); // true System . out . println ( am instanceof BB ); //false } } class AA { } class BB extends AA { }","title":"instanceOf\u6bd4\u8f83\u64cd\u4f5c\u7b26"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#java\u7684\u52a8\u6001\u7ed1\u5b9a","text":"\u5f53\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u7684\u65f6\u5019\uff0c\u8be5\u65b9\u6cd5\u56de\u548c\u8be5\u90fd\u897f\u6602\u7684\u5185\u5b58\u5730\u5740/\u8fd0\u884c\u7c7b\u578b\u7ed1\u5b9a \u5f53\u8c03\u7528\u5bf9\u8c61\u5c5e\u6027\u65f6\uff0c\u6ca1\u6709\u52a8\u6001\u7ed1\u5b9a\u673a\u5236\uff0c\u54ea\u91cc\u58f0\u660e\uff0c\u54ea\u91cc\u4f7f\u7528","title":"java\u7684\u52a8\u6001\u7ed1\u5b9a"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u5728\u5411\u4e0a\u8f6c\u578b\u60c5\u51b5\u4e0b\u7684\u52a8\u6001\u7ed1\u5b9a\u793a\u4f8b","text":"\u7236\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1aclass cn.meowrain.bind.Son package cn.meowrain.bind ; public class bind01 { public static void main ( String [] args ) { Father sample = new Son (); //\u5411\u4e0a\u8f6c\u578b sample . method (); } } class Father { public void method (){ System . out . println ( \"\u7236\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a\" + this . getClass ()); } } class Son extends Father { } \u58f0\u660e\u7684\u662f\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u4f46\u662f\u8c03\u7528\u4e86\u5b50\u7c7b\u5bf9\u8c61\uff0c\u8c03\u7528method\uff0c\u5b50\u7c7b\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5c31\u53bb\u7236\u7c7b\u4e2d\u53bb\u627e\uff0c\u7136\u540e\u8fdb\u884c\u8c03\u7528 \u63a5\u4e0b\u6765\u6211\u4eec\u4fee\u6539\u5b50\u7c7b\uff0c\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199 method \u65b9\u6cd5 package cn.meowrain.bind ; public class bind01 { public static void main ( String [] args ) { Father sample = new Son (); //\u5411\u4e0a\u8f6c\u578b sample . method (); } } class Father { public void method (){ System . out . println ( \"\u7236\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a\" + this . getClass ()); } } class Son extends Father { @Override public void method () { System . out . println ( \"\u5b50\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a \" + this . getClass ()); } } \u5b50\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u8c61\u7c7b\u578b\uff1a class cn.meowrain.bind.Son \u6389\u7528\u5b50\u7c7b\u5bf9\u8c61\uff0c\u5b50\u7c7b\u4e2d\u542b\u6709 method \u65b9\u6cd5\uff0c\u6240\u4ee5\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u8fd9\u4e2amethod\u65b9\u6cd5 \u6ce8\u610f\uff1a \u4e0b\u9762\u8bf4\u5230\u7684\u4e0d\u5c5e\u4e8e\u52a8\u6001\u7ed1\u5b9a \u8fd0\u884c\u65f6\uff08\u52a8\u6001\uff09\u7ed1\u5b9a\u9488\u5bf9\u7684\u8303\u7574\u53ea\u662f\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u4e00\u770b\u5c5e\u6027\u7ed1\u5b9a package cn.meowrain.bind ; public class bind01 { public static void main ( String [] args ) { Father sample = new Son (); //\u5411\u4e0a\u8f6c\u578b System . out . println ( sample . name ); } } class Father { String name = \"\u7236\u7c7b\u5c5e\u6027\" ; } class Son extends Father { String name = \"\u5b50\u7c7b\u5c5e\u6027\" ; } \u8fd0\u884c\u7ed3\u679c\uff1a \u7236\u7c7b\u5c5e\u6027 \u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8f93\u51fa\u662f\u7531\u7f16\u8bd1\u7c7b\u578b\u51b3\u5b9a\u7684","title":"\u5728\u5411\u4e0a\u8f6c\u578b\u60c5\u51b5\u4e0b\u7684\u52a8\u6001\u7ed1\u5b9a\u793a\u4f8b"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u7684\u5e94\u7528","text":"","title":"\u591a\u6001\u7684\u5e94\u7528"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u6570\u7ec4","text":"\u6570\u7ec4\u7684\u5b9a\u4e49\u7c7b\u578b\u662f\u7236\u7c7b\u7c7b\u578b\uff0c\u91cc\u9762\u4fdd\u5b58\u7684\u5b9e\u9645\u5143\u7d20\u7c7b\u578b\u4e3a\u5b50\u7c7b\u7c7b\u578b \u5e94\u7528\u5b9e\u4f8b\uff1a\uff1a \u73b0\u6709\u4e00\u4e2a\u7ed3\u6784\u5982\u4e0b\uff0c\u8981\u6c42\u521b\u5efa1\u4e2aPerson\u5bf9\u8c61\uff0c2\u4e2aStudent\u5bf9\u8c61\u548c2\u4e2aTeacher\u5bf9\u8c61\uff0c\u7edf\u4e00\u653e\u5728\u6570\u7ec4\u4e2d\uff0c\u5e76\u8c03\u7528\u6bcf\u4e2a\u5bf9\u8c61\u7684say\u65b9\u6cd5 package cn.meowrain.bind ; public class bind02 { public static void main ( String [] args ) { Person [] persons = new Person [ 5 ] ; persons [ 0 ] = new Person ( \"jack\" , 20 ); persons [ 1 ] = new Student ( \"mike\" , 18 , 100 ); persons [ 2 ] = new Student ( \"meowrain\" , 19 , 150 ); persons [ 3 ] = new Teacher ( \"gac\" , 24 , 110 ); persons [ 4 ] = new Teacher ( \"jjj\" , 25 , 123 ); // persons[i]\u7f16\u8bd1\u7c7b\u578b\u662fPerson\uff0c\u8fd0\u884c\u7c7b\u578b\u662f\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u901a\u8fc7JVM\u5224\u65ad\u7684 for ( int i = 0 ; i < persons . length ; i ++ ) { System . out . println ( persons [ i ] . say ()); // \u52a8\u6001\u7ed1\u5b9a\u673a\u5236 if ( persons [ i ] instanceof Student ) { Student student = ( Student ) persons [ i ] ; //\u5411\u4e0b\u8f6c\u578b student . study (); //\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u66ff\u4ee3 // ((Student)persons[i]).study(); } else if ( persons [ i ] instanceof Teacher ) { Teacher teacher = ( Teacher ) persons [ i ] ; //\u5411\u4e0b\u8f6c\u578b teacher . teach (); //\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u66ff\u4ee3 // ((Teacher)persons[i]).teach(); } } } } class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } public String say () { return \"Perosn \" + getName () + \" is \" + getAge () + \"years old\" ; } } class Student extends Person { private int score ; public Student ( String name , int age , int score ) { super ( name , age ); this . score = score ; } public int getScore () { return score ; } public void setScore ( int score ) { this . score = score ; } @Override public String say () { return \"Student \" + getName () + \" \" + \"is\" + \" \" + \"learning\" + \" \" + \"his score is \" + getScore (); } public void study () { System . out . println ( \"student \" + getName () + \"is learning\" ); } } class Teacher extends Person { private double salary ; public Teacher ( String name , int age , double salary ) { super ( name , age ); this . salary = salary ; } public double getSalary () { return salary ; } public void setSalary ( double salary ) { this . salary = salary ; } @Override public String say () { return \"Teacher \" + getName () + \"is teaching\" + \" \" + \"his salary is \" + getSalary (); } public void teach () { System . out . println ( \"Teacher \" + getName () + \"is teaching\" ); } }","title":"\u591a\u6001\u6570\u7ec4"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#\u591a\u6001\u53c2\u6570","text":"\u65b9\u6cd5\u5b9a\u4e49\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u7236\u7c7b\u7c7b\u578b\uff0c\u5b9e\u53c2\u7c7b\u578b\u5141\u8bb8\u4e3a\u5b50\u7c7b\u7c7b\u578b \u5b9a\u4e49\u5458\u5de5\u7c7bEmployee,\u5305\u542b\u59d3\u540d\u548c\u6708\u5de5\u8d44\uff08private)\uff0c\u4ee5\u53ca\u8ba1\u7b97\u5e74\u5de5\u8d44getAnnual\u7684\u65b9\u6cd5\uff0c\u666e\u901a\u5458\u5de5\u548c\u7ecf\u7406\u7ee7\u627f\u4e86\u5458\u5de5\uff0c\u7ecf\u7406\u7c7b\u591a\u4e86\u5956\u91d1bonus\u548c\u7ba1\u7406manage\u65b9\u6cd5\uff0c\u666e\u901a\u5458\u5de5\u591a\u4e86work\u65b9\u6cd5\uff0c\u666e\u901a\u5458\u5de5\u548c\u7ecf\u7406\u7c7b\u8981\u6c42\u5206\u522b\u91cd\u5199getAnnual\u65b9\u6cd5 \u6d4b\u8bd5\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5showEmpAnnual(Employee e),\u5b9e\u73b0\u83b7\u53d6\u4efb\u4f55\u5458\u5de5\u5bf9\u8c61\u7684\u5e74\u5de5\u8d44\uff0c\u5e76\u5728main\u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5[e.getAnnual] \u6d4b\u8bd5\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5\uff0ctestWork,\u5982\u679c\u662f\u666e\u901a\u5458\u5de5\uff0c\u5c31\u8c03\u7528\u90a3\u4e2awork\u65b9\u6cd5\u3002\u5982\u679c\u662f\u7ecf\u7406\uff0c\u5c31\u8c03\u7528manage\u65b9\u6cd5 Test.java package cn.meowrain.Poly.poly04 ; public class Test { public double showEmpAnnual ( Employee e ) { return e . getAnnual (); } public void testWork ( Employee e ){ if ( e instanceof NormalEmployee ){ (( NormalEmployee ) e ). work (); } else if ( e instanceof Manager ){ (( Manager ) e ). manage (); } } public static void main ( String [] args ) { NormalEmployee worker = new NormalEmployee ( \"mike\" , 4000 ); Manager manager = new Manager ( \"john\" , 4300 , 5000 ); Test test = new Test (); System . out . println ( \"\u7ba1\u7406\u8005\u5de5\u8d44\uff1a \" + test . showEmpAnnual ( manager )); System . out . println ( \"\u5de5\u4eba\u5de5\u8d44\uff1a \" + test . showEmpAnnual ( worker )); test . testWork ( manager ); test . testWork ( worker ); } } Employee.java package cn.meowrain.Poly.poly04 ; public class Employee { private String name ; private double salary ; public Employee ( String name , double salary ) { this . name = name ; this . salary = salary ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public double getSalary () { return salary ; } public void setSalary ( double salary ) { this . salary = salary ; } public double getAnnual () { return salary * 12 ; } } Manager.java package cn.meowrain.Poly.poly04 ; public class Manager extends Employee { private double bonus ; public Manager ( String name , double salary , double bonus ) { super ( name , salary ); this . bonus = bonus ; } public double getBonus () { return bonus ; } public void setBonus ( double bonus ) { this . bonus = bonus ; } public void manage (){ System . out . println ( \"Manager \" + getName () + \" \" + \"is managing\" ); } @Override public double getAnnual () { return ( getSalary () * 12 + bonus ); } } NormalEmployee.java package cn.meowrain.Poly.poly04 ; public class NormalEmployee extends Employee { public NormalEmployee ( String name , double salary ) { super ( name , salary ); } public void work (){ System . out . println ( \"\u666e\u901a\u5de5\u4eba\" + \" \" + getName () + \" \" + \"is working\" ); } @Override public double getAnnual () { // TODO Auto-generated method stub return super . getAnnual (); } }","title":"\u591a\u6001\u53c2\u6570"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#object\u7c7b\u8be6\u89e3","text":"","title":"Object\u7c7b\u8be6\u89e3"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#equals\u65b9\u6cd5","text":"== \u662f\u4e00\u4e2a\u6bd4\u8f83\u8fd0\u7b97\u7b26 \u5728\u770b\u4e0b\u9762\u8fd9\u4e2a\u4e1c\u897f\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u629b\u51fa\u4e00\u4e2a\u95ee\u9898 String\u5c5e\u4e8e\u4ec0\u4e48\u6570\u636e\u7c7b\u578b\uff1f https://zhuanlan.zhihu.com/p/136468277 \u5f15\u7528\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u8be6\u89c1 Java\u6570\u636e\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b (biancheng.net) \u533a\u5206 package com.hsp.object ; public class Equals_exercise02 { public static void main ( String [] args ) { String name_1 = \"hello\" ; String name_2 = \"hello\" ; System . out . println ( name_2 == name_1 ); //true /* * String str1 = \"abcd\"\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff1a\u9996\u5148\u6808\u533a\u521b\u5efastr\u5f15\u7528\uff0c * \u7136\u540e\u5728String\u6c60\uff08\u72ec\u7acb\u4e8e\u6808\u548c\u5806\u800c\u5b58\u5728\uff0c\u5b58\u50a8\u4e0d\u53ef\u53d8\u91cf\uff09 * \u4e2d\u5bfb\u627e\u5176\u6307\u5411\u7684\u5185\u5bb9\u4e3a\"abcd\"\u7684\u5bf9\u8c61\uff0c\u5982\u679cString\u6c60\u4e2d\u6ca1\u6709\uff0c * \u5219\u521b\u5efa\u4e00\u4e2a\uff0c\u7136\u540estr\u6307\u5411String\u6c60\u4e2d\u7684\u5bf9\u8c61\uff0c * \u5982\u679c\u6709\uff0c\u5219\u76f4\u63a5\u5c06str1\u6307\u5411\"abcd\"\"\uff1b * \u5982\u679c\u540e\u6765\u53c8\u5b9a\u4e49\u4e86\u5b57\u7b26\u4e32\u53d8\u91cf str2 = \"abcd\", * \u5219\u76f4\u63a5\u5c06str2\u5f15\u7528\u6307\u5411String\u6c60\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u201cabcd\u201d\uff0c * \u4e0d\u518d\u91cd\u65b0\u521b\u5efa\u5bf9\u8c61\uff1b\u5f53str1\u8fdb\u884c\u4e86\u8d4b\u503c\uff08str1=\u201cabc\u201d\uff09\uff0c * \u5219str1\u5c06\u4e0d\u518d\u6307\u5411\"abcd\"\uff0c\u800c\u662f\u91cd\u65b0\u6307String\u6c60\u4e2d\u7684\"abc\"\uff0c * \u6b64\u65f6\u5982\u679c\u5b9a\u4e49String str3 = \"abc\",\u8fdb\u884cstr1 == str3\u64cd\u4f5c\uff0c * \u8fd4\u56de\u503c\u4e3atrue\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u503c\u4e00\u6837\uff0c\u5730\u5740\u4e00\u6837\uff0c * \u4f46\u662f\u5982\u679c\u5185\u5bb9\u4e3a\"abc\"\u7684str1\u8fdb\u884c\u4e86\u5b57\u7b26\u4e32\u7684+\u8fde\u63a5str1 = str1+\"d\" * \uff1b\u6b64\u65f6str1\u6307\u5411\u7684\u662f\u5728\u5806\u4e2d\u65b0\u5efa\u7684\u5185\u5bb9\u4e3a\"abcd\"\u7684\u5bf9\u8c61\uff0c * \u5373\u6b64\u65f6\u8fdb\u884cstr1==str2\uff0c\u8fd4\u56de\u503cfalse\uff0c\u56e0\u4e3a\u5730\u5740\u4e0d\u4e00\u6837\u3002 String str3 = new String(\"abcd\")\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff1a * \u76f4\u63a5\u5728\u5806\u4e2d\u521b\u5efa\u5bf9\u8c61\u3002 * \u5982\u679c\u540e\u6765\u53c8\u6709 * String str4 = new String(\"abcd\")\uff0cstr4\u4e0d\u4f1a\u6307\u5411\u4e4b\u524d\u7684\u5bf9\u8c61\uff0c * \u800c\u662f\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5e76\u6307\u5411\u5b83\uff0c * \u6240\u4ee5\u5982\u679c\u6b64\u65f6\u8fdb\u884cstr3==str4\u8fd4\u56de\u503c\u662ffalse\uff0c * \u56e0\u4e3a\u4e24\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\u4e0d\u4e00\u6837\uff0c\u5982\u679c\u662fstr3.equals(str4)\uff0c * \u8fd4\u56detrue,\u56e0\u4e3a\u5185\u5bb9\u76f8\u540c\u3002 * */ String name_3 = new String ( \"hello\" ); String name_4 = new String ( \"hello\" ); System . out . println ( name_3 == name_4 ); //false System . out . println ( name_3 . equals ( name_4 )); System . out . println ( name_1 . equals ( name_2 )); } }","title":"equals\u65b9\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#hashcode\u65b9\u6cd5","text":"\u63d0\u9ad8\u5177\u6709\u54c8\u5e0c\u7ed3\u6784\u7684\u5bb9\u5668\u6548\u7387 \u4e24\u4e2a\u5f15\u7528\uff0c\u5982\u679c\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219**\u54c8\u5e0c\u503c**\u80af\u5b9a\u662f\u4e00\u6837\u7684 \u4e24\u4e2a\u5f15\u7528\uff0c\u5982\u679c\u6307\u5411\u7684\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u5219**\u54c8\u5e0c\u503c**\u662f\u4e0d\u4e00\u6837\u7684 \u54c8\u5e0c\u503c\u4e3b\u8981\u6839\u636e\u5730\u5740\u53f7\u6765\u7684\uff0c\u4e0d\u80fd\u5c06**\u54c8\u5e0c\u503c**\u7b49\u4ef7\u4e8e\u5730\u5740 package com.hsp.object ; public class HashCode { public static void main ( String [] args ) { AA aa = new AA (); AA aa2 = new AA (); System . out . println ( aa . hashCode ()); System . out . println ( aa2 . hashCode ()); /*460141958 1163157884*/ } } class AA {}","title":"hashCode\u65b9\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#tostring\u65b9\u6cd5","text":"\u57fa\u672c\u4ecb\u7ecd\uff1a \u9ed8\u8ba4\u8fd4\u56de\uff1a \u5168\u7c7b\u540d + @ + \u54c8\u5e0c\u503c\u7684\u5341\u516d\u8fdb\u5236 \u5b50\u7c7b\u5f80\u5f80\u91cd\u5199toString\u65b9\u6cd5\uff0c\u7528\u4e8e\u8fd4\u56de\u5bf9\u8c61\u7684\u5c5e\u6027\u4fe1\u606f package com.hsp.object ; public class toString { public static void main ( String [] args ) { Monster monster = new Monster ( \"\u5996\u602a\" , \"\u4fdd\u5b89\" , 1000 ); System . out . println ( monster . toString ()); //com.hsp.object.Monster@1b6d3586 } } class Monster { private String name ; private String job ; private double sal ; public Monster ( String name , String job , double sal ) { this . name = name ; this . job = job ; this . sal = sal ; } } \u91cd\u5199 toString\u65b9\u6cd5 \uff0c\u6253\u5370\u5bf9\u8c61\u6216\u62fc\u63a5\u5bf9\u8c61\u65f6\uff0c\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684toString\u5f62\u5f0f package com.hsp.object ; public class toString { public static void main ( String [] args ) { Monster monster = new Monster ( \"\u5996\u602a\" , \"\u4fdd\u5b89\" , 1000 ); System . out . println ( monster . toString ()); //Monster{name='\u5996\u602a', job='\u4fdd\u5b89', sal=1000.0} } } class Monster { private String name ; private String job ; private double sal ; // \u91cd\u5199toString\u65b9\u6cd5 @Override public String toString () { return \"Monster{\" + \"name='\" + name + '\\'' + \", job='\" + job + '\\'' + \", sal=\" + sal + '}' ; } public Monster ( String name , String job , double sal ) { this . name = name ; this . job = job ; this . sal = sal ; } } \u5f53\u76f4\u63a5\u8f93\u51fa\u4e00\u4e2a\u5bf9\u8c61\u65f6\u5019\uff0c toString\u65b9\u6cd5 \u4f1a\u88ab\u9ed8\u8ba4\u7684\u8c03\u7528 package com.hsp.object ; public class toString { public static void main ( String [] args ) { Monster monster = new Monster ( \"\u5996\u602a\" , \"\u4fdd\u5b89\" , 1000 ); System . out . println ( monster ); } } class Monster { private String name ; private String job ; private double sal ; // \u91cd\u5199toString\u65b9\u6cd5 @Override public String toString () { return \"Monster{\" + \"name='\" + name + '\\'' + \", job='\" + job + '\\'' + \", sal=\" + sal + '}' ; } public Monster ( String name , String job , double sal ) { this . name = name ; this . job = job ; this . sal = sal ; } }","title":"toString\u65b9\u6cd5"},{"location":"Blogs/meowrain/java/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%AD%E7%BA%A7%EF%BC%89-java-mian-xiang-dui-xiang-ji-chu--zhong-ji-/#finalize","text":"\u5f53\u5783\u573e\u56de\u6536\u5668\u786e\u5b9a\u4e0d\u5b58\u5728\u5bf9\u8be5\u5bf9\u8c61\u7684\u66f4\u591a\u5f15\u7528\u65f6\uff0c\u7531\u5bf9\u8c61\u7684\u5783\u573e\u56de\u6536\u5668\u8c03\u7528\u6b64\u65b9\u6cd5 1.\u5f53\u5bf9\u8c61\u88ab\u56de\u6536\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684finalize\u65b9\u6cd5\u3002\u5b50\u7c7b\u53ef\u4ee5\u91cd\u5199\u8be5\u65b9\u6cd5\uff0c\u505a\u4e00\u4e9b\u91ca\u653e\u8d44\u6e90\u7684\u64cd\u4f5c 2.\u4ec0\u4e48\u65f6\u5019\u88ab\u56de\u6536\uff1a\u5f53\u67d0\u4e2a\u5bf9\u8c61\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5219jvm\u5c31\u8ba4\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4e00\u4e2a\u5783\u573e\u5bf9\u8c61\uff0c\u5c31\u4f1a\u7528\u5783\u573e\u56de\u6536\u673a\u5236\u6765\u9500\u6bc1\u8be5\u5bf9\u8c61\uff0c\u5728\u9500\u6bc1\u8be5\u5bf9\u8c61\u524d\uff0c\u4f1a\u5148\u8c03\u7528finalize\u65b9\u6cd5 3.\u5783\u573e\u56de\u6536\u673a\u5236\u7684\u8c03\u7528\uff0c\u662f\u7531\u7cfb\u7edf\u6765\u51b3\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u7531 System.gc() \u4e3b\u52a8\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236 \u5b9e\u9645\u5f00\u53d1\u4e2d\u57fa\u672c\u4e0d\u4f1a\u8fd0\u7528\uff0c\u5e94\u4ed8\u9762\u8bd5","title":"finalize()"},{"location":"Blogs/meowrain/java/springboot%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/","text":"package com.kob.backend.controller.pk ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; import java.util.HashMap ; import java.util.Map ; @RestController @RequestMapping ( \"/pk/\" ) public class BotInfoController { @RequestMapping ( \"getbotinfo\" ) public Map < String , String > getBotInfo (){ Map < String , String > bot1 = new HashMap <> (); bot1 . put ( \"name\" , \"meowrain\" ); bot1 . put ( \"rating\" , \"1500\" ); return bot1 ; } } \u5982\u4e0a","title":"Springboot\u8de8\u57df\u95ee\u9898"},{"location":"Blogs/meowrain/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/","text":"\u5237\u9898\u76ee\u5f55 #","title":"\u5237\u9898\u76ee\u5f55"},{"location":"Blogs/meowrain/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/#\u5237\u9898\u76ee\u5f55","text":"","title":"\u5237\u9898\u76ee\u5f55"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"DataStructure-learn note # Note # 1.1\u94fe\u8868 1.2\u6808 1.3\u961f\u5217","title":"DataStructure-learn note"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#datastructure-learn-note","text":"","title":"DataStructure-learn note"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#note","text":"1.1\u94fe\u8868 1.2\u6808 1.3\u961f\u5217","title":"Note"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/","text":"\u94fe\u8868 # \u7b2c\u4e00\u4e2a\u94fe\u8868\u7a0b\u5e8f # // \u7b2c\u4e00\u4e2a\u94fe\u8868\u7a0b\u5e8f #include <iostream> struct Node { int data ; Node * next ; }; int main () { Node * A = NULL ; // Node* temp = (Node*)malloc(sizeof(Node)); Node * temp = new Node (); ( * temp ). data = 200 ; ( * temp ). next = NULL ; A = temp ; std :: cout << A -> data << std :: endl ; delete temp ; return 0 ; } \u5728\u94fe\u8868\u4e2d\u63d2\u5165\u8282\u70b9 # \u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u8282\u70b9 # #include <iostream> // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53Node\uff0c\u8868\u793a\u94fe\u8868\u7684\u8282\u70b9 struct Node { int data ; // \u5b58\u50a8\u8282\u70b9\u7684\u6570\u636e Node * next ; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 }; int main () { Node * A = NULL ; // \u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\u7684\u6307\u9488\uff0c\u521d\u59cb\u503c\u4e3aNULL Node * temp = new Node (); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp -> data = 200 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a200 temp -> next = NULL ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3aNULL A = temp ; // \u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9 temp = new Node (); // \u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp -> data = 4 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a4 temp -> next = NULL ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3aNULL Node * temp1 = A ; // \u5b9a\u4e49\u4e00\u4e2a\u6307\u9488temp1\uff0c\u521d\u59cb\u503c\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9 // \u904d\u5386\u94fe\u8868\u4ee5\u5230\u8fbe\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u8282\u70b9 while ( temp1 -> next != NULL ) { temp1 = temp1 -> next ; // \u5c06temp1\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u8282\u70b9 } temp1 -> next = temp ; // \u5c06\u65b0\u8282\u70b9\u6dfb\u52a0\u5230\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u540e\u9762\uff0c\u5b9e\u73b0\u63d2\u5165\u64cd\u4f5c std :: cout << \"\u63d2\u5165\u6210\u529f\uff1b\u8f93\u51fa\u94fe\u8868\u5185\u5bb9\" << std :: endl ; // \u8f93\u51fa\u63d0\u793a\u4fe1\u606f while ( A != NULL ) // \u904d\u5386\u94fe\u8868\uff0c\u8f93\u51fa\u94fe\u8868\u6570\u636e { std :: cout << A -> data << std :: endl ; // \u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u6570\u636e A = A -> next ; // \u5c06\u6307\u9488A\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u7ee7\u7eed\u904d\u5386\u94fe\u8868 } delete temp ; delete temp1 ; return 0 ; } \u8fd9\u91cc\u7528\u7684\u662f\u5c3e\u63d2\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u6307\u9488temp1,\u7136\u540e\u8ba9temp1\u6307\u5411A\uff0c\u800cA\u6b64\u65f6\u5176\u5b9e\u5c31\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u770b\u5b83\u7684next\u6307\u5411\u7684\u662f\u4e0d\u662fNULL\uff0c\u7531\u4e0a\u9762\u7684\u56fe\u6211\u4eec\u77e5\u9053\uff0c\u7531\u4e8eA\u7684next\u6307\u5411\u7684\u662fNULL\uff0c\u6240\u4ee5\u76f4\u63a5\u9000\u51fa\u5faa\u73af\uff0c\u8ba9\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9\u3002 \u4e0b\u9762\u662f\u6765\u81ea\u6587\u5fc3\u4e00\u8a00\u7684\u7b54\u6848\uff1a \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53 Node\uff0c\u5b83\u6709\u4e24\u4e2a\u6210\u5458\u53d8\u91cf\uff1adata \u548c next\u3002\u5176\u4e2d\uff0cdata \u5b58\u50a8\u8282\u70b9\u7684\u6570\u636e\uff0cnext \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002 \u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 200\uff0c\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\u7684\u6307\u9488 A\uff0c\u5e76\u5c06 temp \u8d4b\u503c\u7ed9 A\uff0c\u5373\u8ba9 A \u6307\u5411\u65b0\u8282\u70b9\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u518d\u6b21\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 4\u3002\u7136\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488 temp1\uff0c\u5e76\u5c06 temp1 \u521d\u59cb\u5316\u4e3a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9 A\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u94fe\u8868\uff0c\u76f4\u5230\u5230\u8fbe\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06 temp1 \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002 \u5f53\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u5c06\u65b0\u8282\u70b9 temp \u6dfb\u52a0\u5230\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u540e\u9762\uff0c\u5373\u5c06\u5176\u8d4b\u503c\u7ed9 temp1->next\uff0c\u5b9e\u73b0\u63d2\u5165\u64cd\u4f5c\u3002 \u7136\u540e\uff0c\u6211\u4eec\u8f93\u51fa\u63d0\u793a\u4fe1\u606f \"\u63d2\u5165\u6210\u529f\uff1b\u8f93\u51fa\u94fe\u8868\u5185\u5bb9\"\uff0c\u5e76\u4f7f\u7528\u53e6\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u94fe\u8868\uff0c\u8f93\u51fa\u94fe\u8868\u4e2d\u7684\u6570\u636e\u3002 \u6700\u540e\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u524d\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u91ca\u653e\u94fe\u8868\u4e2d\u6240\u5206\u914d\u7684\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002\u53ef\u4ee5\u5728 main \u51fd\u6570\u7684\u6700\u540e\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u6765\u91ca\u653e\u5185\u5b58\uff1a delete temp ; // \u91ca\u653etemp\u8282\u70b9\u5360\u7528\u7684\u5185\u5b58 delete temp1 ; // \u91ca\u653etemp1\u8282\u70b9\u5360\u7528\u7684\u5185\u5b58 \u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u5728\u7a0b\u5e8f\u7ed3\u675f\u524d\u6b63\u786e\u91ca\u653e\u5206\u914d\u7684\u5185\u5b58\u4e86\u3002 \u8981\u6c42\uff1a\u7528\u6237\u9996\u5148\u8f93\u5165n\uff0c\u8868\u793a\u8f93\u5165\u51e0\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u4f9d\u6b21\u8f93\u5165n\u4e2a\u6570\u5b57x\uff0c\u7528Insert\u51fd\u6570\u5b58\u5165\u94fe\u8868\uff0c\u6700\u540e\u4f7f\u7528Print\u51fd\u6570\u6253\u5370\u51fa\u6765 #include <iostream> struct Node { int data ; Node * next ; }; Node * head = NULL ; void Insert ( int ); void Print (); int main ( void ) { int n ; std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u8981\u5b58\u7684\u6570\u5b57\u4e2a\u6570\uff1a\" << std :: endl ; std :: cin >> n ; std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u5b58\u7684\u6570\u5b57\uff1a \" << std :: endl ; for ( int i = 0 ; i < n ; i ++ ) { int x ; std :: cin >> x ; Insert ( x ); } Print (); return 0 ; } void Insert ( int x ) { Node * temp = new Node (); temp -> data = x ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print () { std :: cout << \"\u94fe\u8868\u5185\u5bb9\u5982\u4e0b\uff1b \" << std :: endl ; Node * curr = head ; while ( curr != NULL ) { std :: cout << curr -> data << \" \" ; curr = curr -> next ; } } \u5728\u94fe\u8868\u5934\u90e8\u63d2\u5165\u8282\u70b9 # \u901a\u8fc7\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5728\u94fe\u8868\u7684\u5934\u90e8\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u5e76\u4e14\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u7ba1\u7406\u94fe\u8868\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u6bd4\u5c3e\u63d2\u6cd5\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u904d\u5386\u6574\u4e2a\u94fe\u8868\u6765\u627e\u5230\u94fe\u8868\u7684\u5934\u90e8\u4f4d\u7f6e\u3002 \u5934\u63d2\u6cd5\u662f\u6307\u5728\u521b\u5efa\u94fe\u8868\u65f6\uff0c\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u94fe\u8868\u7684\u5934\u90e8\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u5c3e\u90e8\u4f4d\u7f6e\u3002\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8282\u70b9 temp1\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 2\uff0c\u7136\u540e\u5c06 temp1 \u8d4b\u503c\u7ed9 head\uff0c\u5373\u8ba9 head \u6307\u5411\u65b0\u8282\u70b9\u3002\u7136\u540e\u518d\u6b21\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8282\u70b9 temp1\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 1\uff0c\u7136\u540e\u5c06 temp1 \u7684 next \u6307\u5411\u539f\u6765\u7684\u5934\u8282\u70b9 head\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u5934\u63d2\u6cd5\u3002 #include <iostream> // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53Node\uff0c\u8868\u793a\u94fe\u8868\u7684\u8282\u70b9 struct Node { int data ; // \u5b58\u50a8\u8282\u70b9\u7684\u6570\u636e Node * next ; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 }; // \u5b9a\u4e49\u4e3b\u51fd\u6570 int main ( void ) { Node * head = NULL ; // \u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\u7684\u6307\u9488\uff0c\u521d\u59cb\u503c\u4e3aNULL Node * temp1 = new Node (); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp1 -> data = 2 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a2 temp1 -> next = NULL ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3aNULL head = temp1 ; // \u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9 temp1 = new Node (); // \u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp1 -> data = 1 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a1 temp1 -> next = head ; // \u5c06\u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u539f\u6765\u7684\u5934\u8282\u70b9head head = temp1 ; // \u5c06\u94fe\u8868\u7684\u5934\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9 temp1 = new Node (); // \u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp1 -> data = 0 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a0 temp1 -> next = head ; // \u5c06\u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u539f\u6765\u7684\u5934\u8282\u70b9head head = temp1 ; // \u5c06\u94fe\u8868\u7684\u5934\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9 std :: cout << head -> data << head -> next -> data << head -> next -> next -> data << std :: endl ; // \u8f93\u51fa\u94fe\u8868\u7684\u6570\u636e\uff0c\u4f9d\u6b21\u8f93\u51fa\u5934\u8282\u70b9\u3001\u7b2c\u4e8c\u4e2a\u8282\u70b9\u548c\u7b2c\u4e09\u4e2a\u8282\u70b9\u7684\u6570\u636e } \u73b0\u5728\u6211\u4eec\u6765\u7f16\u5199\u4e00\u4e2a\u80fd\u901a\u8fc7\u51fd\u6570\uff0c\u8ba9\u7528\u6237\u81ea\u5df1\u8f93\u5165\u5e76\u628a\u8f93\u5165\u7684\u6570\u636e\u5b58\u5165\u94fe\u8868\u7684\u7a0b\u5e8f\ud83d\ude0a \u8981\u6c42\uff1a\u7528\u6237\u9996\u5148\u8f93\u5165n\uff0c\u8868\u793a\u8f93\u5165\u51e0\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u4f9d\u6b21\u8f93\u5165n\u4e2a\u6570\u5b57x\uff0c\u7528Insert\u51fd\u6570\u5b58\u5165\u94fe\u8868\uff0c\u6700\u540e\u4f7f\u7528Print\u51fd\u6570\u6253\u5370\u51fa\u6765 #include <iostream> struct Node { int data ; Node * next ; }; void Insert ( int ); void Print (); Node * head = NULL ; int main ( void ) { std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u8981\u5b58\u7684\u6570\u5b57\u4e2a\u6570\uff1a\" << std :: endl ; int n ; std :: cin >> n ; int arr [ n + 1 ]; std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u5b58\u7684\u6570\u5b57\uff1a \" << std :: endl ; for ( int i = 1 ; i <= n ; i ++ ) { std :: cin >> arr [ i ]; } for ( int i = n ; i >= 1 ; i -- ) { Insert ( arr [ i ]); } Print (); return 0 ; } void Insert ( int x ) { Node * temp = new Node (); temp -> data = x ; temp -> next = head ; head = temp ; } void Print () { std :: cout << \"\u94fe\u8868\u5185\u5bb9\u5982\u4e0b\uff1b \" << std :: endl ; Node * cur = head ; while ( cur != NULL ){ std :: cout << cur -> data << \" \" ; cur = cur -> next ; } } \u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\uff0c\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u6570\u5b57\u4e2a\u6570\u548c\u6bcf\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u94fe\u8868\u4e2d\u3002\u901a\u8fc7\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u65b0\u63d2\u5165\u7684\u6570\u5b57\u4f1a\u51fa\u73b0\u5728\u94fe\u8868\u7684\u5f00\u5934\uff0c\u800c\u8f93\u51fa\u7684\u987a\u5e8f\u5c06\u4e0e\u8f93\u5165\u7684\u987a\u5e8f\u4e00\u81f4\u3002 \u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\u4e2a\u6570 n\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a n+1 \u7684\u6570\u7ec4 arr\uff0c\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\u3002\u7136\u540e\uff0c\u901a\u8fc7\u5faa\u73af\u4f9d\u6b21\u8bfb\u53d6\u6bcf\u4e2a\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u3002 \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u53e6\u4e00\u4e2a\u5faa\u73af\u4ece\u6570\u7ec4\u7684\u672b\u5c3e\u5f00\u59cb\u5012\u5e8f\u904d\u5386\uff0c\u4f9d\u6b21\u8c03\u7528 Insert \u51fd\u6570\uff0c\u5c06\u6bcf\u4e2a\u6570\u5b57\u63d2\u5165\u5230\u94fe\u8868\u7684\u672b\u5c3e\uff08\u4f7f\u7528\u5934\u63d2\u6cd5\uff09\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u63d2\u5165\u7684\u987a\u5e8f\u4e0e\u8f93\u5165\u7684\u987a\u5e8f\u4e00\u81f4\u3002 \u6700\u540e\uff0c\u8c03\u7528 Print \u51fd\u6570\u8f93\u51fa\u94fe\u8868\u4e2d\u7684\u6240\u6709\u6570\u636e\uff0c\u6309\u7167\u6bcf\u4e2a\u8282\u70b9\u7684\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\u3002 \u5728 Insert \u51fd\u6570\u4e2d\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9 temp\uff0c\u5e76\u5c06\u6307\u5b9a\u503c x \u5b58\u50a8\u5728\u65b0\u8282\u70b9\u7684\u6570\u636e\u6210\u5458\u4e2d\u3002\u7136\u540e\uff0c\u5c06\u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9 head\uff0c\u5e76\u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9 head\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5c06\u6307\u5b9a\u503c\u63d2\u5165\u5230\u94fe\u8868\u7684\u672b\u5c3e\uff08\u4f7f\u7528\u5934\u63d2\u6cd5\uff09\u3002 \u5728 Print \u51fd\u6570\u4e2d\uff0c\u4ece\u94fe\u8868\u7684\u5934\u8282\u70b9 head \u5f00\u59cb\u904d\u5386\uff0c\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6570\u636e\u6210\u5458\uff0c\u76f4\u5230\u94fe\u8868\u7684\u672b\u5c3e\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u6309\u7167\u8282\u70b9\u7684\u987a\u5e8f\u8f93\u51fa\u94fe\u8868\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002 \u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9 # \u60f3\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9\uff0c\u54b1\u4eec\u9996\u5148\u8981\u60f3\u660e\u767d\u4e00\u4e2a\u95ee\u9898\uff0c\u600e\u4e48\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\uff1f \u73b0\u5728\u54b1\u4eec\u5148\u6765\u60f3\u4e00\u4e0b\uff0c\u5728\u5934\u90e8\u63d2\u5165\u8282\u70b9\u8be5\u600e\u4e48\u505a\uff1f\u6ca1\u9519\uff0c\u5934\u63d2\u6cd5\uff0c\u8fd9\u6837\u5c31\u80fd\u5b9e\u73b0\u5728\u94fe\u8868\u5934\u90e8\u4e0d\u65ad\u63d2\u5165\u8282\u70b9\u7684\u529f\u80fd\u4e86\uff01 \u597d\u7684\uff0c\u65e2\u7136\u54b1\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5728\u5934\u90e8\u4e0d\u65ad\u63d2\u5165\u8282\u70b9\u4e86\uff0c\u90a3\u4e48\u5728\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5462\uff1f\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u7136\u540e\u7ed9\u5b83\u7684\u6570\u636e\u4f4d\u8d4b\u503c\uff0c\u7136\u540e\u8ba9\u5b83\u7684next\u6307\u9488\u6307\u5411\u5934\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u63a5\u7740\uff0c\u54b1\u4eec\u518d\u628a\u5934\u8282\u70b9\u7684next\u6307\u9488\uff0c\u6539\u6307\u5411\u8fd9\u4e2a\u65b0\u6307\u9488\uff0c\u54b1\u4eec\u7684\u76ee\u7684\u5c31\u8fbe\u5230\u4e86\uff01 \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u5462\uff0c\u540c\u7406\uff0c\u53ea\u9700\u8981\u8ba9\u65b0\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7b2c\u4e8c\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u7136\u540e\u8ba9\u7b2c\u4e8c\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u65b0\u8282\u70b9\u5c31\u5b9e\u73b0\u4e86\u5728\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u63d2\u5165\u4e86\uff01 \u597d\u7684\uff0c\u90a3\u95ee\u9898\u6765\u4e86\uff0c\u6211\u8981\u662f\u8fd8\u6ca1\u521b\u5efa\u524d\u9762\u7684\u8282\u70b9\uff0c\u5c31\u5728\u540e\u9762\u63d2\u5165\u8282\u70b9\uff0c\u8fdb\u884c\u8fd9\u79cd\u975e\u6cd5\u64cd\u4f5c\uff0c\u6211\u4eec\u600e\u4e48\u5904\u7406\uff1f \u662f\u4e0d\u662f\u53ea\u9700\u8981\u4e00\u4e2a\u6307\u9488\uff0c\u4ece\u5934\u5f00\u59cb\u904d\u5386\uff0c\u4ece\u5934\u5f80\u540e\u8d70n-1\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u662fNULL\uff0c\u90a3\u8bf4\u660e\u65b0\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u662fNULL\uff01\u5f88\u660e\u663e\u8fd9\u6837\u5c31\u4e0d\u80fd\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\u4e86\uff0c\u76f4\u63a5\u544a\u8bc9\u8fd0\u884c\u7a0b\u5e8f\u7684\u4eba\u4e0d\u80fd\u63d2\u5165\u5c31\u53ef\u4ee5\u4e86\uff01 #include <iostream> struct Node { int data ; Node * next ; }; Node * head = NULL ; void Insert ( int , int ); void Print (); int main () { std :: cout << \"\u63d2\u5165\u4f4d\u7f6e\uff1a \" << std :: endl ; int n ; std :: cin >> n ; std :: cout << \"\u63d2\u5165\u8282\u70b9\u6570\u636e\uff1a \" << std :: endl ; int x ; std :: cin >> x ; Insert ( n , x ); Print (); return 0 ; } void Insert ( int n , int x ) { if ( n == 1 ) { Node * temp = new Node (); temp -> data = x ; temp -> next = head ; head = temp ; return ; } Node * cur = head ; for ( int i = 1 ; i < n - 1 && cur != NULL ; i ++ ) { cur = cur -> next ; } if ( cur == NULL ) { std :: cout << \"Can not insert!\" << std :: endl ; return ; } Node * temp = new Node (); temp -> data = x ; temp -> next = cur -> next ; cur -> next = temp ; } void Print () { std :: cout << \"\u94fe\u8868\u5185\u5bb9\u5982\u4e0b\uff1a\" << std :: endl ; Node * curr = head ; while ( curr != NULL ) { std :: cout << curr -> data << \" \" ; curr = curr -> next ; } std :: cout << std :: endl ; } \u6211\u4eec\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u6210\u4e86\u5728\u94fe\u8868\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9\u7684\u529f\u80fd \u6211\u4eec\u9996\u5148\u6765\u770b Insert \u51fd\u6570\uff0cIneert\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570n\u7528\u6765\u63a5\u6536\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570x\u7528\u6765\u63a5\u6536\u63d2\u5165\u8282\u70b9\u7684\u6570\u636e\u5185\u5bb9 if ( n == 1 ) { Node * temp = new Node (); temp -> data = x ; temp -> next = head ; head = temp ; return ; } \u770b\u8fd9\u91cc\uff0c\u8fd9\u91cc\u662f\u5f53\u63d2\u5165\u4f4d\u7f6e\u4e3a1\u65f6\u5019\u8fdb\u884c\u7684\u63d2\u5165\u4ee3\u7801\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2atemp\u8282\u70b9\uff0c\u7136\u540e\u7ed9temp\u8282\u70b9\u7684\u6570\u636e\u8d4b\u503c\uff0c\u8ba9\u5b83\u7684next\u6307\u9488\u6307\u5411head\u8282\u70b9\uff0c\u6700\u540e\u8ba9head = temp\uff0c\u8fd9\u4e48\u8bf4\u4f60\u5e94\u8be5\u5f88\u719f\u6089\u4e86\uff0c\u8fd9\u5c31\u662f\u5934\u63d2\u6cd5\uff0c\u4e0d\u505c\u5f97\u5728\u5934\u90e8\u4e5f\u5c31\u662f\u94fe\u8868\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u63d2\u5165\u65b0\u8282\u70b9 Node * cur = head ; for ( int i = 1 ; i < n - 1 && cur != NULL ; i ++ ) { cur = cur -> next ; } \u770b\u8fd9\u91cc\uff0c\u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6307\u5411head\u7684\u6307\u9488\uff0c\u7136\u540e\u8fdb\u884c\u904d\u5386\uff0c\u76f4\u5230cur\u6307\u5411\u4e86\u8981\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u54b1\u4eec\u8981\u7528\u5230\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u554a\uff01\u662f\u5427\uff1f if ( cur == NULL ) { std :: cout << \"Can not insert!\" << std :: endl ; return ; } \u63a5\u4e0b\u6765\u54b1\u4eec\u5224\u65ad\u4e00\u624b\uff0c\u9632\u6b62\u5728\u975e\u6cd5\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165 Node * temp = new Node (); temp -> data = x ; temp -> next = cur -> next ; cur -> next = temp ; \u8981\u662f\u4e0d\u662f\u5728\u5934\u90e8\u63d2\u5165\uff0c\u4e5f\u4e0d\u662f\u975e\u6cd5\u63d2\u5165\uff0c\u90a3\u54b1\u4eec\u5c31\u662f\u6309\u7167\u6b63\u5e38\u6d41\u7a0b\u6765\u4e86\uff01 \u6700\u540e\u54b1\u4eec\u8fdb\u884c\u64cd\u4f5c\uff0c\u8ba9\u8981\u63d2\u5165\u7684\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u6700\u540e\u628a\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u63d2\u5165\u7684\u8282\u70b9\uff0c\u5b9e\u73b0\u65b0\u8282\u70b9\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u63d2\u5165 \u5728\u4efb\u610f\u4f4d\u7f6e\u5220\u9664\u8282\u70b9 # \u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\uff0c\u5305\u62ec\u5411\u94fe\u8868\u4e2d\u63d2\u5165\u8282\u70b9\u3001\u6253\u5370\u94fe\u8868\u7684\u6570\u636e\u4ee5\u53ca\u5220\u9664\u94fe\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u8282\u70b9\u7b49\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f\u5bf9\u4e8e\u8fd9\u6bb5\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a \u9996\u5148\uff0c\u5728\u4ee3\u7801\u5f00\u5934\u5b9a\u4e49\u4e86\u4e00\u4e2a Node \u7ed3\u6784\u4f53\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u6574\u578b\u6570\u636e\u6210\u5458 data \u548c\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u6210\u5458 next\u3002\u6b64\u5916\uff0c\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a head \u6307\u9488\uff0c\u8868\u793a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5b83\u7684\u521d\u59cb\u503c\u4e3a NULL\uff0c\u8868\u793a\u94fe\u8868\u4e3a\u7a7a\u3002 \u7136\u540e\uff0c\u5b9a\u4e49\u4e86\u4e09\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u94fe\u8868\u7684\u64cd\u4f5c\uff1a Insert(int x) \u51fd\u6570\uff1a\u8be5\u51fd\u6570\u7528\u6765\u5411\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u65b0\u8282\u70b9\u7684\u6570\u636e\u503c\u4e3a x\u3002\u5982\u679c\u94fe\u8868\u4e3a\u7a7a\uff0c\u5219\u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5426\u5219\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u94fe\u8868\u7684\u672b\u5c3e\u3002 Print() \u51fd\u6570\uff1a\u8be5\u51fd\u6570\u7528\u6765\u6253\u5370\u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u636e\u503c\u3002 del_element(int n) \u51fd\u6570\uff1a\u8be5\u51fd\u6570\u7528\u6765\u5220\u9664\u94fe\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u8282\u70b9\uff0c\u4f4d\u7f6e\u7531\u53c2\u6570 n \u6307\u5b9a\u3002\u82e5\u94fe\u8868\u4e3a\u7a7a\u6216\u8005 n \u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e 0\uff0c\u5219\u65e0\u6cd5\u5220\u9664\u8282\u70b9\uff1b\u82e5 n \u7684\u503c\u4e3a 1\uff0c\u5219\u5220\u9664\u94fe\u8868\u7684\u5934\u8282\u70b9\uff1b\u5426\u5219\uff0c\u904d\u5386\u94fe\u8868\uff0c\u627e\u5230\u5f85\u5220\u9664\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\uff0c\u7136\u540e\u5c06\u524d\u9a71\u8282\u70b9\u7684\u6307\u9488\u6307\u5411\u5f85\u5220\u9664\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u5373\u53ef\u3002 \u6700\u540e\uff0c\u5728 main() \u51fd\u6570\u4e2d\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u94fe\u8868\uff0c\u5e76\u5411\u5176\u4e2d\u63d2\u5165\u4e86\u4e00\u4e9b\u8282\u70b9\uff0c\u7136\u540e\u6253\u5370\u4e86\u94fe\u8868\u7684\u6570\u636e\uff0c\u63a5\u7740\u5220\u9664\u4e86\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u518d\u6b21\u6253\u5370\u94fe\u8868\u7684\u6570\u636e\uff0c\u6700\u540e\u7ed3\u675f\u7a0b\u5e8f\u3002 #include <iostream> struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int ); void Print (); void del_element ( int ); int main ( void ) { head = NULL ; // empty list Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); Print (); del_element ( 6 ); Print (); return 0 ; } void Insert ( int x ) { Node * temp = new Node (); temp -> data = x ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print () { std :: cout << \"\u94fe\u8868\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a\" << std :: endl ; Node * curr = head ; while ( curr != NULL ) { std :: cout << curr -> data << \" \" ; curr = curr -> next ; } std :: cout << std :: endl ; } void del_element ( int n ) { if ( head == NULL ) { std :: cout << \"\u6ca1\u6709\u8981\u5220\u9664\u7684\u8282\u70b9\" << std :: endl ; return ; } if ( n == 1 ) { head = head -> next ; return ; } Node * cur = head ; for ( int i = 1 ; i < n - 1 && cur -> next != NULL ; i ++ ) { cur = cur -> next ; } if ( cur -> next == NULL ) { std :: cout << \"\u5220\u9664\u4f4d\u7f6e\u8d85\u51fa\u8303\u56f4~\" << std :: endl ; return ; } cur -> next = cur -> next -> next ; } \u7ffb\u8f6c\u94fe\u8868(\u8fed\u4ee3\u65b9\u5f0f\u5b9e\u73b0) # \u60f3\u5b9e\u73b0\u7ffb\u8f6c\u94fe\u8868\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u601d\u8003\u4e00\u4e0b \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u4e00\u4e0b\u7ffb\u8f6c\u94fe\u8868\u7684\u57fa\u672c\u601d\u8def\uff0c\u5c31\u662f\u4ece\u94fe\u8868\u5934\u5f00\u59cb\uff0c\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684 next \u6307\u9488\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u7ec8\u6574\u4e2a\u94fe\u8868\u5c31\u88ab\u7ffb\u8f6c\u4e86\u3002 \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u9010\u6b65\u5206\u6790\u7684 Reverse() \u51fd\u6570\uff1a void Reverse () { if ( head == NULL || head -> next == NULL ) { cout << \"\u5143\u7d20\u6570\u91cf\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ffb\u8f6c!\" << endl ; return ; } Node * cur , * prev , * next ; cur = head ; prev = NULL ; while ( cur != NULL ) { next = cur -> next ; cur -> next = prev ; prev = cur ; cur = next ; } head = prev ; } \u9996\u5148\uff0c\u51fd\u6570\u5224\u65ad\u94fe\u8868\u7684\u5934\u90e8\u662f\u5426\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u65e0\u9700\u8fdb\u884c\u7ffb\u8f6c\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\u8fd9\u4e00\u6b65\u7684\u5224\u65ad\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u94fe\u8868\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u7ffb\u8f6c\u94fe\u8868\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002 \u63a5\u7740\uff0c\u51fd\u6570\u5b9a\u4e49\u4e86\u4e09\u4e2a\u6307\u9488\u53d8\u91cf cur\u3001prev\u3001next\uff0c\u5b83\u4eec\u5206\u522b\u6307\u5411\u5f53\u524d\u8282\u70b9\u3001\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u7684\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u5176\u4e2d\uff0ccur \u53d8\u91cf\u521d\u59cb\u5316\u4e3a\u94fe\u8868\u7684\u5934\u90e8\uff0cprev \u53d8\u91cf\u521d\u59cb\u5316\u4e3a NULL\u3002 \u8fdb\u5165 while \u5faa\u73af\uff0c\u6bcf\u6b21\u5c06 next \u6307\u5411\u5f53\u524d\u8282\u70b9 cur \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5c06 cur \u7684 next \u6307\u9488\u6307\u5411 prev\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5f53\u524d\u8282\u70b9\u7684\u7ffb\u8f6c\u3002\u63a5\u7740\uff0c\u5c06 prev \u6307\u5411\u5f53\u524d\u8282\u70b9 cur\uff0ccur \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 next\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002\u8fd9\u6837\u4e0d\u65ad\u5730\u6267\u884c\uff0c\u76f4\u5230 cur \u6307\u5411\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u6574\u4e2a\u94fe\u8868\u5c31\u88ab\u7ffb\u8f6c\u4e86\u3002 \u6700\u540e\uff0c\u5c06\u94fe\u8868\u7684\u5934\u90e8\u6307\u5411\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u5934\u90e8 prev\uff0c\u5b8c\u6210\u94fe\u8868\u7684\u7ffb\u8f6c\u64cd\u4f5c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u60a8\u7684 Reverse() \u51fd\u6570\u91c7\u7528\u4e86\u8fed\u4ee3\u7684\u65b9\u5f0f\u7ffb\u8f6c\u94fe\u8868\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\uff0c\u6bcf\u6b21\u5c06\u5f53\u524d\u8282\u70b9\u7684 next \u6307\u9488\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u7ec8\u5b8c\u6210\u6574\u4e2a\u94fe\u8868\u7684\u7ffb\u8f6c\u3002 \u5b8c\u6574\u4ee3\u7801(ReverseLinklist)\uff1a #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int num ); void Print (); void Reverse (); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); Print (); cout << \"Now we will reverse this linklist!\" << endl ; Reverse (); Print (); } void Insert ( int num ) { Node * temp = new Node (); temp -> data = num ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * cur = head ; while ( cur -> next != NULL ) { cur = cur -> next ; } cur -> next = temp ; } } void Print () { cout << \"The content in linklist:\" << endl ; Node * cur = head ; while ( cur != NULL ) { cout << cur -> data << \" \" ; cur = cur -> next ; } cout << endl ; } void Reverse () { if ( head == NULL || head -> next == NULL ) { cout << \"\u5143\u7d20\u6570\u91cf\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ffb\u8f6c!\" << endl ; return ; } Node * cur , * prev , * next ; cur = head ; prev = NULL ; while ( cur != NULL ) { next = cur -> next ; cur -> next = prev ; prev = cur ; cur = next ; } head = prev ; } \u7ffb\u8f6c\u94fe\u8868(\u9012\u5f52\u65b9\u5f0f\u5b9e\u73b0) # #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int ); void Print ( Node * p ); void Reverse_LinkList ( Node * p ); int main ( void ) { head = NULL ; Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); cout << \"Normal LinkList:\" ; Print ( head ); Reverse_LinkList ( head ); cout << \"Reverse LinkList:\" ; Print ( head ); return 0 ; } void Insert ( int data ) { Node * temp = new Node (); temp -> data = data ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * current = head ; while ( current -> next != NULL ) { current = current -> next ; } current -> next = temp ; } } void Print ( Node * p ){ if ( p == NULL ) { cout << endl ; return ; } cout << p -> data << \" \" ; Print ( p -> next ); } void Reverse_LinkList ( Node * p ) { if ( p -> next == NULL ) { head = p ; return ; } Reverse_LinkList ( p -> next ); Node * q = p -> next ; q -> next = p ; p -> next = NULL ; } \u91c7\u7528\u9012\u5f52\u65b9\u6cd5\u6253\u5370\u94fe\u8868 # \u60f3\u4e00\u60f3\uff0c\u600e\u4e48\u7528\u9012\u5f52\u65b9\u6cd5\u6253\u5370\u94fe\u8868\u5462\uff1f \u9996\u5148\u6211\u4eec\u63a5\u6536\u4e00\u4e2a\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u5934\u6307\u9488(head),\u63a5\u4e0b\u6765\u54b1\u4eec\u5224\u65ad\u4e00\u4e0b\u5934\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u662f\u4e0d\u662fNULL\uff0c\u5982\u679c\u662fNULL\uff0c\u90a3\u5c31\u6ca1\u4ec0\u4e48\u597d\u6253\u5370\u7684\u4e86\uff0c\u76f4\u63a5return void Print ( Node * p ){ //recursion if ( p == NULL ) return ; } \u63a5\u4e0b\u6765\u5462\uff0c\u5982\u679c\u8fd9\u4e2a\u5934\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u4e0d\u662fNULL\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6253\u5370\u4e86 \u76f4\u63a5cout << p->data << endl; void Print ( Node * p ) { if ( p == NULL ) return ; cout << p -> data << \" \" ; } \u6700\u540e\u54b1\u4eec\u518d\u628a\u5934\u6307\u9488\u6307\u5411\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4f20\u5165\u54b1\u4eec\u7684\u9012\u5f52\u51fd\u6570\uff0c\u8fd9\u6837\u4e0d\u5c31\u80fd\u7ee7\u7eed\u6253\u5370\u4e86\uff1f\u76f4\u5230\u4f20\u5165\u7684\u53c2\u6570p\u6307\u5411NULL,\u9000\u51fa\u51fd\u6570\uff0c\u4e5f\u5c31\u5b8c\u6210\u4e86\u5bf9\u94fe\u8868\u7684\u6253\u5370 void Print ( Node * p ) { if ( p == NULL ) return ; cout << p -> data << \" \" ; Print ( p -> next ); } \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a /* \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6253\u5370\u94fe\u8868 */ #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Print ( Node * p ); void Insert ( int data ); void ReversePrint ( Node * p ); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); cout << \"Normal Print the Linklist: \" << endl ; Print ( head ); cout << endl ; return 0 ; } void Insert ( int data ){ Node * temp = new Node (); temp -> data = data ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print ( Node * p ){ //recursion if ( p == NULL ) return ; cout << p -> data << \" \" ; Print ( p -> next ); //Recursive call } \u91c7\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u7ffb\u8f6c\u6253\u5370\u94fe\u8868 # \u8fd9\u4e2a\u5176\u5b9e\u5f88\u7b80\u5355\uff1a void ReversePrint ( Node * p ){ //recursion if ( p == NULL ) return ; ReversePrint ( p -> next ); //Recursive call cout << p -> data << \" \" ; } \u53ea\u9700\u8981\u5148\u8fdb\u884c\u9012\u5f52\uff0c\u6839\u636e\u9012\u5f52\u539f\u7406\uff0c\u5f00\u59cb\u7684\u8282\u70b9\u88ab\u538b\u5165\u6808\u5e95\uff0c\u6700\u540e\u7684\u5728\u6808\u9876\uff0c\u90a3\u4e48\u5f39\u6808\u7684\u65f6\u5019\uff0c\u5c31\u662f\u4ece\u6808\u9876\u5f00\u59cb\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u7ffb\u8f6c\u6253\u5370\u94fe\u8868\u4e86 \u5b8c\u6574\u4ee3\u7801\uff1a /* \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6253\u5370\u94fe\u8868 */ #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Print ( Node * p ); void Insert ( int data ); void ReversePrint ( Node * p ); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); cout << \"Normal Print the Linklist: \" << endl ; Print ( head ); cout << endl ; cout << \"Reverse Print the Linklist: \" << endl ; ReversePrint ( head ); return 0 ; } void Insert ( int data ){ Node * temp = new Node (); temp -> data = data ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print ( Node * p ){ //recursion if ( p == NULL ) return ; cout << p -> data << \" \" ; Print ( p -> next ); //Recursive call } void ReversePrint ( Node * p ){ //recursion if ( p == NULL ) return ; ReversePrint ( p -> next ); //Recursive call cout << p -> data << \" \" ; } \u8fd0\u884c\u7ed3\u679c\uff1a \u53cc\u5411\u6307\u9488 # #include <iostream> struct Node { int data ; Node * prev ; Node * next ; }; Node * head ; Node * GetNewNode ( int ); void InsertAtHead ( int ); void InsertAtTail ( int ); void Print (); void ReversePrint (); int main ( void ) { head = NULL ; InsertAtHead ( 2 ); InsertAtHead ( 4 ); InsertAtHead ( 6 ); InsertAtHead ( 8 ); Print (); std :: cout << std :: endl ; ReversePrint (); head = NULL ; std :: cout << std :: endl ; InsertAtTail ( 2 ); InsertAtTail ( 4 ); InsertAtTail ( 6 ); InsertAtTail ( 8 ); Print (); std :: cout << std :: endl ; ReversePrint (); return 0 ; } Node * GetNewNode ( int x ) { Node * newNode = new Node (); newNode -> prev = NULL ; newNode -> next = NULL ; newNode -> data = x ; return newNode ; } void InsertAtHead ( int x ) { Node * newNode = GetNewNode ( x ); if ( head == NULL ) { head = newNode ; return ; } head -> prev = newNode ; newNode -> next = head ; head = newNode ; } void InsertAtTail ( int x ) { Node * newNode = GetNewNode ( x ); if ( head == NULL ) { head = newNode ; return ; } Node * temp = head ; while ( temp -> next != NULL ) { temp = temp -> next ; } temp -> next = newNode ; newNode -> prev = temp ; } void Print () { std :: cout << \"The content of LinkList: \" << std :: endl ; Node * cur = head ; while ( cur != NULL ) { std :: cout << cur -> data << \" \" ; cur = cur -> next ; } } void ReversePrint () { std :: cout << \"The Reverse content of LinkList: \" << std :: endl ; Node * cur = head ; if ( cur == NULL ) return ; while ( cur -> next != NULL ) { cur = cur -> next ; } while ( cur != NULL ) { std :: cout << cur -> data << \" \" ; cur = cur -> prev ; } }","title":"\u94fe\u8868"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u94fe\u8868","text":"","title":"\u94fe\u8868"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u7b2c\u4e00\u4e2a\u94fe\u8868\u7a0b\u5e8f","text":"// \u7b2c\u4e00\u4e2a\u94fe\u8868\u7a0b\u5e8f #include <iostream> struct Node { int data ; Node * next ; }; int main () { Node * A = NULL ; // Node* temp = (Node*)malloc(sizeof(Node)); Node * temp = new Node (); ( * temp ). data = 200 ; ( * temp ). next = NULL ; A = temp ; std :: cout << A -> data << std :: endl ; delete temp ; return 0 ; }","title":"\u7b2c\u4e00\u4e2a\u94fe\u8868\u7a0b\u5e8f"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u8282\u70b9","text":"","title":"\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u8282\u70b9"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u8282\u70b9","text":"#include <iostream> // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53Node\uff0c\u8868\u793a\u94fe\u8868\u7684\u8282\u70b9 struct Node { int data ; // \u5b58\u50a8\u8282\u70b9\u7684\u6570\u636e Node * next ; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 }; int main () { Node * A = NULL ; // \u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\u7684\u6307\u9488\uff0c\u521d\u59cb\u503c\u4e3aNULL Node * temp = new Node (); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp -> data = 200 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a200 temp -> next = NULL ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3aNULL A = temp ; // \u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9 temp = new Node (); // \u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp -> data = 4 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a4 temp -> next = NULL ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3aNULL Node * temp1 = A ; // \u5b9a\u4e49\u4e00\u4e2a\u6307\u9488temp1\uff0c\u521d\u59cb\u503c\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9 // \u904d\u5386\u94fe\u8868\u4ee5\u5230\u8fbe\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u8282\u70b9 while ( temp1 -> next != NULL ) { temp1 = temp1 -> next ; // \u5c06temp1\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u8282\u70b9 } temp1 -> next = temp ; // \u5c06\u65b0\u8282\u70b9\u6dfb\u52a0\u5230\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u540e\u9762\uff0c\u5b9e\u73b0\u63d2\u5165\u64cd\u4f5c std :: cout << \"\u63d2\u5165\u6210\u529f\uff1b\u8f93\u51fa\u94fe\u8868\u5185\u5bb9\" << std :: endl ; // \u8f93\u51fa\u63d0\u793a\u4fe1\u606f while ( A != NULL ) // \u904d\u5386\u94fe\u8868\uff0c\u8f93\u51fa\u94fe\u8868\u6570\u636e { std :: cout << A -> data << std :: endl ; // \u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u6570\u636e A = A -> next ; // \u5c06\u6307\u9488A\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u7ee7\u7eed\u904d\u5386\u94fe\u8868 } delete temp ; delete temp1 ; return 0 ; } \u8fd9\u91cc\u7528\u7684\u662f\u5c3e\u63d2\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u6307\u9488temp1,\u7136\u540e\u8ba9temp1\u6307\u5411A\uff0c\u800cA\u6b64\u65f6\u5176\u5b9e\u5c31\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u770b\u5b83\u7684next\u6307\u5411\u7684\u662f\u4e0d\u662fNULL\uff0c\u7531\u4e0a\u9762\u7684\u56fe\u6211\u4eec\u77e5\u9053\uff0c\u7531\u4e8eA\u7684next\u6307\u5411\u7684\u662fNULL\uff0c\u6240\u4ee5\u76f4\u63a5\u9000\u51fa\u5faa\u73af\uff0c\u8ba9\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9\u3002 \u4e0b\u9762\u662f\u6765\u81ea\u6587\u5fc3\u4e00\u8a00\u7684\u7b54\u6848\uff1a \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53 Node\uff0c\u5b83\u6709\u4e24\u4e2a\u6210\u5458\u53d8\u91cf\uff1adata \u548c next\u3002\u5176\u4e2d\uff0cdata \u5b58\u50a8\u8282\u70b9\u7684\u6570\u636e\uff0cnext \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002 \u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 200\uff0c\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\u7684\u6307\u9488 A\uff0c\u5e76\u5c06 temp \u8d4b\u503c\u7ed9 A\uff0c\u5373\u8ba9 A \u6307\u5411\u65b0\u8282\u70b9\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u518d\u6b21\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 4\u3002\u7136\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488 temp1\uff0c\u5e76\u5c06 temp1 \u521d\u59cb\u5316\u4e3a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9 A\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u94fe\u8868\uff0c\u76f4\u5230\u5230\u8fbe\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06 temp1 \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002 \u5f53\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u5c06\u65b0\u8282\u70b9 temp \u6dfb\u52a0\u5230\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u540e\u9762\uff0c\u5373\u5c06\u5176\u8d4b\u503c\u7ed9 temp1->next\uff0c\u5b9e\u73b0\u63d2\u5165\u64cd\u4f5c\u3002 \u7136\u540e\uff0c\u6211\u4eec\u8f93\u51fa\u63d0\u793a\u4fe1\u606f \"\u63d2\u5165\u6210\u529f\uff1b\u8f93\u51fa\u94fe\u8868\u5185\u5bb9\"\uff0c\u5e76\u4f7f\u7528\u53e6\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u94fe\u8868\uff0c\u8f93\u51fa\u94fe\u8868\u4e2d\u7684\u6570\u636e\u3002 \u6700\u540e\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u524d\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u91ca\u653e\u94fe\u8868\u4e2d\u6240\u5206\u914d\u7684\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002\u53ef\u4ee5\u5728 main \u51fd\u6570\u7684\u6700\u540e\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u6765\u91ca\u653e\u5185\u5b58\uff1a delete temp ; // \u91ca\u653etemp\u8282\u70b9\u5360\u7528\u7684\u5185\u5b58 delete temp1 ; // \u91ca\u653etemp1\u8282\u70b9\u5360\u7528\u7684\u5185\u5b58 \u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u5728\u7a0b\u5e8f\u7ed3\u675f\u524d\u6b63\u786e\u91ca\u653e\u5206\u914d\u7684\u5185\u5b58\u4e86\u3002 \u8981\u6c42\uff1a\u7528\u6237\u9996\u5148\u8f93\u5165n\uff0c\u8868\u793a\u8f93\u5165\u51e0\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u4f9d\u6b21\u8f93\u5165n\u4e2a\u6570\u5b57x\uff0c\u7528Insert\u51fd\u6570\u5b58\u5165\u94fe\u8868\uff0c\u6700\u540e\u4f7f\u7528Print\u51fd\u6570\u6253\u5370\u51fa\u6765 #include <iostream> struct Node { int data ; Node * next ; }; Node * head = NULL ; void Insert ( int ); void Print (); int main ( void ) { int n ; std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u8981\u5b58\u7684\u6570\u5b57\u4e2a\u6570\uff1a\" << std :: endl ; std :: cin >> n ; std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u5b58\u7684\u6570\u5b57\uff1a \" << std :: endl ; for ( int i = 0 ; i < n ; i ++ ) { int x ; std :: cin >> x ; Insert ( x ); } Print (); return 0 ; } void Insert ( int x ) { Node * temp = new Node (); temp -> data = x ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print () { std :: cout << \"\u94fe\u8868\u5185\u5bb9\u5982\u4e0b\uff1b \" << std :: endl ; Node * curr = head ; while ( curr != NULL ) { std :: cout << curr -> data << \" \" ; curr = curr -> next ; } }","title":"\u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u8282\u70b9"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u5728\u94fe\u8868\u5934\u90e8\u63d2\u5165\u8282\u70b9","text":"\u901a\u8fc7\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5728\u94fe\u8868\u7684\u5934\u90e8\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u5e76\u4e14\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u7ba1\u7406\u94fe\u8868\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u6bd4\u5c3e\u63d2\u6cd5\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u904d\u5386\u6574\u4e2a\u94fe\u8868\u6765\u627e\u5230\u94fe\u8868\u7684\u5934\u90e8\u4f4d\u7f6e\u3002 \u5934\u63d2\u6cd5\u662f\u6307\u5728\u521b\u5efa\u94fe\u8868\u65f6\uff0c\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u94fe\u8868\u7684\u5934\u90e8\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u5c3e\u90e8\u4f4d\u7f6e\u3002\u5728\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8282\u70b9 temp1\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 2\uff0c\u7136\u540e\u5c06 temp1 \u8d4b\u503c\u7ed9 head\uff0c\u5373\u8ba9 head \u6307\u5411\u65b0\u8282\u70b9\u3002\u7136\u540e\u518d\u6b21\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8282\u70b9 temp1\uff0c\u5e76\u5c06\u5176\u6570\u636e\u8bbe\u7f6e\u4e3a 1\uff0c\u7136\u540e\u5c06 temp1 \u7684 next \u6307\u5411\u539f\u6765\u7684\u5934\u8282\u70b9 head\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u5934\u63d2\u6cd5\u3002 #include <iostream> // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53Node\uff0c\u8868\u793a\u94fe\u8868\u7684\u8282\u70b9 struct Node { int data ; // \u5b58\u50a8\u8282\u70b9\u7684\u6570\u636e Node * next ; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 }; // \u5b9a\u4e49\u4e3b\u51fd\u6570 int main ( void ) { Node * head = NULL ; // \u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\u7684\u6307\u9488\uff0c\u521d\u59cb\u503c\u4e3aNULL Node * temp1 = new Node (); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp1 -> data = 2 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a2 temp1 -> next = NULL ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e3aNULL head = temp1 ; // \u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9 temp1 = new Node (); // \u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp1 -> data = 1 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a1 temp1 -> next = head ; // \u5c06\u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u539f\u6765\u7684\u5934\u8282\u70b9head head = temp1 ; // \u5c06\u94fe\u8868\u7684\u5934\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9 temp1 = new Node (); // \u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 temp1 -> data = 0 ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e\u4e3a0 temp1 -> next = head ; // \u5c06\u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u539f\u6765\u7684\u5934\u8282\u70b9head head = temp1 ; // \u5c06\u94fe\u8868\u7684\u5934\u8282\u70b9\u6307\u5411\u65b0\u8282\u70b9 std :: cout << head -> data << head -> next -> data << head -> next -> next -> data << std :: endl ; // \u8f93\u51fa\u94fe\u8868\u7684\u6570\u636e\uff0c\u4f9d\u6b21\u8f93\u51fa\u5934\u8282\u70b9\u3001\u7b2c\u4e8c\u4e2a\u8282\u70b9\u548c\u7b2c\u4e09\u4e2a\u8282\u70b9\u7684\u6570\u636e } \u73b0\u5728\u6211\u4eec\u6765\u7f16\u5199\u4e00\u4e2a\u80fd\u901a\u8fc7\u51fd\u6570\uff0c\u8ba9\u7528\u6237\u81ea\u5df1\u8f93\u5165\u5e76\u628a\u8f93\u5165\u7684\u6570\u636e\u5b58\u5165\u94fe\u8868\u7684\u7a0b\u5e8f\ud83d\ude0a \u8981\u6c42\uff1a\u7528\u6237\u9996\u5148\u8f93\u5165n\uff0c\u8868\u793a\u8f93\u5165\u51e0\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u4f9d\u6b21\u8f93\u5165n\u4e2a\u6570\u5b57x\uff0c\u7528Insert\u51fd\u6570\u5b58\u5165\u94fe\u8868\uff0c\u6700\u540e\u4f7f\u7528Print\u51fd\u6570\u6253\u5370\u51fa\u6765 #include <iostream> struct Node { int data ; Node * next ; }; void Insert ( int ); void Print (); Node * head = NULL ; int main ( void ) { std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u8981\u5b58\u7684\u6570\u5b57\u4e2a\u6570\uff1a\" << std :: endl ; int n ; std :: cin >> n ; int arr [ n + 1 ]; std :: cout << \"\u8bf7\u8f93\u5165\u4f60\u5b58\u7684\u6570\u5b57\uff1a \" << std :: endl ; for ( int i = 1 ; i <= n ; i ++ ) { std :: cin >> arr [ i ]; } for ( int i = n ; i >= 1 ; i -- ) { Insert ( arr [ i ]); } Print (); return 0 ; } void Insert ( int x ) { Node * temp = new Node (); temp -> data = x ; temp -> next = head ; head = temp ; } void Print () { std :: cout << \"\u94fe\u8868\u5185\u5bb9\u5982\u4e0b\uff1b \" << std :: endl ; Node * cur = head ; while ( cur != NULL ){ std :: cout << cur -> data << \" \" ; cur = cur -> next ; } } \u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\uff0c\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u6570\u5b57\u4e2a\u6570\u548c\u6bcf\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u94fe\u8868\u4e2d\u3002\u901a\u8fc7\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u65b0\u63d2\u5165\u7684\u6570\u5b57\u4f1a\u51fa\u73b0\u5728\u94fe\u8868\u7684\u5f00\u5934\uff0c\u800c\u8f93\u51fa\u7684\u987a\u5e8f\u5c06\u4e0e\u8f93\u5165\u7684\u987a\u5e8f\u4e00\u81f4\u3002 \u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\u4e2a\u6570 n\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a n+1 \u7684\u6570\u7ec4 arr\uff0c\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\u3002\u7136\u540e\uff0c\u901a\u8fc7\u5faa\u73af\u4f9d\u6b21\u8bfb\u53d6\u6bcf\u4e2a\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u3002 \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u53e6\u4e00\u4e2a\u5faa\u73af\u4ece\u6570\u7ec4\u7684\u672b\u5c3e\u5f00\u59cb\u5012\u5e8f\u904d\u5386\uff0c\u4f9d\u6b21\u8c03\u7528 Insert \u51fd\u6570\uff0c\u5c06\u6bcf\u4e2a\u6570\u5b57\u63d2\u5165\u5230\u94fe\u8868\u7684\u672b\u5c3e\uff08\u4f7f\u7528\u5934\u63d2\u6cd5\uff09\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u63d2\u5165\u7684\u987a\u5e8f\u4e0e\u8f93\u5165\u7684\u987a\u5e8f\u4e00\u81f4\u3002 \u6700\u540e\uff0c\u8c03\u7528 Print \u51fd\u6570\u8f93\u51fa\u94fe\u8868\u4e2d\u7684\u6240\u6709\u6570\u636e\uff0c\u6309\u7167\u6bcf\u4e2a\u8282\u70b9\u7684\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\u3002 \u5728 Insert \u51fd\u6570\u4e2d\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9 temp\uff0c\u5e76\u5c06\u6307\u5b9a\u503c x \u5b58\u50a8\u5728\u65b0\u8282\u70b9\u7684\u6570\u636e\u6210\u5458\u4e2d\u3002\u7136\u540e\uff0c\u5c06\u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9 head\uff0c\u5e76\u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9 head\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5c06\u6307\u5b9a\u503c\u63d2\u5165\u5230\u94fe\u8868\u7684\u672b\u5c3e\uff08\u4f7f\u7528\u5934\u63d2\u6cd5\uff09\u3002 \u5728 Print \u51fd\u6570\u4e2d\uff0c\u4ece\u94fe\u8868\u7684\u5934\u8282\u70b9 head \u5f00\u59cb\u904d\u5386\uff0c\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u6570\u636e\u6210\u5458\uff0c\u76f4\u5230\u94fe\u8868\u7684\u672b\u5c3e\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u6309\u7167\u8282\u70b9\u7684\u987a\u5e8f\u8f93\u51fa\u94fe\u8868\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002","title":"\u5728\u94fe\u8868\u5934\u90e8\u63d2\u5165\u8282\u70b9"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9","text":"\u60f3\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9\uff0c\u54b1\u4eec\u9996\u5148\u8981\u60f3\u660e\u767d\u4e00\u4e2a\u95ee\u9898\uff0c\u600e\u4e48\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\uff1f \u73b0\u5728\u54b1\u4eec\u5148\u6765\u60f3\u4e00\u4e0b\uff0c\u5728\u5934\u90e8\u63d2\u5165\u8282\u70b9\u8be5\u600e\u4e48\u505a\uff1f\u6ca1\u9519\uff0c\u5934\u63d2\u6cd5\uff0c\u8fd9\u6837\u5c31\u80fd\u5b9e\u73b0\u5728\u94fe\u8868\u5934\u90e8\u4e0d\u65ad\u63d2\u5165\u8282\u70b9\u7684\u529f\u80fd\u4e86\uff01 \u597d\u7684\uff0c\u65e2\u7136\u54b1\u4eec\u5df2\u7ecf\u53ef\u4ee5\u5728\u5934\u90e8\u4e0d\u65ad\u63d2\u5165\u8282\u70b9\u4e86\uff0c\u90a3\u4e48\u5728\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u63d2\u5165\u5462\uff1f\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u7136\u540e\u7ed9\u5b83\u7684\u6570\u636e\u4f4d\u8d4b\u503c\uff0c\u7136\u540e\u8ba9\u5b83\u7684next\u6307\u9488\u6307\u5411\u5934\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u63a5\u7740\uff0c\u54b1\u4eec\u518d\u628a\u5934\u8282\u70b9\u7684next\u6307\u9488\uff0c\u6539\u6307\u5411\u8fd9\u4e2a\u65b0\u6307\u9488\uff0c\u54b1\u4eec\u7684\u76ee\u7684\u5c31\u8fbe\u5230\u4e86\uff01 \u8fd9\u662f\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u5462\uff0c\u540c\u7406\uff0c\u53ea\u9700\u8981\u8ba9\u65b0\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7b2c\u4e8c\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u7136\u540e\u8ba9\u7b2c\u4e8c\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u65b0\u8282\u70b9\u5c31\u5b9e\u73b0\u4e86\u5728\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u63d2\u5165\u4e86\uff01 \u597d\u7684\uff0c\u90a3\u95ee\u9898\u6765\u4e86\uff0c\u6211\u8981\u662f\u8fd8\u6ca1\u521b\u5efa\u524d\u9762\u7684\u8282\u70b9\uff0c\u5c31\u5728\u540e\u9762\u63d2\u5165\u8282\u70b9\uff0c\u8fdb\u884c\u8fd9\u79cd\u975e\u6cd5\u64cd\u4f5c\uff0c\u6211\u4eec\u600e\u4e48\u5904\u7406\uff1f \u662f\u4e0d\u662f\u53ea\u9700\u8981\u4e00\u4e2a\u6307\u9488\uff0c\u4ece\u5934\u5f00\u59cb\u904d\u5386\uff0c\u4ece\u5934\u5f80\u540e\u8d70n-1\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\u662fNULL\uff0c\u90a3\u8bf4\u660e\u65b0\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u662fNULL\uff01\u5f88\u660e\u663e\u8fd9\u6837\u5c31\u4e0d\u80fd\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\u4e86\uff0c\u76f4\u63a5\u544a\u8bc9\u8fd0\u884c\u7a0b\u5e8f\u7684\u4eba\u4e0d\u80fd\u63d2\u5165\u5c31\u53ef\u4ee5\u4e86\uff01 #include <iostream> struct Node { int data ; Node * next ; }; Node * head = NULL ; void Insert ( int , int ); void Print (); int main () { std :: cout << \"\u63d2\u5165\u4f4d\u7f6e\uff1a \" << std :: endl ; int n ; std :: cin >> n ; std :: cout << \"\u63d2\u5165\u8282\u70b9\u6570\u636e\uff1a \" << std :: endl ; int x ; std :: cin >> x ; Insert ( n , x ); Print (); return 0 ; } void Insert ( int n , int x ) { if ( n == 1 ) { Node * temp = new Node (); temp -> data = x ; temp -> next = head ; head = temp ; return ; } Node * cur = head ; for ( int i = 1 ; i < n - 1 && cur != NULL ; i ++ ) { cur = cur -> next ; } if ( cur == NULL ) { std :: cout << \"Can not insert!\" << std :: endl ; return ; } Node * temp = new Node (); temp -> data = x ; temp -> next = cur -> next ; cur -> next = temp ; } void Print () { std :: cout << \"\u94fe\u8868\u5185\u5bb9\u5982\u4e0b\uff1a\" << std :: endl ; Node * curr = head ; while ( curr != NULL ) { std :: cout << curr -> data << \" \" ; curr = curr -> next ; } std :: cout << std :: endl ; } \u6211\u4eec\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u6210\u4e86\u5728\u94fe\u8868\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9\u7684\u529f\u80fd \u6211\u4eec\u9996\u5148\u6765\u770b Insert \u51fd\u6570\uff0cIneert\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570n\u7528\u6765\u63a5\u6536\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570x\u7528\u6765\u63a5\u6536\u63d2\u5165\u8282\u70b9\u7684\u6570\u636e\u5185\u5bb9 if ( n == 1 ) { Node * temp = new Node (); temp -> data = x ; temp -> next = head ; head = temp ; return ; } \u770b\u8fd9\u91cc\uff0c\u8fd9\u91cc\u662f\u5f53\u63d2\u5165\u4f4d\u7f6e\u4e3a1\u65f6\u5019\u8fdb\u884c\u7684\u63d2\u5165\u4ee3\u7801\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2atemp\u8282\u70b9\uff0c\u7136\u540e\u7ed9temp\u8282\u70b9\u7684\u6570\u636e\u8d4b\u503c\uff0c\u8ba9\u5b83\u7684next\u6307\u9488\u6307\u5411head\u8282\u70b9\uff0c\u6700\u540e\u8ba9head = temp\uff0c\u8fd9\u4e48\u8bf4\u4f60\u5e94\u8be5\u5f88\u719f\u6089\u4e86\uff0c\u8fd9\u5c31\u662f\u5934\u63d2\u6cd5\uff0c\u4e0d\u505c\u5f97\u5728\u5934\u90e8\u4e5f\u5c31\u662f\u94fe\u8868\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u63d2\u5165\u65b0\u8282\u70b9 Node * cur = head ; for ( int i = 1 ; i < n - 1 && cur != NULL ; i ++ ) { cur = cur -> next ; } \u770b\u8fd9\u91cc\uff0c\u8fd9\u91cc\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u6307\u5411head\u7684\u6307\u9488\uff0c\u7136\u540e\u8fdb\u884c\u904d\u5386\uff0c\u76f4\u5230cur\u6307\u5411\u4e86\u8981\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u54b1\u4eec\u8981\u7528\u5230\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u554a\uff01\u662f\u5427\uff1f if ( cur == NULL ) { std :: cout << \"Can not insert!\" << std :: endl ; return ; } \u63a5\u4e0b\u6765\u54b1\u4eec\u5224\u65ad\u4e00\u624b\uff0c\u9632\u6b62\u5728\u975e\u6cd5\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165 Node * temp = new Node (); temp -> data = x ; temp -> next = cur -> next ; cur -> next = temp ; \u8981\u662f\u4e0d\u662f\u5728\u5934\u90e8\u63d2\u5165\uff0c\u4e5f\u4e0d\u662f\u975e\u6cd5\u63d2\u5165\uff0c\u90a3\u54b1\u4eec\u5c31\u662f\u6309\u7167\u6b63\u5e38\u6d41\u7a0b\u6765\u4e86\uff01 \u6700\u540e\u54b1\u4eec\u8fdb\u884c\u64cd\u4f5c\uff0c\u8ba9\u8981\u63d2\u5165\u7684\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u6700\u540e\u628a\u63d2\u5165\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684next\u6307\u9488\u6307\u5411\u63d2\u5165\u7684\u8282\u70b9\uff0c\u5b9e\u73b0\u65b0\u8282\u70b9\u7684\u4efb\u610f\u4f4d\u7f6e\u7684\u63d2\u5165","title":"\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u8282\u70b9"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u5728\u4efb\u610f\u4f4d\u7f6e\u5220\u9664\u8282\u70b9","text":"\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\uff0c\u5305\u62ec\u5411\u94fe\u8868\u4e2d\u63d2\u5165\u8282\u70b9\u3001\u6253\u5370\u94fe\u8868\u7684\u6570\u636e\u4ee5\u53ca\u5220\u9664\u94fe\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u8282\u70b9\u7b49\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f\u5bf9\u4e8e\u8fd9\u6bb5\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a \u9996\u5148\uff0c\u5728\u4ee3\u7801\u5f00\u5934\u5b9a\u4e49\u4e86\u4e00\u4e2a Node \u7ed3\u6784\u4f53\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u6574\u578b\u6570\u636e\u6210\u5458 data \u548c\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u6210\u5458 next\u3002\u6b64\u5916\uff0c\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a head \u6307\u9488\uff0c\u8868\u793a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5b83\u7684\u521d\u59cb\u503c\u4e3a NULL\uff0c\u8868\u793a\u94fe\u8868\u4e3a\u7a7a\u3002 \u7136\u540e\uff0c\u5b9a\u4e49\u4e86\u4e09\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u94fe\u8868\u7684\u64cd\u4f5c\uff1a Insert(int x) \u51fd\u6570\uff1a\u8be5\u51fd\u6570\u7528\u6765\u5411\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u65b0\u8282\u70b9\u7684\u6570\u636e\u503c\u4e3a x\u3002\u5982\u679c\u94fe\u8868\u4e3a\u7a7a\uff0c\u5219\u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u5934\u8282\u70b9\uff0c\u5426\u5219\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u94fe\u8868\u7684\u672b\u5c3e\u3002 Print() \u51fd\u6570\uff1a\u8be5\u51fd\u6570\u7528\u6765\u6253\u5370\u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u636e\u503c\u3002 del_element(int n) \u51fd\u6570\uff1a\u8be5\u51fd\u6570\u7528\u6765\u5220\u9664\u94fe\u8868\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u8282\u70b9\uff0c\u4f4d\u7f6e\u7531\u53c2\u6570 n \u6307\u5b9a\u3002\u82e5\u94fe\u8868\u4e3a\u7a7a\u6216\u8005 n \u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e 0\uff0c\u5219\u65e0\u6cd5\u5220\u9664\u8282\u70b9\uff1b\u82e5 n \u7684\u503c\u4e3a 1\uff0c\u5219\u5220\u9664\u94fe\u8868\u7684\u5934\u8282\u70b9\uff1b\u5426\u5219\uff0c\u904d\u5386\u94fe\u8868\uff0c\u627e\u5230\u5f85\u5220\u9664\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\uff0c\u7136\u540e\u5c06\u524d\u9a71\u8282\u70b9\u7684\u6307\u9488\u6307\u5411\u5f85\u5220\u9664\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u5373\u53ef\u3002 \u6700\u540e\uff0c\u5728 main() \u51fd\u6570\u4e2d\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u7a7a\u94fe\u8868\uff0c\u5e76\u5411\u5176\u4e2d\u63d2\u5165\u4e86\u4e00\u4e9b\u8282\u70b9\uff0c\u7136\u540e\u6253\u5370\u4e86\u94fe\u8868\u7684\u6570\u636e\uff0c\u63a5\u7740\u5220\u9664\u4e86\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u518d\u6b21\u6253\u5370\u94fe\u8868\u7684\u6570\u636e\uff0c\u6700\u540e\u7ed3\u675f\u7a0b\u5e8f\u3002 #include <iostream> struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int ); void Print (); void del_element ( int ); int main ( void ) { head = NULL ; // empty list Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); Print (); del_element ( 6 ); Print (); return 0 ; } void Insert ( int x ) { Node * temp = new Node (); temp -> data = x ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print () { std :: cout << \"\u94fe\u8868\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1a\" << std :: endl ; Node * curr = head ; while ( curr != NULL ) { std :: cout << curr -> data << \" \" ; curr = curr -> next ; } std :: cout << std :: endl ; } void del_element ( int n ) { if ( head == NULL ) { std :: cout << \"\u6ca1\u6709\u8981\u5220\u9664\u7684\u8282\u70b9\" << std :: endl ; return ; } if ( n == 1 ) { head = head -> next ; return ; } Node * cur = head ; for ( int i = 1 ; i < n - 1 && cur -> next != NULL ; i ++ ) { cur = cur -> next ; } if ( cur -> next == NULL ) { std :: cout << \"\u5220\u9664\u4f4d\u7f6e\u8d85\u51fa\u8303\u56f4~\" << std :: endl ; return ; } cur -> next = cur -> next -> next ; }","title":"\u5728\u4efb\u610f\u4f4d\u7f6e\u5220\u9664\u8282\u70b9"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u7ffb\u8f6c\u94fe\u8868\u8fed\u4ee3\u65b9\u5f0f\u5b9e\u73b0","text":"\u60f3\u5b9e\u73b0\u7ffb\u8f6c\u94fe\u8868\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u601d\u8003\u4e00\u4e0b \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u4e00\u4e0b\u7ffb\u8f6c\u94fe\u8868\u7684\u57fa\u672c\u601d\u8def\uff0c\u5c31\u662f\u4ece\u94fe\u8868\u5934\u5f00\u59cb\uff0c\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684 next \u6307\u9488\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u7ec8\u6574\u4e2a\u94fe\u8868\u5c31\u88ab\u7ffb\u8f6c\u4e86\u3002 \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u9010\u6b65\u5206\u6790\u7684 Reverse() \u51fd\u6570\uff1a void Reverse () { if ( head == NULL || head -> next == NULL ) { cout << \"\u5143\u7d20\u6570\u91cf\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ffb\u8f6c!\" << endl ; return ; } Node * cur , * prev , * next ; cur = head ; prev = NULL ; while ( cur != NULL ) { next = cur -> next ; cur -> next = prev ; prev = cur ; cur = next ; } head = prev ; } \u9996\u5148\uff0c\u51fd\u6570\u5224\u65ad\u94fe\u8868\u7684\u5934\u90e8\u662f\u5426\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u65e0\u9700\u8fdb\u884c\u7ffb\u8f6c\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\u8fd9\u4e00\u6b65\u7684\u5224\u65ad\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u94fe\u8868\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u7ffb\u8f6c\u94fe\u8868\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002 \u63a5\u7740\uff0c\u51fd\u6570\u5b9a\u4e49\u4e86\u4e09\u4e2a\u6307\u9488\u53d8\u91cf cur\u3001prev\u3001next\uff0c\u5b83\u4eec\u5206\u522b\u6307\u5411\u5f53\u524d\u8282\u70b9\u3001\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u7684\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u5176\u4e2d\uff0ccur \u53d8\u91cf\u521d\u59cb\u5316\u4e3a\u94fe\u8868\u7684\u5934\u90e8\uff0cprev \u53d8\u91cf\u521d\u59cb\u5316\u4e3a NULL\u3002 \u8fdb\u5165 while \u5faa\u73af\uff0c\u6bcf\u6b21\u5c06 next \u6307\u5411\u5f53\u524d\u8282\u70b9 cur \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5c06 cur \u7684 next \u6307\u9488\u6307\u5411 prev\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5f53\u524d\u8282\u70b9\u7684\u7ffb\u8f6c\u3002\u63a5\u7740\uff0c\u5c06 prev \u6307\u5411\u5f53\u524d\u8282\u70b9 cur\uff0ccur \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 next\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002\u8fd9\u6837\u4e0d\u65ad\u5730\u6267\u884c\uff0c\u76f4\u5230 cur \u6307\u5411\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u6574\u4e2a\u94fe\u8868\u5c31\u88ab\u7ffb\u8f6c\u4e86\u3002 \u6700\u540e\uff0c\u5c06\u94fe\u8868\u7684\u5934\u90e8\u6307\u5411\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u5934\u90e8 prev\uff0c\u5b8c\u6210\u94fe\u8868\u7684\u7ffb\u8f6c\u64cd\u4f5c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u60a8\u7684 Reverse() \u51fd\u6570\u91c7\u7528\u4e86\u8fed\u4ee3\u7684\u65b9\u5f0f\u7ffb\u8f6c\u94fe\u8868\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\uff0c\u6bcf\u6b21\u5c06\u5f53\u524d\u8282\u70b9\u7684 next \u6307\u9488\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u7ec8\u5b8c\u6210\u6574\u4e2a\u94fe\u8868\u7684\u7ffb\u8f6c\u3002 \u5b8c\u6574\u4ee3\u7801(ReverseLinklist)\uff1a #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int num ); void Print (); void Reverse (); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); Print (); cout << \"Now we will reverse this linklist!\" << endl ; Reverse (); Print (); } void Insert ( int num ) { Node * temp = new Node (); temp -> data = num ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * cur = head ; while ( cur -> next != NULL ) { cur = cur -> next ; } cur -> next = temp ; } } void Print () { cout << \"The content in linklist:\" << endl ; Node * cur = head ; while ( cur != NULL ) { cout << cur -> data << \" \" ; cur = cur -> next ; } cout << endl ; } void Reverse () { if ( head == NULL || head -> next == NULL ) { cout << \"\u5143\u7d20\u6570\u91cf\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ffb\u8f6c!\" << endl ; return ; } Node * cur , * prev , * next ; cur = head ; prev = NULL ; while ( cur != NULL ) { next = cur -> next ; cur -> next = prev ; prev = cur ; cur = next ; } head = prev ; }","title":"\u7ffb\u8f6c\u94fe\u8868(\u8fed\u4ee3\u65b9\u5f0f\u5b9e\u73b0)"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u7ffb\u8f6c\u94fe\u8868\u9012\u5f52\u65b9\u5f0f\u5b9e\u73b0","text":"#include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int ); void Print ( Node * p ); void Reverse_LinkList ( Node * p ); int main ( void ) { head = NULL ; Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); cout << \"Normal LinkList:\" ; Print ( head ); Reverse_LinkList ( head ); cout << \"Reverse LinkList:\" ; Print ( head ); return 0 ; } void Insert ( int data ) { Node * temp = new Node (); temp -> data = data ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * current = head ; while ( current -> next != NULL ) { current = current -> next ; } current -> next = temp ; } } void Print ( Node * p ){ if ( p == NULL ) { cout << endl ; return ; } cout << p -> data << \" \" ; Print ( p -> next ); } void Reverse_LinkList ( Node * p ) { if ( p -> next == NULL ) { head = p ; return ; } Reverse_LinkList ( p -> next ); Node * q = p -> next ; q -> next = p ; p -> next = NULL ; }","title":"\u7ffb\u8f6c\u94fe\u8868(\u9012\u5f52\u65b9\u5f0f\u5b9e\u73b0)"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u91c7\u7528\u9012\u5f52\u65b9\u6cd5\u6253\u5370\u94fe\u8868","text":"\u60f3\u4e00\u60f3\uff0c\u600e\u4e48\u7528\u9012\u5f52\u65b9\u6cd5\u6253\u5370\u94fe\u8868\u5462\uff1f \u9996\u5148\u6211\u4eec\u63a5\u6536\u4e00\u4e2a\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u5934\u6307\u9488(head),\u63a5\u4e0b\u6765\u54b1\u4eec\u5224\u65ad\u4e00\u4e0b\u5934\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u662f\u4e0d\u662fNULL\uff0c\u5982\u679c\u662fNULL\uff0c\u90a3\u5c31\u6ca1\u4ec0\u4e48\u597d\u6253\u5370\u7684\u4e86\uff0c\u76f4\u63a5return void Print ( Node * p ){ //recursion if ( p == NULL ) return ; } \u63a5\u4e0b\u6765\u5462\uff0c\u5982\u679c\u8fd9\u4e2a\u5934\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u4e0d\u662fNULL\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6253\u5370\u4e86 \u76f4\u63a5cout << p->data << endl; void Print ( Node * p ) { if ( p == NULL ) return ; cout << p -> data << \" \" ; } \u6700\u540e\u54b1\u4eec\u518d\u628a\u5934\u6307\u9488\u6307\u5411\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4f20\u5165\u54b1\u4eec\u7684\u9012\u5f52\u51fd\u6570\uff0c\u8fd9\u6837\u4e0d\u5c31\u80fd\u7ee7\u7eed\u6253\u5370\u4e86\uff1f\u76f4\u5230\u4f20\u5165\u7684\u53c2\u6570p\u6307\u5411NULL,\u9000\u51fa\u51fd\u6570\uff0c\u4e5f\u5c31\u5b8c\u6210\u4e86\u5bf9\u94fe\u8868\u7684\u6253\u5370 void Print ( Node * p ) { if ( p == NULL ) return ; cout << p -> data << \" \" ; Print ( p -> next ); } \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a /* \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6253\u5370\u94fe\u8868 */ #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Print ( Node * p ); void Insert ( int data ); void ReversePrint ( Node * p ); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); cout << \"Normal Print the Linklist: \" << endl ; Print ( head ); cout << endl ; return 0 ; } void Insert ( int data ){ Node * temp = new Node (); temp -> data = data ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print ( Node * p ){ //recursion if ( p == NULL ) return ; cout << p -> data << \" \" ; Print ( p -> next ); //Recursive call }","title":"\u91c7\u7528\u9012\u5f52\u65b9\u6cd5\u6253\u5370\u94fe\u8868"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u91c7\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u7ffb\u8f6c\u6253\u5370\u94fe\u8868","text":"\u8fd9\u4e2a\u5176\u5b9e\u5f88\u7b80\u5355\uff1a void ReversePrint ( Node * p ){ //recursion if ( p == NULL ) return ; ReversePrint ( p -> next ); //Recursive call cout << p -> data << \" \" ; } \u53ea\u9700\u8981\u5148\u8fdb\u884c\u9012\u5f52\uff0c\u6839\u636e\u9012\u5f52\u539f\u7406\uff0c\u5f00\u59cb\u7684\u8282\u70b9\u88ab\u538b\u5165\u6808\u5e95\uff0c\u6700\u540e\u7684\u5728\u6808\u9876\uff0c\u90a3\u4e48\u5f39\u6808\u7684\u65f6\u5019\uff0c\u5c31\u662f\u4ece\u6808\u9876\u5f00\u59cb\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u7ffb\u8f6c\u6253\u5370\u94fe\u8868\u4e86 \u5b8c\u6574\u4ee3\u7801\uff1a /* \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u91c7\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u8fdb\u884c\u6253\u5370\u94fe\u8868 */ #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Print ( Node * p ); void Insert ( int data ); void ReversePrint ( Node * p ); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); cout << \"Normal Print the Linklist: \" << endl ; Print ( head ); cout << endl ; cout << \"Reverse Print the Linklist: \" << endl ; ReversePrint ( head ); return 0 ; } void Insert ( int data ){ Node * temp = new Node (); temp -> data = data ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * curr = head ; while ( curr -> next != NULL ) { curr = curr -> next ; } curr -> next = temp ; } } void Print ( Node * p ){ //recursion if ( p == NULL ) return ; cout << p -> data << \" \" ; Print ( p -> next ); //Recursive call } void ReversePrint ( Node * p ){ //recursion if ( p == NULL ) return ; ReversePrint ( p -> next ); //Recursive call cout << p -> data << \" \" ; } \u8fd0\u884c\u7ed3\u679c\uff1a","title":"\u91c7\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u7ffb\u8f6c\u6253\u5370\u94fe\u8868"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/linklist/#\u53cc\u5411\u6307\u9488","text":"#include <iostream> struct Node { int data ; Node * prev ; Node * next ; }; Node * head ; Node * GetNewNode ( int ); void InsertAtHead ( int ); void InsertAtTail ( int ); void Print (); void ReversePrint (); int main ( void ) { head = NULL ; InsertAtHead ( 2 ); InsertAtHead ( 4 ); InsertAtHead ( 6 ); InsertAtHead ( 8 ); Print (); std :: cout << std :: endl ; ReversePrint (); head = NULL ; std :: cout << std :: endl ; InsertAtTail ( 2 ); InsertAtTail ( 4 ); InsertAtTail ( 6 ); InsertAtTail ( 8 ); Print (); std :: cout << std :: endl ; ReversePrint (); return 0 ; } Node * GetNewNode ( int x ) { Node * newNode = new Node (); newNode -> prev = NULL ; newNode -> next = NULL ; newNode -> data = x ; return newNode ; } void InsertAtHead ( int x ) { Node * newNode = GetNewNode ( x ); if ( head == NULL ) { head = newNode ; return ; } head -> prev = newNode ; newNode -> next = head ; head = newNode ; } void InsertAtTail ( int x ) { Node * newNode = GetNewNode ( x ); if ( head == NULL ) { head = newNode ; return ; } Node * temp = head ; while ( temp -> next != NULL ) { temp = temp -> next ; } temp -> next = newNode ; newNode -> prev = temp ; } void Print () { std :: cout << \"The content of LinkList: \" << std :: endl ; Node * cur = head ; while ( cur != NULL ) { std :: cout << cur -> data << \" \" ; cur = cur -> next ; } } void ReversePrint () { std :: cout << \"The Reverse content of LinkList: \" << std :: endl ; Node * cur = head ; if ( cur == NULL ) return ; while ( cur -> next != NULL ) { cur = cur -> next ; } while ( cur != NULL ) { std :: cout << cur -> data << \" \" ; cur = cur -> prev ; } }","title":"\u53cc\u5411\u6307\u9488"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/queues/","text":"\u961f\u5217 # \u961f\u5217\uff08Queue\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u6392\u961f\u7b49\u5f85\u3002\u961f\u5217\u7684\u64cd\u4f5c\u5305\u62ec\u5165\u961f\uff08enqueue\uff09\u548c\u51fa\u961f\uff08dequeue\uff09\u4e24\u79cd\u64cd\u4f5c\uff0c\u5176\u4e2d\u5165\u961f\u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u672b\u5c3e\uff0c\u51fa\u961f\u5219\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u961f\u5217\u662f\u4e00\u79cd\u5148\u8fdb\u5148\u51fa\uff08First-In-First-Out\uff0cFIFO\uff09\u7684\u6570\u636e\u7ed3\u6784\u3002 \u961f\u5217\u901a\u5e38\u6709\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u961f\u5217\u7684\u5934\u90e8\uff0c\u53e6\u4e00\u4e2a\u6307\u5411\u961f\u5217\u7684\u5c3e\u90e8\u3002\u5165\u961f\u64cd\u4f5c\u4f1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5c3e\u90e8\u6307\u9488\u6240\u6307\u5411\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u5c06\u5c3e\u90e8\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff1b\u51fa\u961f\u64cd\u4f5c\u4f1a\u5c06\u5934\u90e8\u6307\u9488\u6240\u6307\u5411\u7684\u5143\u7d20\u5220\u9664\uff0c\u5e76\u5c06\u5934\u90e8\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\u3002\u56e0\u6b64\uff0c\u961f\u5217\u7684\u5927\u5c0f\u901a\u5e38\u7531\u5934\u90e8\u6307\u9488\u548c\u5c3e\u90e8\u6307\u9488\u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570\u786e\u5b9a\u3002 \u9996\u5148\uff0c\u8981\u521b\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u9700\u8981\u6307\u5b9a\u961f\u5217\u7684\u5bb9\u91cf\u3002\u5bb9\u91cf\u662f\u961f\u5217\u4e2d\u53ef\u4ee5\u5b58\u50a8\u7684\u6700\u5927\u5143\u7d20\u6570\u3002\u521b\u5efa\u961f\u5217\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 push_back() \u51fd\u6570\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u5c3e\u90e8\u3002 push_back() \u51fd\u6570\u4f1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u5c3e\u90e8\uff0c\u5e76\u66f4\u65b0\u961f\u5217\u7684\u5927\u5c0f\u3002 \u8981\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 pop() \u51fd\u6570\u3002 pop() \u51fd\u6570\u4f1a\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u5143\u7d20\uff0c\u5e76\u66f4\u65b0\u961f\u5217\u7684\u5927\u5c0f\u3002 \u8981\u83b7\u53d6\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 front() \u51fd\u6570\u3002 front() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002 \u8981\u83b7\u53d6\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 back() \u51fd\u6570\u3002 back() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002 \u8981\u83b7\u53d6\u961f\u5217\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 size() \u51fd\u6570\u3002 size() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 \u8981\u904d\u5386\u961f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 print() \u51fd\u6570\u3002 print() \u51fd\u6570\u4f1a\u6253\u5370\u961f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u4ece\u5934\u5230\u5c3e\u3002 \u4e0b\u9762\uff0c\u6211\u6765\u8be6\u7ec6\u8bb2\u8bb2\u6bcf\u4e2a\u51fd\u6570\u7684\u5b9e\u73b0\u3002 Queue(int capacity) \u51fd\u6570\u662f\u6784\u9020\u51fd\u6570\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u5e76\u6307\u5b9a\u961f\u5217\u7684\u5bb9\u91cf\u3002 ~Queue() \u51fd\u6570\u662f\u6790\u6784\u51fd\u6570\uff0c\u5b83\u4f1a\u91ca\u653e\u961f\u5217\u6240\u5360\u7528\u7684\u5185\u5b58\u3002 bool empty() \u51fd\u6570\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002 void push_back(int value) \u51fd\u6570\u4f1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u5c3e\u90e8\u3002\u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u3002 void pop() \u51fd\u6570\u4f1a\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u3002 int front() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de-1\u3002 int back() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de-1\u3002 int size() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u8fd4\u56de0\u3002 void print() \u51fd\u6570\u4f1a\u6253\u5370\u961f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u4ece\u5934\u5230\u5c3e\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4e0d\u4f1a\u6253\u5370\u4efb\u4f55\u5185\u5bb9\u3002 #include <iostream> class Queue { public : Queue ( int capacity ) : capacity_ ( capacity ), size_ ( 0 ), front_ ( -1 ), rear_ ( -1 ) { data_ = new int [ capacity_ ]; } ~ Queue () { delete [] data_ ; } bool empty () { if ( size_ == 0 ) { return true ; } else { return false ; } } void push_back ( int value ) //\u5165\u961f\u64cd\u4f5c { if ( size_ == capacity_ ) // \u961f\u5217\u5df2\u6ee1 { std :: cout << \"Queue is full!\" << std :: endl ; return ; } else if ( empty ()) // \u5982\u679c\u662f\u7a7a\u7684\uff0c\u76f4\u63a5\u8ba9front_\u548crear_\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20 { front_ = 0 ; rear_ = 0 ; // \u961f\u5217\u4e2d\u5df2\u6709\u5143\u7d20\uff0cfront_ \u548c rear_ \u90fd\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20 } else // \u5982\u679c\u6ca1\u6709\u6ee1\uff0c\u5c31\u8ba9rear_\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u628a\u5143\u7d20\u653e\u8fdb\u53bb { rear_ = ( rear_ + 1 ) % capacity_ ; //\u5faa\u73af\u961f\u5217\uff0c\u53ef\u4ee5\u91cd\u590d\u5229\u7528\u7a7a\u95f4 } data_ [ rear_ ] = value ; size_ ++ ; } void pop () //\u51fa\u961f\u64cd\u4f5c { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return ; } else if ( front_ == rear_ ) // \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5c31\u628afront_\u548crear_\u90fd\u7f6e\u4e3a-1 { front_ = -1 ; rear_ = -1 ; size_ = 0 ; } else { front_ ++ ; size_ -- ; } } int front () //\u8fd4\u56de\u961f\u5934\u5143\u7d20 { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return -1 ; } else { return data_ [ front_ ]; } } int back () //\u8fd4\u56de\u961f\u5c3e\u5143\u7d20 { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return -1 ; } else { return data_ [ rear_ ]; } } int size () { return size_ ; } //\u904d\u5386\u961f\u5217 void print () { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return ; } else { for ( int i = front_ ; i != rear_ ; i = ( i + 1 ) % capacity_ ) { std :: cout << data_ [ i ] << \" \" ; } std :: cout << data_ [ rear_ ] << std :: endl ; } } private : int * data_ ; int capacity_ ; int size_ ; int front_ ; int rear_ ; /* data_\uff1a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u7528\u4e8e\u4fdd\u5b58\u961f\u5217\u4e2d\u7684\u5143\u7d20\u3002 capacity_\uff1a\u961f\u5217\u7684\u5bb9\u91cf\u3002 size_\uff1a\u961f\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 front_\uff1a\u961f\u5217\u5934\u90e8\u5143\u7d20\u7684\u4e0b\u6807\u3002 rear_\uff1a\u961f\u5217\u5c3e\u90e8\u5143\u7d20\u7684\u4e0b\u6807\u3002 */ }; int main ( void ) { Queue q ( 5 ); q . push_back ( 1 ); q . push_back ( 2 ); q . push_back ( 3 ); q . push_back ( 4 ); q . push_back ( 5 ); std :: cout << \"front: \" << q . front () << std :: endl ; std :: cout << \"back: \" << q . back () << std :: endl ; std :: cout << \"size: \" << q . size () << std :: endl ; std :: cout << \"Pop the first element of the queue: \" << std :: endl ; // \"\u51fa\u961f\u64cd\u4f5c q . pop (); std :: cout << \"front: \" << q . front () << std :: endl ; std :: cout << \"back: \" << q . back () << std :: endl ; std :: cout << \"size: \" << q . size () << std :: endl ; std :: cout << \"**************************\" << std :: endl ; std :: cout << \"Print the queue: \" << std :: endl ; q . print (); return 0 ; } \u8fd9\u91cc\u9762\u7528\u5230\u4e86\u5faa\u73af\u961f\u5217\uff0c\u5173\u4e8e\u5faa\u73af\u961f\u5217\u7684\u8d44\u6599 \u5faa\u73af\u961f\u5217\u662f\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7684\u64cd\u4f5c\u57fa\u4e8e\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u539f\u5219\uff0c\u961f\u5c3e\u88ab\u8fde\u63a5\u5728\u961f\u9996\u4e4b\u540e\u4ee5\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u3002\u5b83\u80fd\u591f\u6709\u6548\u5730\u5229\u7528\u7a7a\u95f4\uff0c\u907f\u514d\u4e86\u666e\u901a\u961f\u5217\u5728\u51fa\u961f\u64cd\u4f5c\u540e\u4ea7\u751f\u7684\u7a7a\u95f4\u6d6a\u8d39\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u56fd\u9645\u7f51\u7ad9\u4e0a\u5173\u4e8e\u5faa\u73af\u961f\u5217\u7684\u8d44\u6599\uff0c\u60a8\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\uff1a - [Programiz: Circular Queue Data Structure]\u00b9 - [\ud83d\ude0aGeeksforGeeks: Introduction to Circular Queue]\u00b2 - [\u7ef4\u57fa\u767e\u79d1: \u73af\u5f62\u7f13\u51b2\u533a]\u00b3 \u6e90: \u4e0e\u5fc5\u5e94\u7684\u5bf9\u8bdd\uff0c 2023/7/18 (1) Circular Queue Data Structure - Programiz. https://www.programiz.com/dsa/circular-queue . (2) Introduction to Circular Queue - GeeksforGeeks. https://www.geeksforgeeks.org/introduction-to-circular-queue/ . (3) \u74b0\u5f62\u7de9\u885d\u5340 - \u7dad\u57fa\u767e\u79d1\uff0c\u81ea\u7531\u7684\u767e\u79d1\u5168\u66f8. https://zh.wikipedia.org/zh-tw/%E7%92%B0%E5%BD%A2%E7%B7%A9%E8%A1%9D%E5%8D%80 .","title":"\u961f\u5217"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/queues/#\u961f\u5217","text":"\u961f\u5217\uff08Queue\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u6392\u961f\u7b49\u5f85\u3002\u961f\u5217\u7684\u64cd\u4f5c\u5305\u62ec\u5165\u961f\uff08enqueue\uff09\u548c\u51fa\u961f\uff08dequeue\uff09\u4e24\u79cd\u64cd\u4f5c\uff0c\u5176\u4e2d\u5165\u961f\u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u672b\u5c3e\uff0c\u51fa\u961f\u5219\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u961f\u5217\u662f\u4e00\u79cd\u5148\u8fdb\u5148\u51fa\uff08First-In-First-Out\uff0cFIFO\uff09\u7684\u6570\u636e\u7ed3\u6784\u3002 \u961f\u5217\u901a\u5e38\u6709\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u961f\u5217\u7684\u5934\u90e8\uff0c\u53e6\u4e00\u4e2a\u6307\u5411\u961f\u5217\u7684\u5c3e\u90e8\u3002\u5165\u961f\u64cd\u4f5c\u4f1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5c3e\u90e8\u6307\u9488\u6240\u6307\u5411\u7684\u4f4d\u7f6e\uff0c\u540c\u65f6\u5c06\u5c3e\u90e8\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff1b\u51fa\u961f\u64cd\u4f5c\u4f1a\u5c06\u5934\u90e8\u6307\u9488\u6240\u6307\u5411\u7684\u5143\u7d20\u5220\u9664\uff0c\u5e76\u5c06\u5934\u90e8\u6307\u9488\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\u3002\u56e0\u6b64\uff0c\u961f\u5217\u7684\u5927\u5c0f\u901a\u5e38\u7531\u5934\u90e8\u6307\u9488\u548c\u5c3e\u90e8\u6307\u9488\u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570\u786e\u5b9a\u3002 \u9996\u5148\uff0c\u8981\u521b\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u9700\u8981\u6307\u5b9a\u961f\u5217\u7684\u5bb9\u91cf\u3002\u5bb9\u91cf\u662f\u961f\u5217\u4e2d\u53ef\u4ee5\u5b58\u50a8\u7684\u6700\u5927\u5143\u7d20\u6570\u3002\u521b\u5efa\u961f\u5217\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 push_back() \u51fd\u6570\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u5c3e\u90e8\u3002 push_back() \u51fd\u6570\u4f1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u5c3e\u90e8\uff0c\u5e76\u66f4\u65b0\u961f\u5217\u7684\u5927\u5c0f\u3002 \u8981\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 pop() \u51fd\u6570\u3002 pop() \u51fd\u6570\u4f1a\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u5143\u7d20\uff0c\u5e76\u66f4\u65b0\u961f\u5217\u7684\u5927\u5c0f\u3002 \u8981\u83b7\u53d6\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 front() \u51fd\u6570\u3002 front() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002 \u8981\u83b7\u53d6\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 back() \u51fd\u6570\u3002 back() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002 \u8981\u83b7\u53d6\u961f\u5217\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 size() \u51fd\u6570\u3002 size() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 \u8981\u904d\u5386\u961f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 print() \u51fd\u6570\u3002 print() \u51fd\u6570\u4f1a\u6253\u5370\u961f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u4ece\u5934\u5230\u5c3e\u3002 \u4e0b\u9762\uff0c\u6211\u6765\u8be6\u7ec6\u8bb2\u8bb2\u6bcf\u4e2a\u51fd\u6570\u7684\u5b9e\u73b0\u3002 Queue(int capacity) \u51fd\u6570\u662f\u6784\u9020\u51fd\u6570\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u5e76\u6307\u5b9a\u961f\u5217\u7684\u5bb9\u91cf\u3002 ~Queue() \u51fd\u6570\u662f\u6790\u6784\u51fd\u6570\uff0c\u5b83\u4f1a\u91ca\u653e\u961f\u5217\u6240\u5360\u7528\u7684\u5185\u5b58\u3002 bool empty() \u51fd\u6570\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002 void push_back(int value) \u51fd\u6570\u4f1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u7684\u5c3e\u90e8\u3002\u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u3002 void pop() \u51fd\u6570\u4f1a\u4ece\u961f\u5217\u7684\u5934\u90e8\u5220\u9664\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u3002 int front() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5934\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de-1\u3002 int back() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\uff0c\u4f46\u4e0d\u4f1a\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5143\u7d20\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u6253\u5370\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de-1\u3002 int size() \u51fd\u6570\u4f1a\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4f1a\u8fd4\u56de0\u3002 void print() \u51fd\u6570\u4f1a\u6253\u5370\u961f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u4ece\u5934\u5230\u5c3e\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u51fd\u6570\u4e0d\u4f1a\u6253\u5370\u4efb\u4f55\u5185\u5bb9\u3002 #include <iostream> class Queue { public : Queue ( int capacity ) : capacity_ ( capacity ), size_ ( 0 ), front_ ( -1 ), rear_ ( -1 ) { data_ = new int [ capacity_ ]; } ~ Queue () { delete [] data_ ; } bool empty () { if ( size_ == 0 ) { return true ; } else { return false ; } } void push_back ( int value ) //\u5165\u961f\u64cd\u4f5c { if ( size_ == capacity_ ) // \u961f\u5217\u5df2\u6ee1 { std :: cout << \"Queue is full!\" << std :: endl ; return ; } else if ( empty ()) // \u5982\u679c\u662f\u7a7a\u7684\uff0c\u76f4\u63a5\u8ba9front_\u548crear_\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20 { front_ = 0 ; rear_ = 0 ; // \u961f\u5217\u4e2d\u5df2\u6709\u5143\u7d20\uff0cfront_ \u548c rear_ \u90fd\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20 } else // \u5982\u679c\u6ca1\u6709\u6ee1\uff0c\u5c31\u8ba9rear_\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u628a\u5143\u7d20\u653e\u8fdb\u53bb { rear_ = ( rear_ + 1 ) % capacity_ ; //\u5faa\u73af\u961f\u5217\uff0c\u53ef\u4ee5\u91cd\u590d\u5229\u7528\u7a7a\u95f4 } data_ [ rear_ ] = value ; size_ ++ ; } void pop () //\u51fa\u961f\u64cd\u4f5c { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return ; } else if ( front_ == rear_ ) // \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5c31\u628afront_\u548crear_\u90fd\u7f6e\u4e3a-1 { front_ = -1 ; rear_ = -1 ; size_ = 0 ; } else { front_ ++ ; size_ -- ; } } int front () //\u8fd4\u56de\u961f\u5934\u5143\u7d20 { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return -1 ; } else { return data_ [ front_ ]; } } int back () //\u8fd4\u56de\u961f\u5c3e\u5143\u7d20 { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return -1 ; } else { return data_ [ rear_ ]; } } int size () { return size_ ; } //\u904d\u5386\u961f\u5217 void print () { if ( size_ == 0 ) { std :: cout << \"Queue is empty!\" << std :: endl ; return ; } else { for ( int i = front_ ; i != rear_ ; i = ( i + 1 ) % capacity_ ) { std :: cout << data_ [ i ] << \" \" ; } std :: cout << data_ [ rear_ ] << std :: endl ; } } private : int * data_ ; int capacity_ ; int size_ ; int front_ ; int rear_ ; /* data_\uff1a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u7528\u4e8e\u4fdd\u5b58\u961f\u5217\u4e2d\u7684\u5143\u7d20\u3002 capacity_\uff1a\u961f\u5217\u7684\u5bb9\u91cf\u3002 size_\uff1a\u961f\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 front_\uff1a\u961f\u5217\u5934\u90e8\u5143\u7d20\u7684\u4e0b\u6807\u3002 rear_\uff1a\u961f\u5217\u5c3e\u90e8\u5143\u7d20\u7684\u4e0b\u6807\u3002 */ }; int main ( void ) { Queue q ( 5 ); q . push_back ( 1 ); q . push_back ( 2 ); q . push_back ( 3 ); q . push_back ( 4 ); q . push_back ( 5 ); std :: cout << \"front: \" << q . front () << std :: endl ; std :: cout << \"back: \" << q . back () << std :: endl ; std :: cout << \"size: \" << q . size () << std :: endl ; std :: cout << \"Pop the first element of the queue: \" << std :: endl ; // \"\u51fa\u961f\u64cd\u4f5c q . pop (); std :: cout << \"front: \" << q . front () << std :: endl ; std :: cout << \"back: \" << q . back () << std :: endl ; std :: cout << \"size: \" << q . size () << std :: endl ; std :: cout << \"**************************\" << std :: endl ; std :: cout << \"Print the queue: \" << std :: endl ; q . print (); return 0 ; } \u8fd9\u91cc\u9762\u7528\u5230\u4e86\u5faa\u73af\u961f\u5217\uff0c\u5173\u4e8e\u5faa\u73af\u961f\u5217\u7684\u8d44\u6599 \u5faa\u73af\u961f\u5217\u662f\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7684\u64cd\u4f5c\u57fa\u4e8e\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u539f\u5219\uff0c\u961f\u5c3e\u88ab\u8fde\u63a5\u5728\u961f\u9996\u4e4b\u540e\u4ee5\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u3002\u5b83\u80fd\u591f\u6709\u6548\u5730\u5229\u7528\u7a7a\u95f4\uff0c\u907f\u514d\u4e86\u666e\u901a\u961f\u5217\u5728\u51fa\u961f\u64cd\u4f5c\u540e\u4ea7\u751f\u7684\u7a7a\u95f4\u6d6a\u8d39\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u56fd\u9645\u7f51\u7ad9\u4e0a\u5173\u4e8e\u5faa\u73af\u961f\u5217\u7684\u8d44\u6599\uff0c\u60a8\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\uff1a - [Programiz: Circular Queue Data Structure]\u00b9 - [\ud83d\ude0aGeeksforGeeks: Introduction to Circular Queue]\u00b2 - [\u7ef4\u57fa\u767e\u79d1: \u73af\u5f62\u7f13\u51b2\u533a]\u00b3 \u6e90: \u4e0e\u5fc5\u5e94\u7684\u5bf9\u8bdd\uff0c 2023/7/18 (1) Circular Queue Data Structure - Programiz. https://www.programiz.com/dsa/circular-queue . (2) Introduction to Circular Queue - GeeksforGeeks. https://www.geeksforgeeks.org/introduction-to-circular-queue/ . (3) \u74b0\u5f62\u7de9\u885d\u5340 - \u7dad\u57fa\u767e\u79d1\uff0c\u81ea\u7531\u7684\u767e\u79d1\u5168\u66f8. https://zh.wikipedia.org/zh-tw/%E7%92%B0%E5%BD%A2%E7%B7%A9%E8%A1%9D%E5%8D%80 .","title":"\u961f\u5217"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/","text":"\u6808 # \u7528\u6570\u7ec4\u5b9e\u73b0\u6808 # #include <iostream> using namespace std ; int MAX_SIZE = 10 ; // \u5b9a\u4e49\u6808\u7684\u6700\u5927\u5bb9\u91cf int * Stack = new int [ MAX_SIZE ]; // \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7a7a\u95f4 int top = -1 ; // \u6808\u9876\u6307\u9488\u521d\u59cb\u5316\u4e3a-1 void push_back ( int n ) { // \u5165\u6808\u64cd\u4f5c if ( top == MAX_SIZE - 1 ) { // \u5982\u679c\u6808\u5df2\u6ee1\uff0c\u6269\u5bb9\u4e24\u500d MAX_SIZE = 2 * MAX_SIZE ; int * newStack = new int [ MAX_SIZE ]; // \u52a8\u6001\u5206\u914d\u66f4\u5927\u7684\u6570\u7ec4\u7a7a\u95f4 for ( int i = 0 ; i <= top ; i ++ ) { // \u5c06\u539f\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230\u65b0\u6570\u7ec4\u4e2d newStack [ i ] = Stack [ i ]; } Stack = newStack ; // \u5c06\u6307\u9488\u6307\u5411\u65b0\u6570\u7ec4\u7684\u9996\u5730\u5740 } top = top + 1 ; // \u6808\u9876\u6307\u9488\u52a01 Stack [ top ] = n ; // \u5c06\u5143\u7d20\u538b\u5165\u6808\u9876 } void pop () { // \u51fa\u6808\u64cd\u4f5c top = top - 1 ; // \u6808\u9876\u6307\u9488\u51cf1 } bool IsEmpty () { // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a if ( top == -1 ) { // \u6808\u9876\u6307\u9488\u4e3a-1\u65f6\uff0c\u6808\u4e3a\u7a7a return true ; } return false ; } int top_element () { // \u8fd4\u56de\u6808\u9876\u5143\u7d20 return Stack [ top ]; } int search ( int n ) { // \u67e5\u627e\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e for ( int i = 0 ; i <= top ; i ++ ) { // \u4ece\u6808\u5e95\u5f00\u59cb\u904d\u5386\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20 if ( Stack [ i ] == n ) { // \u5982\u679c\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20 return i ; // \u8fd4\u56de\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e } } return -1 ; // \u5426\u5219\u8fd4\u56de-1 } int main ( void ) { // \u6d4b\u8bd5\u4ee3\u7801 for ( int i = 0 ; i < 200 ; i ++ ) { // \u5165\u6808200\u4e2a\u5143\u7d20 push_back ( i ); } while ( ! IsEmpty ()) { // \u51fa\u6808\u5e76\u8f93\u51fa\u5143\u7d20 cout << top_element () << \" \" ; pop (); } cout << search ( 3 ) << endl ; // \u67e5\u627e\u5143\u7d203\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e delete [] Stack ; // \u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4\u7a7a\u95f4 return 0 ; } \u4e3a\u4e86\u66f4\u52a0\u6e05\u6670\u660e\u4e86\uff0c\u6211\u5199\u4e86\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e86\u548c\u4e0a\u9762\u4e00\u6837\u7684\u529f\u80fd stack_array_v2.cpp #include <iostream> using namespace std ; class Stack { private : int MAX_SIZE = 10 ; // \u5b9a\u4e49\u6808\u7684\u6700\u5927\u5bb9\u91cf int * Stack = new int [ MAX_SIZE ]; // \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7a7a\u95f4 int top = -1 ; public : void push_back ( int val ) { if ( top >= MAX_SIZE - 1 ) { MAX_SIZE *= 2 ; int * newStack = new int [ MAX_SIZE ]; for ( int i = 0 ; i <= top ; i ++ ) { newStack [ i ] = Stack [ i ]; } Stack = newStack ; } top ++ ; Stack [ top ] = val ; } void pop () { top -- ; } bool is_empty () { return top == -1 ; // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a } int top_element () { return Stack [ top ]; } int search ( int n ) { // \u67e5\u627e\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e for ( int i = 0 ; i <= top ; i ++ ) { // \u4ece\u6808\u5e95\u5f00\u59cb\u904d\u5386\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20 if ( Stack [ i ] == n ) { // \u5982\u679c\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20 return i ; // \u8fd4\u56de\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e } } return -1 ; // \u5426\u5219\u8fd4\u56de-1 } }; int main ( void ) { Stack s ; for ( int i = 0 ; i <= 200 ; i ++ ) { s . push_back ( i ); } while ( ! s . is_empty ()) { cout << s . top_element () << \" \" ; s . pop (); } return 0 ; } \u7528\u94fe\u8868\u5b9e\u73b0\u6808 # #include <iostream> struct Node { int data ; Node * next ; }; class Stack { private : Node * top ; public : Stack () { top = nullptr ; } void push ( int val ) { Node * node = new Node (); node -> data = val ; node -> next = top ; top = node ; } void pop () { if ( top != nullptr ) { Node * node = top ; top = top -> next ; delete node ; } } int topVal () { if ( top != nullptr ) { return top -> data ; } else { return -1 ; } } bool isEmpty () { return top == nullptr ; } }; int main ( void ) { Stack s ; for ( int i = 0 ; i < 200 ; i ++ ) { s . push ( i ); } while ( ! s . isEmpty ()) { std :: cout << s . topVal () << std :: endl ; s . pop (); } } \u7ffb\u8f6c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u7ffb\u8f6c\u4e00\u4e2a\u94fe\u8868(\u7528\u6808\u5b9e\u73b0) # Reverse a string in default # \u4f8b\u5982\uff1a hello -> olleh \u7ffb\u8f6c\u5b57\u7b26\u4e32\u7684\u5e38\u89c4\u505a\u6cd5 # #include <iostream> #include <string> using namespace std ; void reverse_string ( string & s ) { int len = s . length (); for ( int i = 0 ; i < len / 2 ; i ++ ) { char temp = s [ i ]; s [ i ] = s [ len - i - 1 ]; s [ len - i - 1 ] = temp ; } } int main ( void ) { string s = \"hello\" ; cout << \"The valine of s is: \" << s << endl ; reverse_string ( s ); cout << \"The reverse result of s is: \" << s << endl ; return 0 ; } #include <iostream> #include <string> #include <algorithm> using namespace std ; int main ( void ) { string s = \"hello\" ; cout << \"The valine string value is: \" << s << endl ; s . reverse ( s . begin (), s . end ()); cout << \"The reverse string value is: \" << s << endl ; return 0 ; } Reverse a string using Stack # \u6211\u4eec\u9996\u5148\u628aHELLO\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u7684\u653e\u5165\u6808\u4e2d \u7136\u540e\u8ba9\u6808\u91cc\u9762\u7684\u5b57\u7b26\u4ece\u6808\u9876\u4f9d\u6b21\u51fa\u6808\u5c31\u884c\u4e86\uff01 \u4e0b\u9762\u662f\u4ee3\u7801\u5b9e\u73b0 #include <iostream> #include <string> using namespace std ; class Stack { private : int MAX_SIZE = 5 ; char * stack = new char [ MAX_SIZE ]; int top = -1 ; public : void push_back ( char n ) { if ( top == MAX_SIZE - 1 ) { MAX_SIZE *= 2 ; char * newStack = new char [ MAX_SIZE ]; for ( int i = 0 ; i <= top ; i ++ ) { newStack [ i ] = stack [ i ]; } stack = newStack ; } top ++ ; stack [ top ] = n ; } char pop () { if ( top == -1 ) { return '\\0' ; } else { char temp = stack [ top ]; // \u5b58\u50a8\u6808\u9876\u5143\u7d20 top -- ; // \u5f39\u51fa\u6808\u9876\u5143\u7d20 return temp ; // \u8fd4\u56de\u88ab\u5f39\u51fa\u7684\u6808\u9876\u5143\u7d20 } } }; int main ( void ) { string s = \"hello\" ; Stack stack ; for ( char c : s ) { stack . push_back ( c ); } for ( int j = 0 ; j < s . size (); j ++ ) { cout << stack . pop (); } return 0 ; } Reverse a linklist using Stack # \u8ba9\u6211\u4eec\u60f3\u4e00\u60f3\u6211\u4eec\u4e4b\u524d\u662f\u600e\u4e48\u7ffb\u8f6c\u94fe\u8868\u7684\uff1f \u9996\u5148\uff0c\u51fd\u6570\u5224\u65ad\u94fe\u8868\u7684\u5934\u90e8\u662f\u5426\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u65e0\u9700\u8fdb\u884c\u7ffb\u8f6c\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\u8fd9\u4e00\u6b65\u7684\u5224\u65ad\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u94fe\u8868\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u7ffb\u8f6c\u94fe\u8868\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002 \u63a5\u7740\uff0c\u51fd\u6570\u5b9a\u4e49\u4e86\u4e09\u4e2a\u6307\u9488\u53d8\u91cf cur\u3001prev\u3001next\uff0c\u5b83\u4eec\u5206\u522b\u6307\u5411\u5f53\u524d\u8282\u70b9\u3001\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u7684\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u5176\u4e2d\uff0ccur \u53d8\u91cf\u521d\u59cb\u5316\u4e3a\u94fe\u8868\u7684\u5934\u90e8\uff0cprev \u53d8\u91cf\u521d\u59cb\u5316\u4e3a NULL\u3002 \u8fdb\u5165 while \u5faa\u73af\uff0c\u6bcf\u6b21\u5c06 next \u6307\u5411\u5f53\u524d\u8282\u70b9 cur \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5c06 cur \u7684 next \u6307\u9488\u6307\u5411 prev\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5f53\u524d\u8282\u70b9\u7684\u7ffb\u8f6c\u3002\u63a5\u7740\uff0c\u5c06 prev \u6307\u5411\u5f53\u524d\u8282\u70b9 cur\uff0ccur \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 next\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002\u8fd9\u6837\u4e0d\u65ad\u5730\u6267\u884c\uff0c\u76f4\u5230 cur \u6307\u5411\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u6574\u4e2a\u94fe\u8868\u5c31\u88ab\u7ffb\u8f6c\u4e86\u3002 \u6700\u540e\uff0c\u5c06\u94fe\u8868\u7684\u5934\u90e8\u6307\u5411\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u5934\u90e8 prev\uff0c\u5b8c\u6210\u94fe\u8868\u7684\u7ffb\u8f6c\u64cd\u4f5c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u60a8\u7684 Reverse() \u51fd\u6570\u91c7\u7528\u4e86\u8fed\u4ee3\u7684\u65b9\u5f0f\u7ffb\u8f6c\u94fe\u8868\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\uff0c\u6bcf\u6b21\u5c06\u5f53\u524d\u8282\u70b9\u7684 next \u6307\u9488\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u7ec8\u5b8c\u6210\u6574\u4e2a\u94fe\u8868\u7684\u7ffb\u8f6c\u3002 #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int num ); void Print (); void Reverse (); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); Print (); cout << \"Now we will reverse this linklist!\" << endl ; Reverse (); Print (); } void Insert ( int num ) { Node * temp = new Node (); temp -> data = num ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * cur = head ; while ( cur -> next != NULL ) { cur = cur -> next ; } cur -> next = temp ; } } void Print () { cout << \"The content in linklist:\" << endl ; Node * cur = head ; while ( cur != NULL ) { cout << cur -> data << \" \" ; cur = cur -> next ; } cout << endl ; } void Reverse () { if ( head == NULL || head -> next == NULL ) { cout << \"\u5143\u7d20\u6570\u91cf\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ffb\u8f6c!\" << endl ; return ; } Node * cur , * prev , * next ; cur = head ; prev = NULL ; while ( cur != NULL ) { next = cur -> next ; cur -> next = prev ; prev = cur ; cur = next ; } head = prev ; } \u90a3\u8be5\u5982\u4f55\u7528\u6808\u6765\u7ffb\u8f6c\u94fe\u8868\u5462\uff1f \u4f7f\u7528\u6808\u53ef\u4ee5\u5c06\u94fe\u8868\u7ffb\u8f6c\u4e3a\u9006\u5e8f\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u904d\u5386\u94fe\u8868\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6307\u9488\u4f9d\u6b21\u538b\u5165\u6808\u4e2d\u3002 \u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5c06\u5176\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u6808\u9876\u5143\u7d20\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u3002 \u8fd4\u56de\u94fe\u8868\u7684\u65b0\u5934\u8282\u70b9\u3002 #include <iostream> #include <stack> using namespace std ; // \u94fe\u8868\u8282\u70b9\u7ed3\u6784\u4f53 struct Node { int data ; // \u6570\u636e Node * next ; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 }; // \u94fe\u8868\u7c7b class LinkList { public : Node * head = nullptr ; // \u94fe\u8868\u7684\u5934\u8282\u70b9 // \u5728\u94fe\u8868\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9 void Insert ( int val ) { Node * temp = new Node (); // \u521b\u5efa\u65b0\u8282\u70b9 temp -> data = val ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e temp -> next = nullptr ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u9488\u4e3anullptr if ( head == nullptr ) // \u5982\u679c\u94fe\u8868\u4e3a\u7a7a { head = temp ; // \u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9 return ; } else // \u5982\u679c\u94fe\u8868\u4e0d\u4e3a\u7a7a { Node * cur = head ; while ( cur -> next != nullptr ) // \u904d\u5386\u94fe\u8868\u627e\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9 { cur = cur -> next ; } cur -> next = temp ; // \u5c06\u65b0\u8282\u70b9\u8fde\u63a5\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u9762 } } // \u6253\u5370\u94fe\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20 void Print () { Node * cur = head ; while ( cur != nullptr ) { cout << cur -> data << \" \" ; cur = cur -> next ; } } // \u5c06\u94fe\u8868\u9006\u5e8f void Reverse () { stack < Node *> s ; // \u521b\u5efa\u4e00\u4e2a\u6808\uff0c\u7528\u6765\u5b58\u50a8\u94fe\u8868\u4e2d\u7684\u6240\u6709\u8282\u70b9 Node * cur = head ; while ( cur != nullptr ) // \u5c06\u94fe\u8868\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u538b\u5165\u6808\u4e2d { s . push ( cur ); cur = cur -> next ; } head = s . top (); // \u5c06\u6808\u9876\u5143\u7d20\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u65b0\u5934\u8282\u70b9 s . pop (); cur = head ; // \u904d\u5386\u94fe\u8868\uff0c\u5c06\u6808\u4e2d\u7684\u8282\u70b9\u4f9d\u6b21\u5f39\u51fa\u5e76\u8fde\u63a5\u8d77\u6765 while ( ! s . empty ()) { cur -> next = s . top (); s . pop (); cur = cur -> next ; } cur -> next = nullptr ; // \u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u9488\u4e3anullptr } }; int main ( void ) { LinkList l ; // \u521b\u5efa\u4e00\u4e2a\u94fe\u8868\u5bf9\u8c61 // \u5411\u94fe\u8868\u4e2d\u63d2\u5165\u5143\u7d20 l . Insert ( 1 ); l . Insert ( 2 ); l . Insert ( 3 ); l . Insert ( 4 ); l . Insert ( 5 ); l . Insert ( 6 ); l . Insert ( 7 ); // \u6253\u5370\u539f\u59cb\u94fe\u8868 l . Print (); cout << endl ; // \u5c06\u94fe\u8868\u9006\u5e8f l . Reverse (); // \u6253\u5370\u9006\u5e8f\u540e\u7684\u94fe\u8868 l . Print (); cout << endl ; return 0 ; } \u7528\u6808\u68c0\u67e5\u62ec\u53f7\u662f\u5426\u5339\u914d # #include <iostream> #include <stack> #include <string> // \u62ec\u53f7\u5339\u914d\u51fd\u6570 bool paren ( const std :: string & input ) { std :: stack < char > s ; for ( const char c : input ) { // \u5de6\u62ec\u53f7\u5165\u6808 if ( c == '(' || c == '[' || c == '{' ) { s . push ( c ); continue ; } // \u53f3\u62ec\u53f7\u5339\u914d if ( s . empty () || ( c == ')' && s . top () != '(' ) || ( c == '}' && s . top () != '{' ) || ( c == ']' && s . top () != '[' )) { return false ; } // \u5339\u914d\u6210\u529f\uff0c\u5f39\u51fa\u5de6\u62ec\u53f7 s . pop (); } // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a return s . empty (); } int main () { const std :: string input1 = \"({[]})\" ; const std :: string input2 = \"({[})\" ; std :: cout << std :: boolalpha << paren ( input1 ) << '\\n' ; std :: cout << std :: boolalpha << paren ( input2 ) << '\\n' ; /* std::boolalpha \u662f\u4e00\u4e2a std::ios \u6807\u5fd7\uff0c\u7528\u4e8e\u6307\u793a\u6d41\u8f93\u51fa\u5e03\u5c14\u503c\u65f6\u4f7f\u7528\u6587\u5b57\u5f62\u5f0f\u8f93\u51fa\uff0c\u5373\u5c06 true \u8f93\u51fa\u4e3a \"true\"\uff0c\u5c06 false \u8f93\u51fa\u4e3a \"false\"\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d41\u8f93\u51fa\u5e03\u5c14\u503c\u65f6\u4f7f\u7528\u6574\u6570\u5f62\u5f0f\u8f93\u51fa\uff0c\u5373\u5c06 true \u8f93\u51fa\u4e3a 1\uff0c\u5c06 false \u8f93\u51fa\u4e3a 0\u3002\u5982\u679c\u9700\u8981\u8f93\u51fa\u6587\u5b57\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 std::boolalpha \u6807\u5fd7\u3002 \u5728\u4ee3\u7801\u4e2d\uff0cstd::cout << std::boolalpha << paren(input1) << '\\n'; \u8868\u793a\u5c06 std::boolalpha \u6807\u5fd7\u5e94\u7528\u5230 std::cout \u6d41\u4e0a\uff0c\u4ee5\u786e\u4fdd\u8f93\u51fa\u7684\u5e03\u5c14\u503c\u4f7f\u7528\u6587\u5b57\u5f62\u5f0f\u3002 */ return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u7684\u51fd\u6570 paren\uff0c\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u7531\u62ec\u53f7\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u62ec\u53f7\u662f\u5426\u5339\u914d\u3002 \u51fd\u6570 paren \u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32 input \u4f5c\u4e3a\u8f93\u5165\uff0c\u4f7f\u7528\u4e00\u4e2a\u6808 s \u5bf9\u6bcf\u4e2a\u5de6\u62ec\u53f7\u8fdb\u884c\u5165\u6808\u64cd\u4f5c\uff0c\u5e76\u5728\u9047\u5230\u53f3\u62ec\u53f7\u65f6\u8fdb\u884c\u5339\u914d\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u9047\u5230\u5de6\u62ec\u53f7\u65f6\uff0c\u5c06\u5176\u538b\u5165\u6808\u4e2d\uff1b\u5f53\u9047\u5230\u53f3\u62ec\u53f7\u65f6\uff0c\u5224\u65ad\u6808\u9876\u5143\u7d20\u662f\u5426\u4e0e\u8be5\u53f3\u62ec\u53f7\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5219\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \u5728 main \u51fd\u6570\u4e2d\uff0c\u58f0\u660e\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32 input1 \u548c input2\uff0c\u5206\u522b\u4e3a \"({[]})\" \u548c \"({[})\"\u3002\u7136\u540e\u5206\u522b\u8c03\u7528 paren \u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u6d41\u4e2d\u3002 std::boolalpha \u6807\u5fd7\u7528\u4e8e\u6307\u793a\u6d41\u8f93\u51fa\u5e03\u5c14\u503c\u65f6\u4f7f\u7528\u6587\u5b57\u5f62\u5f0f\u8f93\u51fa\uff0c\u5373\u5c06 true \u8f93\u51fa\u4e3a \"true\"\uff0c\u5c06 false \u8f93\u51fa\u4e3a \"false\"\u3002\u8fd9\u6837\u53ef\u4ee5\u4f7f\u8f93\u51fa\u66f4\u52a0\u76f4\u89c2\u3002 \u6700\u540e\u8fd4\u56de 0\uff0c\u8868\u793a\u7a0b\u5e8f\u6b63\u5e38\u9000\u51fa\u3002 \u4ec0\u4e48\u662f\u524d\u7f00\uff0c\u4e2d\u7f00\uff0c\u540e\u7f00 # https://zhuanlan.zhihu.com/p/37467928 \u5b66\u4e60\u8fd9\u91cc\u5efa\u8bae\u770b\u4e09\u54e5\u5f97\u8bfe https://www.bilibili.com/video/BV1Fv4y1f7T1?p=21&spm_id_from=pageDriver&vd_source=f7d0ce024b059d57a0319d78217fa104 **19-22**\u5c31\u662f\u8bb2\u8fd9\u4e9b\u5f97\uff0c\u5176\u4e2d\u6709\u4f2a\u4ee3\u7801 \u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff1a GPT\u5199\u7684 #include <iostream> #include <stack> #include <unordered_map> #include <vector> #include <sstream> #include <algorithm> bool isOperator ( const std :: string & token ) { static const std :: unordered_map < std :: string , int > operators = { { \"+\" , 1 }, { \"-\" , 1 }, { \"*\" , 2 }, { \"/\" , 2 }, { \"%\" , 2 }, { \"^\" , 3 } }; return operators . count ( token ) > 0 ; } bool isOperand ( const std :: string & token ) { return ! isOperator ( token ) && token != \"(\" && token != \")\" ; } int precedence ( const std :: string & op ) { static const std :: unordered_map < std :: string , int > operators = { { \"+\" , 1 }, { \"-\" , 1 }, { \"*\" , 2 }, { \"/\" , 2 }, { \"%\" , 2 }, { \"^\" , 3 } }; return operators . at ( op ); } std :: vector < std :: string > infixToPostfix ( const std :: vector < std :: string >& infix ) { std :: stack < std :: string > s ; std :: vector < std :: string > postfix ; for ( const auto & token : infix ) { if ( isOperand ( token )) { postfix . push_back ( token ); } else if ( token == \"(\" ) { s . push ( token ); } else if ( token == \")\" ) { while ( ! s . empty () && s . top () != \"(\" ) { postfix . push_back ( s . top ()); s . pop (); } if ( s . empty ()) { throw std :: runtime_error ( \"Unmatched parenthesis\" ); } s . pop (); } else if ( isOperator ( token )) { while ( ! s . empty () && s . top () != \"(\" && precedence ( token ) <= precedence ( s . top ())) { postfix . push_back ( s . top ()); s . pop (); } s . push ( token ); } } while ( ! s . empty ()) { if ( s . top () == \"(\" ) { throw std :: runtime_error ( \"Unmatched parenthesis\" ); } postfix . push_back ( s . top ()); s . pop (); } return postfix ; } int main () { std :: string input ; std :: getline ( std :: cin , input ); std :: vector < std :: string > tokens ; std :: istringstream iss ( input ); std :: string token ; while ( iss >> token ) { tokens . push_back ( token ); } const auto postfix = infixToPostfix ( tokens ); for ( const auto & token : postfix ) { std :: cout << token << \" \" ; } std :: cout << std :: endl ; return 0 ; } /* 3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3 3 4 2 * 1 5 - 2 ^ 3 ^ / + */ \u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff1a isOperator\uff1a\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u8fd0\u7b97\u7b26\u3002 isOperand\uff1a\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u64cd\u4f5c\u6570\u3002 precedence\uff1a\u83b7\u53d6\u4e00\u4e2a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u3002 infixToPostfix\uff1a\u5c06\u4e00\u4e2a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f\u3002 \u5728 infixToPostfix \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6808 s \u548c\u4e00\u4e2a\u8f93\u51fa\u5e8f\u5217 postfix\u3002\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u904d\u5386\u8f93\u5165\u7684\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u6570\uff0c\u76f4\u63a5\u5c06\u5176\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4ece\u6808\u4e2d\u5f39\u51fa\u4f18\u5148\u7ea7\u6bd4\u5b83\u9ad8\u6216\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\uff0c\u7136\u540e\u5c06\u5f53\u524d\u8fd0\u7b97\u7b26\u5165\u6808\u3002\u5bf9\u4e8e\u5de6\u62ec\u53f7\uff0c\u76f4\u63a5\u5165\u6808\uff1b\u5bf9\u4e8e\u53f3\u62ec\u53f7\uff0c\u6211\u4eec\u4ece\u6808\u4e2d\u5f39\u51fa\u8fd0\u7b97\u7b26\uff0c\u76f4\u5230\u9047\u5230\u5de6\u62ec\u53f7\uff0c\u5e76\u5c06\u5f39\u51fa\u7684\u8fd0\u7b97\u7b26\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\u3002\u5728\u904d\u5386\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c06\u6808\u4e2d\u6240\u6709\u5269\u4f59\u7684\u8fd0\u7b97\u7b26\u4f9d\u6b21\u5f39\u51fa\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\u3002 \u6700\u540e\uff0c\u6211\u4eec\u6309\u7167\u6b63\u5e8f\u904d\u5386\u8f93\u51fa\u5e8f\u5217\uff0c\u5373\u5f97\u5230\u4e86\u8f6c\u6362\u540e\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u8fd8\u8003\u8651\u4e86\u4e00\u4e9b\u9519\u8bef\u5904\u7406\u3002\u5982\u679c\u62ec\u53f7\u4e0d\u5339\u914d\uff0c\u7a0b\u5e8f\u5c06\u629b\u51fa\u4e00\u4e2a std::runtime_error \u5f02\u5e38\u3002","title":"\u6808"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u6808","text":"","title":"\u6808"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u7528\u6570\u7ec4\u5b9e\u73b0\u6808","text":"#include <iostream> using namespace std ; int MAX_SIZE = 10 ; // \u5b9a\u4e49\u6808\u7684\u6700\u5927\u5bb9\u91cf int * Stack = new int [ MAX_SIZE ]; // \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7a7a\u95f4 int top = -1 ; // \u6808\u9876\u6307\u9488\u521d\u59cb\u5316\u4e3a-1 void push_back ( int n ) { // \u5165\u6808\u64cd\u4f5c if ( top == MAX_SIZE - 1 ) { // \u5982\u679c\u6808\u5df2\u6ee1\uff0c\u6269\u5bb9\u4e24\u500d MAX_SIZE = 2 * MAX_SIZE ; int * newStack = new int [ MAX_SIZE ]; // \u52a8\u6001\u5206\u914d\u66f4\u5927\u7684\u6570\u7ec4\u7a7a\u95f4 for ( int i = 0 ; i <= top ; i ++ ) { // \u5c06\u539f\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230\u65b0\u6570\u7ec4\u4e2d newStack [ i ] = Stack [ i ]; } Stack = newStack ; // \u5c06\u6307\u9488\u6307\u5411\u65b0\u6570\u7ec4\u7684\u9996\u5730\u5740 } top = top + 1 ; // \u6808\u9876\u6307\u9488\u52a01 Stack [ top ] = n ; // \u5c06\u5143\u7d20\u538b\u5165\u6808\u9876 } void pop () { // \u51fa\u6808\u64cd\u4f5c top = top - 1 ; // \u6808\u9876\u6307\u9488\u51cf1 } bool IsEmpty () { // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a if ( top == -1 ) { // \u6808\u9876\u6307\u9488\u4e3a-1\u65f6\uff0c\u6808\u4e3a\u7a7a return true ; } return false ; } int top_element () { // \u8fd4\u56de\u6808\u9876\u5143\u7d20 return Stack [ top ]; } int search ( int n ) { // \u67e5\u627e\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e for ( int i = 0 ; i <= top ; i ++ ) { // \u4ece\u6808\u5e95\u5f00\u59cb\u904d\u5386\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20 if ( Stack [ i ] == n ) { // \u5982\u679c\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20 return i ; // \u8fd4\u56de\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e } } return -1 ; // \u5426\u5219\u8fd4\u56de-1 } int main ( void ) { // \u6d4b\u8bd5\u4ee3\u7801 for ( int i = 0 ; i < 200 ; i ++ ) { // \u5165\u6808200\u4e2a\u5143\u7d20 push_back ( i ); } while ( ! IsEmpty ()) { // \u51fa\u6808\u5e76\u8f93\u51fa\u5143\u7d20 cout << top_element () << \" \" ; pop (); } cout << search ( 3 ) << endl ; // \u67e5\u627e\u5143\u7d203\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e delete [] Stack ; // \u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4\u7a7a\u95f4 return 0 ; } \u4e3a\u4e86\u66f4\u52a0\u6e05\u6670\u660e\u4e86\uff0c\u6211\u5199\u4e86\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e86\u548c\u4e0a\u9762\u4e00\u6837\u7684\u529f\u80fd stack_array_v2.cpp #include <iostream> using namespace std ; class Stack { private : int MAX_SIZE = 10 ; // \u5b9a\u4e49\u6808\u7684\u6700\u5927\u5bb9\u91cf int * Stack = new int [ MAX_SIZE ]; // \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7a7a\u95f4 int top = -1 ; public : void push_back ( int val ) { if ( top >= MAX_SIZE - 1 ) { MAX_SIZE *= 2 ; int * newStack = new int [ MAX_SIZE ]; for ( int i = 0 ; i <= top ; i ++ ) { newStack [ i ] = Stack [ i ]; } Stack = newStack ; } top ++ ; Stack [ top ] = val ; } void pop () { top -- ; } bool is_empty () { return top == -1 ; // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a } int top_element () { return Stack [ top ]; } int search ( int n ) { // \u67e5\u627e\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e for ( int i = 0 ; i <= top ; i ++ ) { // \u4ece\u6808\u5e95\u5f00\u59cb\u904d\u5386\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20 if ( Stack [ i ] == n ) { // \u5982\u679c\u627e\u5230\u6307\u5b9a\u7684\u5143\u7d20 return i ; // \u8fd4\u56de\u5143\u7d20\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e } } return -1 ; // \u5426\u5219\u8fd4\u56de-1 } }; int main ( void ) { Stack s ; for ( int i = 0 ; i <= 200 ; i ++ ) { s . push_back ( i ); } while ( ! s . is_empty ()) { cout << s . top_element () << \" \" ; s . pop (); } return 0 ; }","title":"\u7528\u6570\u7ec4\u5b9e\u73b0\u6808"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u7528\u94fe\u8868\u5b9e\u73b0\u6808","text":"#include <iostream> struct Node { int data ; Node * next ; }; class Stack { private : Node * top ; public : Stack () { top = nullptr ; } void push ( int val ) { Node * node = new Node (); node -> data = val ; node -> next = top ; top = node ; } void pop () { if ( top != nullptr ) { Node * node = top ; top = top -> next ; delete node ; } } int topVal () { if ( top != nullptr ) { return top -> data ; } else { return -1 ; } } bool isEmpty () { return top == nullptr ; } }; int main ( void ) { Stack s ; for ( int i = 0 ; i < 200 ; i ++ ) { s . push ( i ); } while ( ! s . isEmpty ()) { std :: cout << s . topVal () << std :: endl ; s . pop (); } }","title":"\u7528\u94fe\u8868\u5b9e\u73b0\u6808"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u7ffb\u8f6c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u7ffb\u8f6c\u4e00\u4e2a\u94fe\u8868\u7528\u6808\u5b9e\u73b0","text":"","title":"\u7ffb\u8f6c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u7ffb\u8f6c\u4e00\u4e2a\u94fe\u8868(\u7528\u6808\u5b9e\u73b0)"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#reverse-a-string-in-default","text":"\u4f8b\u5982\uff1a hello -> olleh","title":"Reverse a string in default"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u7ffb\u8f6c\u5b57\u7b26\u4e32\u7684\u5e38\u89c4\u505a\u6cd5","text":"#include <iostream> #include <string> using namespace std ; void reverse_string ( string & s ) { int len = s . length (); for ( int i = 0 ; i < len / 2 ; i ++ ) { char temp = s [ i ]; s [ i ] = s [ len - i - 1 ]; s [ len - i - 1 ] = temp ; } } int main ( void ) { string s = \"hello\" ; cout << \"The valine of s is: \" << s << endl ; reverse_string ( s ); cout << \"The reverse result of s is: \" << s << endl ; return 0 ; } #include <iostream> #include <string> #include <algorithm> using namespace std ; int main ( void ) { string s = \"hello\" ; cout << \"The valine string value is: \" << s << endl ; s . reverse ( s . begin (), s . end ()); cout << \"The reverse string value is: \" << s << endl ; return 0 ; }","title":"\u7ffb\u8f6c\u5b57\u7b26\u4e32\u7684\u5e38\u89c4\u505a\u6cd5"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#reverse-a-string-using-stack","text":"\u6211\u4eec\u9996\u5148\u628aHELLO\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u7684\u653e\u5165\u6808\u4e2d \u7136\u540e\u8ba9\u6808\u91cc\u9762\u7684\u5b57\u7b26\u4ece\u6808\u9876\u4f9d\u6b21\u51fa\u6808\u5c31\u884c\u4e86\uff01 \u4e0b\u9762\u662f\u4ee3\u7801\u5b9e\u73b0 #include <iostream> #include <string> using namespace std ; class Stack { private : int MAX_SIZE = 5 ; char * stack = new char [ MAX_SIZE ]; int top = -1 ; public : void push_back ( char n ) { if ( top == MAX_SIZE - 1 ) { MAX_SIZE *= 2 ; char * newStack = new char [ MAX_SIZE ]; for ( int i = 0 ; i <= top ; i ++ ) { newStack [ i ] = stack [ i ]; } stack = newStack ; } top ++ ; stack [ top ] = n ; } char pop () { if ( top == -1 ) { return '\\0' ; } else { char temp = stack [ top ]; // \u5b58\u50a8\u6808\u9876\u5143\u7d20 top -- ; // \u5f39\u51fa\u6808\u9876\u5143\u7d20 return temp ; // \u8fd4\u56de\u88ab\u5f39\u51fa\u7684\u6808\u9876\u5143\u7d20 } } }; int main ( void ) { string s = \"hello\" ; Stack stack ; for ( char c : s ) { stack . push_back ( c ); } for ( int j = 0 ; j < s . size (); j ++ ) { cout << stack . pop (); } return 0 ; }","title":"Reverse a string using Stack"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#reverse-a-linklist-using-stack","text":"\u8ba9\u6211\u4eec\u60f3\u4e00\u60f3\u6211\u4eec\u4e4b\u524d\u662f\u600e\u4e48\u7ffb\u8f6c\u94fe\u8868\u7684\uff1f \u9996\u5148\uff0c\u51fd\u6570\u5224\u65ad\u94fe\u8868\u7684\u5934\u90e8\u662f\u5426\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u65e0\u9700\u8fdb\u884c\u7ffb\u8f6c\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\u8fd9\u4e00\u6b65\u7684\u5224\u65ad\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u94fe\u8868\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u7ffb\u8f6c\u94fe\u8868\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002 \u63a5\u7740\uff0c\u51fd\u6570\u5b9a\u4e49\u4e86\u4e09\u4e2a\u6307\u9488\u53d8\u91cf cur\u3001prev\u3001next\uff0c\u5b83\u4eec\u5206\u522b\u6307\u5411\u5f53\u524d\u8282\u70b9\u3001\u5f53\u524d\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\u7684\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u5176\u4e2d\uff0ccur \u53d8\u91cf\u521d\u59cb\u5316\u4e3a\u94fe\u8868\u7684\u5934\u90e8\uff0cprev \u53d8\u91cf\u521d\u59cb\u5316\u4e3a NULL\u3002 \u8fdb\u5165 while \u5faa\u73af\uff0c\u6bcf\u6b21\u5c06 next \u6307\u5411\u5f53\u524d\u8282\u70b9 cur \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5c06 cur \u7684 next \u6307\u9488\u6307\u5411 prev\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5f53\u524d\u8282\u70b9\u7684\u7ffb\u8f6c\u3002\u63a5\u7740\uff0c\u5c06 prev \u6307\u5411\u5f53\u524d\u8282\u70b9 cur\uff0ccur \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 next\uff0c\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002\u8fd9\u6837\u4e0d\u65ad\u5730\u6267\u884c\uff0c\u76f4\u5230 cur \u6307\u5411\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u6574\u4e2a\u94fe\u8868\u5c31\u88ab\u7ffb\u8f6c\u4e86\u3002 \u6700\u540e\uff0c\u5c06\u94fe\u8868\u7684\u5934\u90e8\u6307\u5411\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u5934\u90e8 prev\uff0c\u5b8c\u6210\u94fe\u8868\u7684\u7ffb\u8f6c\u64cd\u4f5c\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u60a8\u7684 Reverse() \u51fd\u6570\u91c7\u7528\u4e86\u8fed\u4ee3\u7684\u65b9\u5f0f\u7ffb\u8f6c\u94fe\u8868\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\uff0c\u6bcf\u6b21\u5c06\u5f53\u524d\u8282\u70b9\u7684 next \u6307\u9488\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u6700\u7ec8\u5b8c\u6210\u6574\u4e2a\u94fe\u8868\u7684\u7ffb\u8f6c\u3002 #include <iostream> using namespace std ; struct Node { int data ; Node * next ; }; Node * head ; void Insert ( int num ); void Print (); void Reverse (); int main ( void ) { head = NULL ; Insert ( 1 ); Insert ( 2 ); Insert ( 3 ); Insert ( 4 ); Insert ( 5 ); Insert ( 6 ); Print (); cout << \"Now we will reverse this linklist!\" << endl ; Reverse (); Print (); } void Insert ( int num ) { Node * temp = new Node (); temp -> data = num ; temp -> next = NULL ; if ( head == NULL ) { head = temp ; } else { Node * cur = head ; while ( cur -> next != NULL ) { cur = cur -> next ; } cur -> next = temp ; } } void Print () { cout << \"The content in linklist:\" << endl ; Node * cur = head ; while ( cur != NULL ) { cout << cur -> data << \" \" ; cur = cur -> next ; } cout << endl ; } void Reverse () { if ( head == NULL || head -> next == NULL ) { cout << \"\u5143\u7d20\u6570\u91cf\u4e0d\u8db3\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ffb\u8f6c!\" << endl ; return ; } Node * cur , * prev , * next ; cur = head ; prev = NULL ; while ( cur != NULL ) { next = cur -> next ; cur -> next = prev ; prev = cur ; cur = next ; } head = prev ; } \u90a3\u8be5\u5982\u4f55\u7528\u6808\u6765\u7ffb\u8f6c\u94fe\u8868\u5462\uff1f \u4f7f\u7528\u6808\u53ef\u4ee5\u5c06\u94fe\u8868\u7ffb\u8f6c\u4e3a\u9006\u5e8f\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u904d\u5386\u94fe\u8868\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6307\u9488\u4f9d\u6b21\u538b\u5165\u6808\u4e2d\u3002 \u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5c06\u5176\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u6808\u9876\u5143\u7d20\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u3002 \u8fd4\u56de\u94fe\u8868\u7684\u65b0\u5934\u8282\u70b9\u3002 #include <iostream> #include <stack> using namespace std ; // \u94fe\u8868\u8282\u70b9\u7ed3\u6784\u4f53 struct Node { int data ; // \u6570\u636e Node * next ; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488 }; // \u94fe\u8868\u7c7b class LinkList { public : Node * head = nullptr ; // \u94fe\u8868\u7684\u5934\u8282\u70b9 // \u5728\u94fe\u8868\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9 void Insert ( int val ) { Node * temp = new Node (); // \u521b\u5efa\u65b0\u8282\u70b9 temp -> data = val ; // \u8bbe\u7f6e\u65b0\u8282\u70b9\u7684\u6570\u636e temp -> next = nullptr ; // \u65b0\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u9488\u4e3anullptr if ( head == nullptr ) // \u5982\u679c\u94fe\u8868\u4e3a\u7a7a { head = temp ; // \u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9 return ; } else // \u5982\u679c\u94fe\u8868\u4e0d\u4e3a\u7a7a { Node * cur = head ; while ( cur -> next != nullptr ) // \u904d\u5386\u94fe\u8868\u627e\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9 { cur = cur -> next ; } cur -> next = temp ; // \u5c06\u65b0\u8282\u70b9\u8fde\u63a5\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u9762 } } // \u6253\u5370\u94fe\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20 void Print () { Node * cur = head ; while ( cur != nullptr ) { cout << cur -> data << \" \" ; cur = cur -> next ; } } // \u5c06\u94fe\u8868\u9006\u5e8f void Reverse () { stack < Node *> s ; // \u521b\u5efa\u4e00\u4e2a\u6808\uff0c\u7528\u6765\u5b58\u50a8\u94fe\u8868\u4e2d\u7684\u6240\u6709\u8282\u70b9 Node * cur = head ; while ( cur != nullptr ) // \u5c06\u94fe\u8868\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u538b\u5165\u6808\u4e2d { s . push ( cur ); cur = cur -> next ; } head = s . top (); // \u5c06\u6808\u9876\u5143\u7d20\u8bbe\u7f6e\u4e3a\u94fe\u8868\u7684\u65b0\u5934\u8282\u70b9 s . pop (); cur = head ; // \u904d\u5386\u94fe\u8868\uff0c\u5c06\u6808\u4e2d\u7684\u8282\u70b9\u4f9d\u6b21\u5f39\u51fa\u5e76\u8fde\u63a5\u8d77\u6765 while ( ! s . empty ()) { cur -> next = s . top (); s . pop (); cur = cur -> next ; } cur -> next = nullptr ; // \u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u6307\u9488\u4e3anullptr } }; int main ( void ) { LinkList l ; // \u521b\u5efa\u4e00\u4e2a\u94fe\u8868\u5bf9\u8c61 // \u5411\u94fe\u8868\u4e2d\u63d2\u5165\u5143\u7d20 l . Insert ( 1 ); l . Insert ( 2 ); l . Insert ( 3 ); l . Insert ( 4 ); l . Insert ( 5 ); l . Insert ( 6 ); l . Insert ( 7 ); // \u6253\u5370\u539f\u59cb\u94fe\u8868 l . Print (); cout << endl ; // \u5c06\u94fe\u8868\u9006\u5e8f l . Reverse (); // \u6253\u5370\u9006\u5e8f\u540e\u7684\u94fe\u8868 l . Print (); cout << endl ; return 0 ; }","title":"Reverse a linklist using Stack"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u7528\u6808\u68c0\u67e5\u62ec\u53f7\u662f\u5426\u5339\u914d","text":"#include <iostream> #include <stack> #include <string> // \u62ec\u53f7\u5339\u914d\u51fd\u6570 bool paren ( const std :: string & input ) { std :: stack < char > s ; for ( const char c : input ) { // \u5de6\u62ec\u53f7\u5165\u6808 if ( c == '(' || c == '[' || c == '{' ) { s . push ( c ); continue ; } // \u53f3\u62ec\u53f7\u5339\u914d if ( s . empty () || ( c == ')' && s . top () != '(' ) || ( c == '}' && s . top () != '{' ) || ( c == ']' && s . top () != '[' )) { return false ; } // \u5339\u914d\u6210\u529f\uff0c\u5f39\u51fa\u5de6\u62ec\u53f7 s . pop (); } // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a return s . empty (); } int main () { const std :: string input1 = \"({[]})\" ; const std :: string input2 = \"({[})\" ; std :: cout << std :: boolalpha << paren ( input1 ) << '\\n' ; std :: cout << std :: boolalpha << paren ( input2 ) << '\\n' ; /* std::boolalpha \u662f\u4e00\u4e2a std::ios \u6807\u5fd7\uff0c\u7528\u4e8e\u6307\u793a\u6d41\u8f93\u51fa\u5e03\u5c14\u503c\u65f6\u4f7f\u7528\u6587\u5b57\u5f62\u5f0f\u8f93\u51fa\uff0c\u5373\u5c06 true \u8f93\u51fa\u4e3a \"true\"\uff0c\u5c06 false \u8f93\u51fa\u4e3a \"false\"\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d41\u8f93\u51fa\u5e03\u5c14\u503c\u65f6\u4f7f\u7528\u6574\u6570\u5f62\u5f0f\u8f93\u51fa\uff0c\u5373\u5c06 true \u8f93\u51fa\u4e3a 1\uff0c\u5c06 false \u8f93\u51fa\u4e3a 0\u3002\u5982\u679c\u9700\u8981\u8f93\u51fa\u6587\u5b57\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 std::boolalpha \u6807\u5fd7\u3002 \u5728\u4ee3\u7801\u4e2d\uff0cstd::cout << std::boolalpha << paren(input1) << '\\n'; \u8868\u793a\u5c06 std::boolalpha \u6807\u5fd7\u5e94\u7528\u5230 std::cout \u6d41\u4e0a\uff0c\u4ee5\u786e\u4fdd\u8f93\u51fa\u7684\u5e03\u5c14\u503c\u4f7f\u7528\u6587\u5b57\u5f62\u5f0f\u3002 */ return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u7684\u51fd\u6570 paren\uff0c\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u7531\u62ec\u53f7\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u62ec\u53f7\u662f\u5426\u5339\u914d\u3002 \u51fd\u6570 paren \u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32 input \u4f5c\u4e3a\u8f93\u5165\uff0c\u4f7f\u7528\u4e00\u4e2a\u6808 s \u5bf9\u6bcf\u4e2a\u5de6\u62ec\u53f7\u8fdb\u884c\u5165\u6808\u64cd\u4f5c\uff0c\u5e76\u5728\u9047\u5230\u53f3\u62ec\u53f7\u65f6\u8fdb\u884c\u5339\u914d\u64cd\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u9047\u5230\u5de6\u62ec\u53f7\u65f6\uff0c\u5c06\u5176\u538b\u5165\u6808\u4e2d\uff1b\u5f53\u9047\u5230\u53f3\u62ec\u53f7\u65f6\uff0c\u5224\u65ad\u6808\u9876\u5143\u7d20\u662f\u5426\u4e0e\u8be5\u53f3\u62ec\u53f7\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5219\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \u5728 main \u51fd\u6570\u4e2d\uff0c\u58f0\u660e\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32 input1 \u548c input2\uff0c\u5206\u522b\u4e3a \"({[]})\" \u548c \"({[})\"\u3002\u7136\u540e\u5206\u522b\u8c03\u7528 paren \u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u6d41\u4e2d\u3002 std::boolalpha \u6807\u5fd7\u7528\u4e8e\u6307\u793a\u6d41\u8f93\u51fa\u5e03\u5c14\u503c\u65f6\u4f7f\u7528\u6587\u5b57\u5f62\u5f0f\u8f93\u51fa\uff0c\u5373\u5c06 true \u8f93\u51fa\u4e3a \"true\"\uff0c\u5c06 false \u8f93\u51fa\u4e3a \"false\"\u3002\u8fd9\u6837\u53ef\u4ee5\u4f7f\u8f93\u51fa\u66f4\u52a0\u76f4\u89c2\u3002 \u6700\u540e\u8fd4\u56de 0\uff0c\u8868\u793a\u7a0b\u5e8f\u6b63\u5e38\u9000\u51fa\u3002","title":"\u7528\u6808\u68c0\u67e5\u62ec\u53f7\u662f\u5426\u5339\u914d"},{"location":"Blogs/meowrain/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/stack/#\u4ec0\u4e48\u662f\u524d\u7f00\u4e2d\u7f00\u540e\u7f00","text":"https://zhuanlan.zhihu.com/p/37467928 \u5b66\u4e60\u8fd9\u91cc\u5efa\u8bae\u770b\u4e09\u54e5\u5f97\u8bfe https://www.bilibili.com/video/BV1Fv4y1f7T1?p=21&spm_id_from=pageDriver&vd_source=f7d0ce024b059d57a0319d78217fa104 **19-22**\u5c31\u662f\u8bb2\u8fd9\u4e9b\u5f97\uff0c\u5176\u4e2d\u6709\u4f2a\u4ee3\u7801 \u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff1a GPT\u5199\u7684 #include <iostream> #include <stack> #include <unordered_map> #include <vector> #include <sstream> #include <algorithm> bool isOperator ( const std :: string & token ) { static const std :: unordered_map < std :: string , int > operators = { { \"+\" , 1 }, { \"-\" , 1 }, { \"*\" , 2 }, { \"/\" , 2 }, { \"%\" , 2 }, { \"^\" , 3 } }; return operators . count ( token ) > 0 ; } bool isOperand ( const std :: string & token ) { return ! isOperator ( token ) && token != \"(\" && token != \")\" ; } int precedence ( const std :: string & op ) { static const std :: unordered_map < std :: string , int > operators = { { \"+\" , 1 }, { \"-\" , 1 }, { \"*\" , 2 }, { \"/\" , 2 }, { \"%\" , 2 }, { \"^\" , 3 } }; return operators . at ( op ); } std :: vector < std :: string > infixToPostfix ( const std :: vector < std :: string >& infix ) { std :: stack < std :: string > s ; std :: vector < std :: string > postfix ; for ( const auto & token : infix ) { if ( isOperand ( token )) { postfix . push_back ( token ); } else if ( token == \"(\" ) { s . push ( token ); } else if ( token == \")\" ) { while ( ! s . empty () && s . top () != \"(\" ) { postfix . push_back ( s . top ()); s . pop (); } if ( s . empty ()) { throw std :: runtime_error ( \"Unmatched parenthesis\" ); } s . pop (); } else if ( isOperator ( token )) { while ( ! s . empty () && s . top () != \"(\" && precedence ( token ) <= precedence ( s . top ())) { postfix . push_back ( s . top ()); s . pop (); } s . push ( token ); } } while ( ! s . empty ()) { if ( s . top () == \"(\" ) { throw std :: runtime_error ( \"Unmatched parenthesis\" ); } postfix . push_back ( s . top ()); s . pop (); } return postfix ; } int main () { std :: string input ; std :: getline ( std :: cin , input ); std :: vector < std :: string > tokens ; std :: istringstream iss ( input ); std :: string token ; while ( iss >> token ) { tokens . push_back ( token ); } const auto postfix = infixToPostfix ( tokens ); for ( const auto & token : postfix ) { std :: cout << token << \" \" ; } std :: cout << std :: endl ; return 0 ; } /* 3 + 4 * 2 / ( 1 - 5 ) ^ 2 ^ 3 3 4 2 * 1 5 - 2 ^ 3 ^ / + */ \u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff1a isOperator\uff1a\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u8fd0\u7b97\u7b26\u3002 isOperand\uff1a\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u64cd\u4f5c\u6570\u3002 precedence\uff1a\u83b7\u53d6\u4e00\u4e2a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u3002 infixToPostfix\uff1a\u5c06\u4e00\u4e2a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f\u3002 \u5728 infixToPostfix \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6808 s \u548c\u4e00\u4e2a\u8f93\u51fa\u5e8f\u5217 postfix\u3002\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u904d\u5386\u8f93\u5165\u7684\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u6570\uff0c\u76f4\u63a5\u5c06\u5176\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4ece\u6808\u4e2d\u5f39\u51fa\u4f18\u5148\u7ea7\u6bd4\u5b83\u9ad8\u6216\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\uff0c\u7136\u540e\u5c06\u5f53\u524d\u8fd0\u7b97\u7b26\u5165\u6808\u3002\u5bf9\u4e8e\u5de6\u62ec\u53f7\uff0c\u76f4\u63a5\u5165\u6808\uff1b\u5bf9\u4e8e\u53f3\u62ec\u53f7\uff0c\u6211\u4eec\u4ece\u6808\u4e2d\u5f39\u51fa\u8fd0\u7b97\u7b26\uff0c\u76f4\u5230\u9047\u5230\u5de6\u62ec\u53f7\uff0c\u5e76\u5c06\u5f39\u51fa\u7684\u8fd0\u7b97\u7b26\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\u3002\u5728\u904d\u5386\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c06\u6808\u4e2d\u6240\u6709\u5269\u4f59\u7684\u8fd0\u7b97\u7b26\u4f9d\u6b21\u5f39\u51fa\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u8f93\u51fa\u5e8f\u5217\u4e2d\u3002 \u6700\u540e\uff0c\u6211\u4eec\u6309\u7167\u6b63\u5e8f\u904d\u5386\u8f93\u51fa\u5e8f\u5217\uff0c\u5373\u5f97\u5230\u4e86\u8f6c\u6362\u540e\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u8fd8\u8003\u8651\u4e86\u4e00\u4e9b\u9519\u8bef\u5904\u7406\u3002\u5982\u679c\u62ec\u53f7\u4e0d\u5339\u914d\uff0c\u7a0b\u5e8f\u5c06\u629b\u51fa\u4e00\u4e2a std::runtime_error \u5f02\u5e38\u3002","title":"\u4ec0\u4e48\u662f\u524d\u7f00\uff0c\u4e2d\u7f00\uff0c\u540e\u7f00"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/about-ai/","text":"\u53ef\u7528\u7684AI # AI wiki ChatGPT # ChatGPT \u662f\u4e00\u79cd\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6280\u672f\u7684\u804a\u5929\u673a\u5668\u4eba\uff0c\u5b83\u662f\u7531 OpenAI \u5f00\u53d1\u7684\u3002\u5b83\u4f7f\u7528\u4e86 OpenAI GPT\uff08Generative Pre-training Transformer\uff09\u6a21\u578b\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u53ef\u4ee5\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u76f8\u4f3c\u7684\u81ea\u7136\u8bed\u8a00\u6587\u672c\u3002 ChatGPT \u7684\u5de5\u4f5c\u539f\u7406\u662f\u5c06\u7528\u6237\u7684\u8f93\u5165\u6587\u672c\u4f5c\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u4f7f\u7528 GPT \u6a21\u578b\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u76f8\u4f3c\u7684\u81ea\u7136\u8bed\u8a00\u56de\u590d\u3002ChatGPT \u53ef\u4ee5\u7528\u4e8e\u591a\u79cd\u5e94\u7528\u573a\u666f\uff0c\u5982\u667a\u80fd\u5ba2\u670d\u3001\u8bed\u97f3\u52a9\u624b\u3001\u865a\u62df\u4eba\u7269\u7b49\u3002 ChatGPT \u7684\u4f18\u70b9\u5305\u62ec\uff1a \u81ea\u7136\u8bed\u8a00\u5904\u7406\u80fd\u529b\u5f3a\uff1aChatGPT \u57fa\u4e8e GPT \u6a21\u578b\uff0c\u53ef\u4ee5\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u76f8\u4f3c\u7684\u81ea\u7136\u8bed\u8a00\u56de\u590d\uff0c\u80fd\u591f\u7406\u89e3\u81ea\u7136\u8bed\u8a00\u7684\u542b\u4e49\u548c\u4e0a\u4e0b\u6587\u3002 \u53ef\u6269\u5c55\u6027\u5f3a\uff1aChatGPT \u53ef\u4ee5\u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u7684\u589e\u52a0\u548c\u6a21\u578b\u7684\u4f18\u5316\u6765\u63d0\u9ad8\u5176\u6027\u80fd\u548c\u51c6\u786e\u6027\u3002 \u4ea4\u4e92\u6027\u597d\uff1aChatGPT \u53ef\u4ee5\u4e0e\u7528\u6237\u8fdb\u884c\u5b9e\u65f6\u4ea4\u4e92\uff0c\u80fd\u591f\u5feb\u901f\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u548c\u95ee\u9898\u3002 Newbing # newbing \u5fae\u8f6f \u81ea\u884c\u4e86\u89e3 Claude # Claude \u4f7f\u7528\u65b9\u6cd5 Bito # Bito \u5b98\u7f51","title":"\u53ef\u7528\u7684AI"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/about-ai/#\u53ef\u7528\u7684ai","text":"AI wiki","title":"\u53ef\u7528\u7684AI"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/about-ai/#chatgpt","text":"ChatGPT \u662f\u4e00\u79cd\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6280\u672f\u7684\u804a\u5929\u673a\u5668\u4eba\uff0c\u5b83\u662f\u7531 OpenAI \u5f00\u53d1\u7684\u3002\u5b83\u4f7f\u7528\u4e86 OpenAI GPT\uff08Generative Pre-training Transformer\uff09\u6a21\u578b\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u53ef\u4ee5\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u76f8\u4f3c\u7684\u81ea\u7136\u8bed\u8a00\u6587\u672c\u3002 ChatGPT \u7684\u5de5\u4f5c\u539f\u7406\u662f\u5c06\u7528\u6237\u7684\u8f93\u5165\u6587\u672c\u4f5c\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u4f7f\u7528 GPT \u6a21\u578b\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u76f8\u4f3c\u7684\u81ea\u7136\u8bed\u8a00\u56de\u590d\u3002ChatGPT \u53ef\u4ee5\u7528\u4e8e\u591a\u79cd\u5e94\u7528\u573a\u666f\uff0c\u5982\u667a\u80fd\u5ba2\u670d\u3001\u8bed\u97f3\u52a9\u624b\u3001\u865a\u62df\u4eba\u7269\u7b49\u3002 ChatGPT \u7684\u4f18\u70b9\u5305\u62ec\uff1a \u81ea\u7136\u8bed\u8a00\u5904\u7406\u80fd\u529b\u5f3a\uff1aChatGPT \u57fa\u4e8e GPT \u6a21\u578b\uff0c\u53ef\u4ee5\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u76f8\u4f3c\u7684\u81ea\u7136\u8bed\u8a00\u56de\u590d\uff0c\u80fd\u591f\u7406\u89e3\u81ea\u7136\u8bed\u8a00\u7684\u542b\u4e49\u548c\u4e0a\u4e0b\u6587\u3002 \u53ef\u6269\u5c55\u6027\u5f3a\uff1aChatGPT \u53ef\u4ee5\u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u7684\u589e\u52a0\u548c\u6a21\u578b\u7684\u4f18\u5316\u6765\u63d0\u9ad8\u5176\u6027\u80fd\u548c\u51c6\u786e\u6027\u3002 \u4ea4\u4e92\u6027\u597d\uff1aChatGPT \u53ef\u4ee5\u4e0e\u7528\u6237\u8fdb\u884c\u5b9e\u65f6\u4ea4\u4e92\uff0c\u80fd\u591f\u5feb\u901f\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u548c\u95ee\u9898\u3002","title":"ChatGPT"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/about-ai/#newbing","text":"newbing \u5fae\u8f6f \u81ea\u884c\u4e86\u89e3","title":"Newbing"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/about-ai/#claude","text":"Claude \u4f7f\u7528\u65b9\u6cd5","title":"Claude"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/about-ai/#bito","text":"Bito \u5b98\u7f51","title":"Bito"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/","text":"\u4f7f\u7528GPT # Free ChatGPT Site List \u8c03\u6559 AI # \ud83e\udde0ChatGPT \u4e2d\u6587\u8c03\u6559\u6307\u5357 Learing Prompt ChatGPT shortcut \u5f88\u597d\u7528\u7684\u641c\u7d22\u5f15\u64ce # \u4f20\u7edf\u641c\u7d22\u5f15\u64ce # Google bing Baidu AI\u641c\u7d22\u5f15\u64ce # you.com Phind \u597d\u7528\u7684\u4eba\u5de5\u667a\u80fd\u7f51\u7ad9 # \u804a\u5929AI https://www.pm-ai.cn/prd https://app.writesonic.com/ https://chat.openai.com \u641c\u7d22\u5f15\u64ce https://you.com/ https://www.perplexity.ai/","title":"\u4f7f\u7528GPT"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/#\u4f7f\u7528gpt","text":"Free ChatGPT Site List","title":"\u4f7f\u7528GPT"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/#\u8c03\u6559-ai","text":"\ud83e\udde0ChatGPT \u4e2d\u6587\u8c03\u6559\u6307\u5357 Learing Prompt ChatGPT shortcut","title":"\u8c03\u6559 AI"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/#\u5f88\u597d\u7528\u7684\u641c\u7d22\u5f15\u64ce","text":"","title":"\u5f88\u597d\u7528\u7684\u641c\u7d22\u5f15\u64ce"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/#\u4f20\u7edf\u641c\u7d22\u5f15\u64ce","text":"Google bing Baidu","title":"\u4f20\u7edf\u641c\u7d22\u5f15\u64ce"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/#ai\u641c\u7d22\u5f15\u64ce","text":"you.com Phind","title":"AI\u641c\u7d22\u5f15\u64ce"},{"location":"%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%94%E7%94%A8/use-ai/#\u597d\u7528\u7684\u4eba\u5de5\u667a\u80fd\u7f51\u7ad9","text":"\u804a\u5929AI https://www.pm-ai.cn/prd https://app.writesonic.com/ https://chat.openai.com \u641c\u7d22\u5f15\u64ce https://you.com/ https://www.perplexity.ai/","title":"\u597d\u7528\u7684\u4eba\u5de5\u667a\u80fd\u7f51\u7ad9"},{"location":"%E5%85%AC%E5%BC%80%E8%AF%BE/","text":"\u7f51\u7edc\u516c\u5f00\u8bfe\u63a8\u8350 # \u8ba1\u7b97\u673a\u76f8\u5173\u7684\u76f4\u63a5\u53bb\u770b csdiy.wiki","title":"\u7f51\u7edc\u516c\u5f00\u8bfe\u63a8\u8350"},{"location":"%E5%85%AC%E5%BC%80%E8%AF%BE/#\u7f51\u7edc\u516c\u5f00\u8bfe\u63a8\u8350","text":"\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u76f4\u63a5\u53bb\u770b csdiy.wiki","title":"\u7f51\u7edc\u516c\u5f00\u8bfe\u63a8\u8350"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/Front-end/","text":"\u524d\u7aef\u5b66\u4e60\u4e00\u4e9b\u4e0d\u9519\u7684\u6587\u6863\u7f51\u7ad9\u6c47\u603b # \u2b50MDN WEB DOCS \u2b50 \u5b58\u7740\u5f88\u591a\u524d\u7aef\u6587\u6863 \u2b50 \u5c0f\u706b\u67f4\u524d\u7aef\u5c0f\u7ad9 \u2b50 \u524d\u7aef\u77e5\u8bc6\u56fe\u8c31 w3schools \u4e00\u4e9b\u540c\u5b66\u53ef\u80fd\u82f1\u8bed\u80fd\u529b\u4e0d\u592a\u597d\uff0c\u53ef\u4ee5\u770b\u8fd9\u4e2a,\u4e2a\u4eba\u8ba4\u4e3a\u6536\u85cf\u7684\u5f88\u597d \u2b50 \u5370\u8bb0\u4e2d\u6587\u5b98\u65b9\u516c\u4f17\u53f7 \u4e0a\u9762\u8fd9\u4e2a\u662f\u6846\u67b6\u6587\u6863","title":"\u524d\u7aef\u5b66\u4e60\u4e00\u4e9b\u4e0d\u9519\u7684\u6587\u6863\u7f51\u7ad9\u6c47\u603b"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/Front-end/#\u524d\u7aef\u5b66\u4e60\u4e00\u4e9b\u4e0d\u9519\u7684\u6587\u6863\u7f51\u7ad9\u6c47\u603b","text":"\u2b50MDN WEB DOCS \u2b50 \u5b58\u7740\u5f88\u591a\u524d\u7aef\u6587\u6863 \u2b50 \u5c0f\u706b\u67f4\u524d\u7aef\u5c0f\u7ad9 \u2b50 \u524d\u7aef\u77e5\u8bc6\u56fe\u8c31 w3schools \u4e00\u4e9b\u540c\u5b66\u53ef\u80fd\u82f1\u8bed\u80fd\u529b\u4e0d\u592a\u597d\uff0c\u53ef\u4ee5\u770b\u8fd9\u4e2a,\u4e2a\u4eba\u8ba4\u4e3a\u6536\u85cf\u7684\u5f88\u597d \u2b50 \u5370\u8bb0\u4e2d\u6587\u5b98\u65b9\u516c\u4f17\u53f7 \u4e0a\u9762\u8fd9\u4e2a\u662f\u6846\u67b6\u6587\u6863","title":"\u524d\u7aef\u5b66\u4e60\u4e00\u4e9b\u4e0d\u9519\u7684\u6587\u6863\u7f51\u7ad9\u6c47\u603b"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%85%B6%E5%AE%83/Typescript-learn/","text":"Typescript\u5b66\u4e60 # \u2b50 Typescript GuideBook \u2b50 Typescript \u5165\u95e8\u6559\u7a0b","title":"Typescript\u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%85%B6%E5%AE%83/Typescript-learn/#typescript\u5b66\u4e60","text":"\u2b50 Typescript GuideBook \u2b50 Typescript \u5165\u95e8\u6559\u7a0b","title":"Typescript\u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%85%B6%E5%AE%83/nodejs-learn/","text":"Nodejs \u5b66\u4e60 # package.json \u7248\u672c\u53f7\u89c4\u5219 # \u2b50package.json \u7248\u672c\u53f7\u89c4\u5219","title":"Nodejs \u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%85%B6%E5%AE%83/nodejs-learn/#nodejs-\u5b66\u4e60","text":"","title":"Nodejs \u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%85%B6%E5%AE%83/nodejs-learn/#packagejson-\u7248\u672c\u53f7\u89c4\u5219","text":"\u2b50package.json \u7248\u672c\u53f7\u89c4\u5219","title":"package.json \u7248\u672c\u53f7\u89c4\u5219"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/","text":"\u524d\u7aef\u4e09\u4ef6\u5957 # HTML # CSS # JAVASCRIPT # https://github.com/trekhleb/javascript-algorithms/blob/master/README.zh-CN.md \u4e0a\u9762\u662fJAVASCIRPT\u7b97\u6cd5\u5b66\u4e60","title":"\u524d\u7aef\u4e09\u4ef6\u5957"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/#\u524d\u7aef\u4e09\u4ef6\u5957","text":"","title":"\u524d\u7aef\u4e09\u4ef6\u5957"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/#html","text":"","title":"HTML"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/#css","text":"","title":"CSS"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/#javascript","text":"https://github.com/trekhleb/javascript-algorithms/blob/master/README.zh-CN.md \u4e0a\u9762\u662fJAVASCIRPT\u7b97\u6cd5\u5b66\u4e60","title":"JAVASCRIPT"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/react/react-learn/","text":"React \u5b66\u4e60 # \u2b50React GuideBook \u2b50React \u5b98\u65b9\u6587\u6863 \u2b50 \u674e\u7acb\u8d85\u8001\u5e08\u7684 React \u8bfe\u7a0b \u2b50React \u4e2d\u6587\u6587\u6863 https://www.reactiflux.com/learning","title":"React \u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/react/react-learn/#react-\u5b66\u4e60","text":"\u2b50React GuideBook \u2b50React \u5b98\u65b9\u6587\u6863 \u2b50 \u674e\u7acb\u8d85\u8001\u5e08\u7684 React \u8bfe\u7a0b \u2b50React \u4e2d\u6587\u6587\u6863 https://www.reactiflux.com/learning","title":"React \u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/vue/vue-learn/","text":"Vue \u5b66\u4e60 # \u2b50 Vue GuideBook \u2b50 Vue \u5b98\u65b9\u6587\u6863","title":"Vue \u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/vue/vue-learn/#vue-\u5b66\u4e60","text":"\u2b50 Vue GuideBook \u2b50 Vue \u5b98\u65b9\u6587\u6863","title":"Vue \u5b66\u4e60"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/","text":"MYSQL # DDL \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 # \u6570\u636e\u5e93\u76f8\u5173\u547d\u4ee4 # CREATE DATABASE IF NOT EXISTS myDB ; -- \u521b\u5efa\u6570\u636e\u5e93 USE myDB ; -- \u4f7f\u7528\u5f53\u524d\u6570\u636e\u5e93 DROP DATABASE myDB ; -- \u5220\u9664\u6570\u636e\u5e93 \u8868\u76f8\u5173\u547d\u4ee4 # \u663e\u793a\u8868 # SHOW TABLES ; \u521b\u5efa\u8868 # CREATE TABLE employees ( employee_id INT , first_name VARCHAR ( 50 ), last_name VARCHAR ( 50 ), hourly_pay DECIMAL ( 5 , 2 ), hire_date DATE ); \u91cd\u547d\u540d\u8868 # RENAME TABLE employees TO workers ; \u5220\u9664\u8868 # DROP TABLE employees ; \u66f4\u6539\u8868 # ALTER TABLE employees ADD phone_number VARCHAR ( 15 ); \u4fee\u6539\u5b57\u6bb5\u540d ALTER TABLE employees CHANGE COLUMN ` email ` ` emails ` varchar ( 120 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER ` phone_number ` ; \u4fee\u6539\u5b57\u6bb5\u6570\u636e\u7c7b\u578b ALTER TABLE employees MODIFY COLUMN ` email ` VARCHAR ( 300 ); \u79fb\u52a8\u5b57\u6bb5\u540d\u4f4d\u7f6e ALTER TABLE employees MODIFY COLUMN ` email ` VARCHAR ( 300 ) AFTER hire_date ; SELECT * FROM employees ; \u5220\u9664\u5b57\u6bb5\u540d ALTER TABLE employees DROP COLUMN ` email ` ; SELECT * FROM employees ; DML \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 # \u63d2\u5165\u6570\u636e # INSERT INTO employees VALUES ( 1 , \"Eugene\" , \"Krabs\" , 25 . 50 , \"2023-05-01\" , \"12345677889\" , \"meowrian@126.com\" ), ( 2 , \"rain\" , \"meow\" , 30 . 20 , \"2023-04-30\" , \"17456778901\" , \"meowrain@sf.com\" ), ( 3 , \"Smith\" , \"Johm\" , 45 . 20 , \"2022-12-20\" , \"18890997652\" , \"meow@google.com\" ); SELECT * FROM employees ; \u63d2\u5165\u90e8\u5206\u6570\u636e INSERT INTO employees ( employee_id , first_name , last_name ) VALUES ( 4 , \"Smith\" , \"Mike\" ); SELECT * FROM employees ; \u4fee\u6539\u6570\u636e UPDATE # UPDATE employees SET hourly_pay = 10 . 25 WHERE employee_id = 1 ; SELECT * FROM employees ; \u5220\u9664\u6570\u636e DELETE # DELETE FROM employees WHERE last_name = 'Kate' ; SELECT * FROM employees ; \u63d2\u5165\u65f6\u95f4\u6570\u636e \u521b\u5efa\u8868 CREATE TABLE time ( my_date DATE , my_time TIME , my_datetime DATETIME ); SELECT * FROM time ; \u63d2\u5165\u6570\u636e\uff0c\u5e76\u4e14\u67e5\u8be2\u7ed3\u679c INSERT INTO time VALUES ( CURRENT_DATE (), CURRENT_TIME (), NOW () ); SELECT * FROM time ; \u8fd9\u6837\u53ef\u4ee5\u63d2\u5165\u7b2c\u4e8c\u5929\u7684\u65e5\u671f\u6570\u636e DQL \u6570\u636e\u67e5\u8be2\u8bed\u8a00 # SELECT \u67e5\u8be2\u8bed\u53e5 # SELECT first_name , last_name FROM employees ; \u901a\u8fc7\u4e0a\u9762\u7684\u8fd9\u4e2a\u547d\u4ee4\uff0c\u6211\u5c31\u80fd\u62ff\u5230\u6570\u636e\u5e93\u4e2d\u5df2\u7ecf\u5b58\u50a8\u7684\u6240\u6709\u4eba\u540d\u4e86 SELECT + WHERE # SELECT * FROM employees WHERE employee_id = 1 ; \u901a\u8fc7\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u5c31\u80fd\u83b7\u53d6\u5230 id \u4e3a 1 \u7684\u8fd9\u4e2a\u5458\u5de5\u7684\u6240\u6709\u6570\u636e\u4e86\uff0c\u5f53\u7136\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u540d\u5b57\u67e5\u627e SELECT * FROM employees WHERE first_name = 'Eugene' AND last_name = 'Krabs' ; \u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u627e\u5230\u96c7\u4f63\u65e5\u671f\u4e0d\u662f NULL \u7684\u6240\u6709\u4eba\u7684\u4fe1\u606f SELECT * FROM employees WHERE hire_date IS NOT NULL ; \u5173\u4e8e UNIQUE # \u5728\u521b\u5efa\u8868\u65f6\uff0c UNIQUE \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\u3002 CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ) UNIQUE , price DECIMAL ( 4 , 2 ) ); -- \u5728\u521b\u5efa\u8868\u65f6\uff0c UNIQUE \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\u3002\u5728\u8fd9\u91cc\u7684\u4f8b\u5b50\u4e2d\uff0c UNIQUE \u5173\u952e\u5b57\u5f3a\u5236 product_name \u5217\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u6709\u76f8\u540c\u7684 product_name \u503c\u5b58\u5728\u4e8e\u8be5\u8868\u4e2d\u7684\u4e0d\u540c\u884c\u4e2d\u3002\u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u8fdd\u53cd\u6b64\u9650\u5236\uff0c\u5c06\u4f1a\u51fa\u73b0\u552f\u4e00\u952e\u51b2\u7a81\u9519\u8bef\u3002 CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ), price DECIMAL ( 4 , 2 ) ); -- \u5728\u521b\u5efa\u8868\u65f6\uff0c UNIQUE \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\u3002\u5728\u8fd9\u91cc\u7684\u4f8b\u5b50\u4e2d\uff0c UNIQUE \u5173\u952e\u5b57\u5f3a\u5236 product_name \u5217\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u6709\u76f8\u540c\u7684 product_name \u503c\u5b58\u5728\u4e8e\u8be5\u8868\u4e2d\u7684\u4e0d\u540c\u884c\u4e2d\u3002\u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u8fdd\u53cd\u6b64\u9650\u5236\uff0c\u5c06\u4f1a\u51fa\u73b0\u552f\u4e00\u952e\u51b2\u7a81\u9519\u8bef\u3002 ALTER TABLE products ADD CONSTRAINT UNIQUE ( product_name ); -- \u8fd9\u662f\u4e00\u4e2a SQL \u8bed\u53e5\uff0c\u5b83\u7684\u610f\u601d\u662f\u5728\u540d\u4e3a \"products\" \u7684\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a \"product_name\" \u7684\u552f\u4e00\u7ea6\u675f (UNIQUE CONSTRAINT)\u3002\u8fd9\u610f\u5473\u7740\u5728\u8be5\u8868\u4e2d\uff0c\u6bcf\u4e2a\u4ea7\u54c1\u540d\u79f0\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\u5982\u679c\u5c1d\u8bd5\u63d2\u5165\u5177\u6709\u76f8\u540c\u4ea7\u54c1\u540d\u79f0\u7684\u884c\uff0c\u5219\u4f1a\u89e6\u53d1\u552f\u4e00\u7ea6\u675f\uff0c\u4ece\u800c\u9632\u6b62\u9519\u8bef\u6570\u636e\u7684\u63d2\u5165\u3002 SELECT * FROM products ; \u63a5\u4e0b\u6765\u5b9e\u6218\u4e00\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230 unique \u6709\u4ec0\u4e48\u4f5c\u7528 \u8fd9\u6837\u5199\u5c31\u6b63\u5e38\u4e86 \u5173\u4e8e NOT NULL # NOT NULL \u7ea6\u675f\u7528\u4e8e\u4fdd\u8bc1\u5217\u7684\u503c\u4e0d\u80fd\u4e3a\u7a7a(NULL)\u3002\u5b83\u7684\u8bed\u6cd5\u683c\u5f0f\u4e3a: sql column_name datatype NOT NULL CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ), price DECIMAL ( 4 , 2 ) NOT NULL ); CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ), price DECIMAL ( 4 , 2 ) ); ALTER TABLE products MODIFY price DECIMAL ( 4 , 2 ) NOT NULL ; \u5b9e\u6218\u62a5\u9519\uff1a \u6b63\u786e\u6f14\u793a\uff1a \u5173\u4e8e CHECK # CHECK \u7ea6\u675f\u7528\u4e8e\u9650\u5236\u5217\u4e2d\u7684\u503c\u8303\u56f4,\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u3002\u5b83\u7684\u8bed\u6cd5\u683c\u5f0f\u4e3a: column_name datatype CHECK ( condition ) condition \u662f\u8981\u6c42\u5217\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6,\u53ef\u4ee5\u662f\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3001BETWEEN\u3001IN \u8fd0\u7b97\u7b26\u7b49\u3002 \u521b\u5efa CREATE TABLE employees_test ( employee_id INT , first_name VARCHAR ( 50 ), last_name VARCHAR ( 50 ), hourly_pay DECIMAL ( 5 , 2 ), hire_date DATE , CONSTRAINT chk_hourly_pay CHECK ( hourly_pay >= 10 . 00 ) ); \u8ffd\u52a0 ALTER TABLE employees ADD CONSTRAINT chk_hourly_pay CHECK ( hourly_pay >= 10 . 00 ); \u5728 MySQL \u4e2d\uff0cCHECK \u7ea6\u675f\u662f\u88ab\u652f\u6301\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u88ab\u5b9e\u9645\u6267\u884c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u4f60\u5728\u521b\u5efa\u8868\u65f6\u5b9a\u4e49\u4e86 CHECK \u7ea6\u675f\uff0c\u4f46\u662f MySQL \u5e76\u4e0d\u4f1a\u5728\u63d2\u5165\u6570\u636e\u65f6\u6267\u884c\u8be5\u7ea6\u675f\uff0c\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u4f60\u63d2\u5165\u4e86\u4e0d\u7b26\u5408 CHECK \u7ea6\u675f\u7684\u6570\u636e\uff0cMySQL \u4e5f\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u662f\u4f1a\u7ee7\u7eed\u63d2\u5165\u8be5\u6570\u636e\u3002 \u5173\u4e8e DEFAULT # \u5728 SQL \u4e2d,DEFAULT \u5173\u952e\u5b57\u7528\u4e8e\u4e3a\u5217\u5b9a\u4e49\u9ed8\u8ba4\u503c\u3002\u5f53\u5411\u8868\u4e2d\u63d2\u5165\u65b0\u884c\u65f6,\u5982\u679c\u672a\u663e\u5f0f\u4e3a\u67d0\u5217\u6307\u5b9a\u503c,\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503c\u4f7f\u6211\u4eec\u65e0\u9700\u6bcf\u6b21\u63d2\u5165\u65b0\u884c\u65f6\u90fd\u6307\u5b9a\u6bcf\u4e2a\u5217\u7684\u503c,\u6709\u52a9\u4e8e\u7b80\u5316\u63d2\u5165\u8bed\u53e5\u548c\u63d0\u9ad8\u6548\u7387\u3002 CREATE TABLE products ( product_id INT , product_name VARCHAR ( 50 ), price DECIMAL ( 4 , 2 ) DEFAULT 0 ); \u5982\u679c\u8868\u5df2\u7ecf\u5b58\u5728 ALTER TABLE products ALTER price SET DEFAULT 0 \u6211\u4eec\u63d2\u5165\u6570\u636e INSERT INTO products ( product_id , product_name ) VALUES ( 104 , \"straw\" ),( 105 , \"napkin\" ),( 106 , \"fork\" ),( 106 , \"spoon\" ); SELECT * FROM products ; \u5173\u4e8e PRIMARY KEY # \u5728 SQL \u4e2d\uff0cPRIMARY KEY\uff08\u4e3b\u952e\uff09\u662f\u4e00\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u7528\u4e8e\u6807\u8bc6\u8868\u4e2d\u7684\u4e00\u5217\u6216\u591a\u5217\uff0c\u5b83\u4eec\u7684\u503c\u552f\u4e00\u6807\u8bc6\u6bcf\u884c\u6570\u636e\u3002\u4e3b\u952e\u53ef\u4ee5\u786e\u4fdd\u8868\u4e2d\u6bcf\u884c\u6570\u636e\u7684\u552f\u4e00\u6027\uff0c\u56e0\u6b64\u5b83\u901a\u5e38\u88ab\u7528\u4f5c\u8868\u4e2d\u7684\u7d22\u5f15\u3002\u4e3b\u952e\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\uff0c\u4f46\u901a\u5e38\u90fd\u662f\u4f7f\u7528\u5355\u4e2a\u5217\u4f5c\u4e3a\u4e3b\u952e\u3002 \u5728\u521b\u5efa\u8868\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e3b\u952e\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5217\u6216\u591a\u4e2a\u5217\u7684\u7ec4\u5408\u3002\u4e3b\u952e\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\uff1a \u5728\u5217\u5b9a\u4e49\u65f6\uff0c\u4f7f\u7528 PRIMARY KEY \u5173\u952e\u5b57\u5c06\u8be5\u5217\u6307\u5b9a\u4e3a\u4e3b\u952e\u3002 \u5728\u5217\u5b9a\u4e49\u540e\uff0c\u4f7f\u7528 ALTER TABLE \u547d\u4ee4\u5c06\u5217\u6307\u5b9a\u4e3a\u4e3b\u952e\u3002 \u4e00\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u4e3b\u952e\u7684\u503c\u4e0d\u80fd\u4e3a NULL\uff0c\u56e0\u4e3a\u4e3b\u952e\u7528\u4e8e\u6807\u8bc6\u6bcf\u884c\u6570\u636e\uff0c\u5982\u679c\u4e3b\u952e\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u552f\u4e00\u6807\u8bc6\u6bcf\u884c\u6570\u636e\u3002\u5982\u679c\u8981\u5728\u8868\u4e2d\u4f7f\u7528\u591a\u4e2a\u5217\u4f5c\u4e3a\u4e3b\u952e\uff0c\u53ef\u4ee5\u4f7f\u7528\u590d\u5408\u4e3b\u952e\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5217\u7684\u503c\u7684\u7ec4\u5408\u5fc5\u987b\u552f\u4e00\u6807\u8bc6\u6bcf\u884c\u6570\u636e\u3002 \u4e3b\u952e\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u5916\u952e\uff0c\u5916\u952e\u662f\u4e00\u4e2a\u8868\u4e2d\u7684\u5217\uff0c\u5b83\u5f15\u7528\u53e6\u4e00\u4e2a\u8868\u4e2d\u7684\u4e3b\u952e\u5217\u3002\u5916\u952e\u7528\u4e8e\u786e\u4fdd\u8868\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u4e8e\u9632\u6b62\u5728\u4e00\u4e2a\u8868\u4e2d\u63d2\u5165\u65e0\u6548\u7684\u6570\u636e\uff0c\u4ee5\u53ca\u5728\u5220\u9664\u4e00\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u76f8\u5173\u7684\u6570\u636e\u3002 \u4e3b\u952e\u662f\u552f\u4e00\u4e14\u4e0d\u80fd\u4e3a\u7a7a\u7684 \u4e3b\u952e\u662f\u4e00\u79cd\u552f\u4e00\u4e14\u4e0d\u80fd\u4e3a\u7a7a\u7684\u6807\u8bc6\u7b26\uff0c\u53ef\u4ee5\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u6570\u636e\u3002\u5c31\u50cf\u4eba\u4eec\u7684\u8eab\u4efd\u8bc1\u53f7\u4e00\u6837\uff0c\u6bcf\u4e2a\u4eba\u7684\u8eab\u4efd\u8bc1\u53f7\u90fd\u662f\u552f\u4e00\u7684\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u4eba\u3002\u540c\u6837\u5730\uff0c\u6bcf\u884c\u6570\u636e\u7684\u4e3b\u952e\u4e5f\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u8be5\u884c\u6570\u636e\u3002\u4e3b\u952e\u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7ec4\u6210\uff0c\u4f46\u6bcf\u4e2a\u4e3b\u952e\u503c\u7684\u7ec4\u5408\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002 CREATE TABLE transactions ( transaction_id INT PRIMARY KEY , amount DECIMAL ( 5 , 2 ) ); SELECT * FROM transactions ; \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u8868\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 id \u4e3a\u4e3b\u952e ALTER TABLE transactions ADD CONSTRAINT PRIMARY KEY ( transaction_id ); SELECT * FROM transactions ; \u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4e3b\u952e\u4e0d\u80fd\u4e3a NULL \u5173\u4e8e AUTO_INCREAMENT # \u5728 MySQL \u4e2d\uff0cAUTO_INCREMENT \u662f\u4e00\u79cd\u5217\u5c5e\u6027\uff0c\u5b83\u53ef\u4ee5\u4e3a\u8868\u4e2d\u7684\u67d0\u4e00\u5217\u6307\u5b9a\u4e00\u4e2a\u81ea\u52a8\u589e\u957f\u7684\u6574\u6570\u503c\uff0c\u6bcf\u6b21\u63d2\u5165\u65b0\u8bb0\u5f55\u65f6\uff0c\u8be5\u5217\u7684\u503c\u90fd\u4f1a\u81ea\u52a8\u9012\u589e\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cAUTO_INCREMENT \u5c5e\u6027\u5e94\u8be5\u7528\u4e8e\u5b9a\u4e49\u4e3b\u952e\u5217\uff0c\u4ee5\u786e\u4fdd\u6bcf\u884c\u6570\u636e\u90fd\u6709\u552f\u4e00\u7684\u6807\u8bc6\u7b26\u3002 \u53ef\u4ee5\u901a\u8fc7\u5728\u8868\u5b9a\u4e49\u4e2d\u4f7f\u7528 AUTO_INCREMENT \u5173\u952e\u5b57\u6765\u4e3a\u8868\u4e2d\u7684\u67d0\u4e2a\u5217\u6307\u5b9a\u81ea\u52a8\u589e\u957f\u5c5e\u6027\uff0c\u4f8b\u5982\uff1a CREATE TABLE customers ( id INT AUTO_INCREMENT PRIMARY KEY , name VARCHAR ( 50 ), email VARCHAR ( 50 ) ); \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cid \u5217\u88ab\u6307\u5b9a\u4e3a\u4e3b\u952e\uff0c\u5e76\u4f7f\u7528 AUTO_INCREMENT \u5c5e\u6027\uff0c\u56e0\u6b64\u6bcf\u6b21\u63d2\u5165\u65b0\u8bb0\u5f55\u65f6\uff0cid \u5217\u7684\u503c\u90fd\u4f1a\u81ea\u52a8\u9012\u589e\u3002 CREATE TABLE transactions ( transaction_id INT PRIMARY KEY AUTO_INCREMENT , amount DECIMAL ( 5 , 2 ) ); SELECT * FROM transactions ; INSERT INTO transactions ( amount ) VALUES ( 4 . 99 ),( 5 . 43 ),( 3 . 22 ); SELECT * FROM transactions ; \u8bbe\u7f6e\u81ea\u589e\u8d77\u59cb\u503c ALTER TABLE transactions AUTO_INCREMENT = 1000 ; INSERT INTO transactions ( amount ) VALUES ( 4 . 23 ),( 5 . 66 ),( 5 . 78 ),( 7 . 32 ); SELECT * FROM transactions ; \u5173\u4e8e FOREIGN KEY # \u5728 MySQL \u4e2d\uff0cFOREIGN KEY\uff08\u5916\u952e\uff09\u662f\u4e00\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u8868\u7684\u5217\u4e0e\u53e6\u4e00\u4e2a\u8868\u7684\u5217\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5916\u952e\u7528\u4e8e\u786e\u4fdd\u8868\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u4e8e\u9632\u6b62\u5728\u4e00\u4e2a\u8868\u4e2d\u63d2\u5165\u65e0\u6548\u7684\u6570\u636e\uff0c\u4ee5\u53ca\u5728\u5220\u9664\u4e00\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u76f8\u5173\u7684\u6570\u636e\u3002 \u5916\u952e\u901a\u5e38\u7528\u4e8e\u5efa\u7acb\u8868\u4e0e\u8868\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u4f8b\u5982\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5916\u952e\u5c06\u4e00\u5f20\u8868\u4e2d\u7684\u5217\u4e0e\u53e6\u4e00\u5f20\u8868\u4e2d\u7684\u4e3b\u952e\u5217\u5173\u8054\u8d77\u6765\u3002\u5728 MySQL \u4e2d\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u8868\u65f6\u4f7f\u7528 FOREIGN KEY \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u5916\u952e\uff0c\u4f8b\u5982\uff1a CREATE TABLE orders ( order_id INT PRIMARY KEY , customer_id INT , order_date DATE , FOREIGN KEY ( customer_id ) REFERENCES customers ( id ) ); \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0corders \u8868\u4e2d\u7684 customer_id \u5217\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5916\u952e\uff0c\u5b83\u5f15\u7528\u4e86 customers \u8868\u4e2d\u7684 id \u5217\u3002\u8fd9\u610f\u5473\u7740\uff0corders \u8868\u4e2d\u7684\u6bcf\u4e2a customer_id \u503c\u5fc5\u987b\u5b58\u5728\u4e8e customers \u8868\u7684 id \u5217\u4e2d\u3002\u5982\u679c\u5c1d\u8bd5\u5411 orders \u8868\u4e2d\u63d2\u5165\u4e00\u4e2a customer_id \u503c\uff0c\u800c\u8be5\u503c\u4e0d\u5b58\u5728\u4e8e customers \u8868\u4e2d\u7684 id \u5217\u4e2d\uff0c\u5219\u4f1a\u5f15\u53d1\u4e00\u4e2a\u9519\u8bef\u3002 \u6848\u4f8b\uff1a \u521b\u5efa customers \u8868 CREATE TABLE customers ( customer_id INT PRIMARY KEY AUTO_INCREMENT , first_name VARCHAR ( 50 ), last_name VARCHAR ( 50 ) ); SELECT * FROM customers ; \u63d2\u5165\u6570\u636e\u5230 customers \u8868 INSERT INTO customers ( first_name , last_name ) VALUES ( \"Fred\" , \"Fish\" ), ( \"Larry\" , \"Lobster\" ), ( \"Bubble\" , \"Bass\" ); SELECT * FROM customers ; \u521b\u5efa transaction \u8868 CREATE TABLE transactions ( transaction_id INT PRIMARY KEY AUTO_INCREMENT , amount DECIMAL ( 5 , 2 ), customer_id INT , FOREIGN KEY ( customer_id ) REFERENCES customers ( customer_id ) ); SELECT * FROM transactions ; \u63d2\u5165\u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u5220\u9664 customers \u8868\u4e2d\u7684\u4e00\u4e2a\u4eba\uff0c\u4f46\u662f\u8fd9\u4e2a\u4eba\u548c transactions \u4e2d\u7684\u4e00\u4e2a\u5b57\u6bb5\u76f8\u5173\u8054 \u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u62a5\u9519 \u5173\u4e8e JOINS # \u5728 MySQL \u4e2d\uff0cJOIN \u662f\u4e00\u79cd\u7528\u4e8e\u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u64cd\u4f5c\u3002JOIN \u64cd\u4f5c\u57fa\u4e8e\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5b83\u5c06\u4e00\u5f20\u8868\u4e2d\u7684\u6570\u636e\u4e0e\u53e6\u4e00\u5f20\u8868\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5339\u914d\uff0c\u4ee5\u4fbf\u4ece\u8fd9\u4e9b\u8868\u4e2d\u68c0\u7d22\u76f8\u5173\u7684\u6570\u636e\u3002 MySQL \u4e2d\u6709\u591a\u79cd\u7c7b\u578b\u7684 JOIN \u64cd\u4f5c\uff0c\u5305\u62ec INNER JOIN\u3001LEFT JOIN\u3001RIGHT JOIN \u548c FULL OUTER JOIN\u3002\u4e0b\u9762\u662f\u5404\u79cd JOIN \u64cd\u4f5c\u7684\u8bf4\u660e\uff1a INNER JOIN\uff1a\u8fd4\u56de\u4e24\u4e2a\u8868\u4e2d\u5339\u914d\u7684\u884c\u3002\u5b83\u53ea\u8fd4\u56de\u4e24\u4e2a\u8868\u4e2d\u90fd\u5b58\u5728\u7684\u884c\u3002 SELECT * FROM table1 INNER JOIN table2 ON table1 . column = table2 . column ; LEFT JOIN\uff1a\u8fd4\u56de\u5de6\u8868\u4e2d\u7684\u6240\u6709\u884c\u4ee5\u53ca\u53f3\u8868\u4e2d\u5339\u914d\u7684\u884c\u3002\u5982\u679c\u53f3\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c\u5219\u8fd4\u56de NULL \u503c\u3002 SELECT * FROM table1 LEFT JOIN table2 ON table1 . column = table2 . column ; RIGHT JOIN\uff1a\u8fd4\u56de\u53f3\u8868\u4e2d\u7684\u6240\u6709\u884c\u4ee5\u53ca\u5de6\u8868\u4e2d\u5339\u914d\u7684\u884c\u3002\u5982\u679c\u5de6\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c\u5219\u8fd4\u56de NULL \u503c\u3002 SELECT * FROM table1 RIGHT JOIN table2 ON table1 . column = table2 . column ; FULL OUTER JOIN\uff1a\u8fd4\u56de\u4e24\u4e2a\u8868\u4e2d\u7684\u6240\u6709\u884c\u3002\u5982\u679c\u67d0\u4e2a\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c\u5219\u8fd4\u56de NULL \u503c\u3002 SELECT * FROM table1 FULL OUTER JOIN table2 ON table1 . column = table2 . column ; \u5728\u4f7f\u7528 JOIN \u64cd\u4f5c\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u901a\u5e38\u901a\u8fc7\u4f7f\u7528 ON \u5173\u952e\u5b57\u6765\u5b9e\u73b0\u3002ON \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a SELECT * FROM orders INNER JOIN customers ON orders . customer_id = customers . id ; \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0corders \u8868\u548c customers \u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u662f orders.customer_id = customers.id \u3002\u8fd9\u610f\u5473\u7740\uff0c\u53ea\u6709 orders \u8868\u4e2d\u7684 customer_id \u503c\u4e0e customers \u8868\u4e2d\u7684 id \u503c\u5339\u914d\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de\u76f8\u5173\u7684\u884c\u3002 JOIN \u64cd\u4f5c\u4e5f\u53ef\u4ee5\u4f7f\u7528 WHERE \u5b50\u53e5\u6765\u6307\u5b9a\u5173\u8054\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a SELECT * FROM orders , customers WHERE orders . customer_id = customers . id ; \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0corders \u8868\u548c customers \u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u662f orders.customer_id = customers.id \u3002\u8fd9\u79cd\u5199\u6cd5\u4e0e\u4f7f\u7528 INNER JOIN \u64cd\u4f5c\u662f\u7b49\u4ef7\u7684\u3002 INNER JOIN \u5b9e\u6218 # \u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b transactions \u8868\u548c customers \u8868\u4e2d\u7684\u5185\u5bb9 SELECT * FROM transactions INNER JOIN customers ON transactions . customer_id = customers . customer_id ; \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u8fd9\u6837\u62fc\u8d77\u6765\uff0c\u5c31\u80fd\u6e05\u6670\u7684\u83b7\u5f97\u5230\u7528\u6237\u7684 transaction_id \u8fd8\u6709 name \uff0c\u4ee5\u53ca\u6d88\u8d39\u7684 amount \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 customer_id \u8fd9\u4e2a\u5c5e\u6027\u628a\u4e24\u4e2a\u8868\u8fde\u63a5\u8d77\u6765 \u5b9e\u6218 LEFT JOIN\uff0cRIGHT JOIN # \u73b0\u5728\u6211\u4eec\u5f80 transactions \u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u6ca1\u6709 customer_id \u5c5e\u6027\u7684\u5b57\u6bb5 INNER JOIN \u7ed3\u679c\u662f\u8fd9\u6837\u7684 LEFT JOIN \u662f\u8fd9\u6837\u7684 RIGHT JOIN \u662f\u8fd9\u6837\u7684 \u5173\u4e8e ON # \u5728 MySQL \u4e2d\uff0cON \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u3002\u5728\u4f7f\u7528 JOIN \u64cd\u4f5c\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u901a\u5e38\u901a\u8fc7\u4f7f\u7528 ON \u5173\u952e\u5b57\u6765\u5b9e\u73b0\u3002 ON \u5173\u952e\u5b57\u540e\u9762\u7684\u6761\u4ef6\u6307\u5b9a\u4e86\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6761\u4ef6\u3002\u4f8b\u5982\uff1a SELECT * FROM orders INNER JOIN customers ON orders . customer_id = customers . id ; \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528 INNER JOIN \u64cd\u4f5c\u5c06 orders \u8868\u548c customers \u8868\u8fde\u63a5\u8d77\u6765\uff0c\u5e76\u6307\u5b9a\u4e86 orders.customer_id = customers.id \u4f5c\u4e3a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u3002\u8fd9\u610f\u5473\u7740\uff0c\u53ea\u6709 orders \u8868\u4e2d\u7684 customer_id \u503c\u4e0e customers \u8868\u4e2d\u7684 id \u503c\u5339\u914d\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de\u76f8\u5173\u7684\u884c\u3002 ON \u5173\u952e\u5b57\u540e\u9762\u7684\u6761\u4ef6\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u8fd0\u7b97\u7b26\u548c\u51fd\u6570\uff0c\u4f8b\u5982\uff1a \u7b49\u4e8e\u8fd0\u7b97\u7b26\uff08=\uff09 SELECT * FROM orders INNER JOIN customers ON orders . customer_id = customers . id ; \u4e0d\u7b49\u4e8e\u8fd0\u7b97\u7b26\uff08<>\uff09 SELECT * FROM orders INNER JOIN customers ON orders . customer_id <> customers . id ; \u5927\u4e8e\u8fd0\u7b97\u7b26\uff08>\uff09 SELECT * FROM orders INNER JOIN customers ON orders . order_date > customers . join_date ; \u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff08<\uff09 SELECT * FROM orders INNER JOIN customers ON orders . order_date < customers . join_date ; IN \u8fd0\u7b97\u7b26 SELECT * FROM orders INNER JOIN customers ON orders . customer_id IN ( 1 , 2 , 3 ); LIKE \u8fd0\u7b97\u7b26 SELECT * FROM orders INNER JOIN customers ON customers.name LIKE 'J%'; \u51fd\u6570 SELECT * FROM orders INNER JOIN customers ON YEAR ( orders . order_date ) = YEAR ( customers . join_date ); \u5728\u4f7f\u7528 ON \u5173\u952e\u5b57\u65f6\uff0c\u9700\u8981\u786e\u4fdd\u5173\u8054\u6761\u4ef6\u662f\u6b63\u786e\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u786e\u4fdd\u6b63\u786e\u5730\u5173\u8054\u4e24\u4e2a\u8868\u3002\u5982\u679c\u5173\u8054\u6761\u4ef6\u4e0d\u6b63\u786e\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u67e5\u8be2\u7ed3\u679c\u3002 \u5173\u4e8e AND,OR,NOT # \u5728 MySQL \u4e2d\uff0cAND\u3001OR \u548c NOT \u662f\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u7ec4\u5408\u548c\u64cd\u4f5c\u591a\u4e2a\u6761\u4ef6\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a AND \u8fd0\u7b97\u7b26 AND \u8fd0\u7b97\u7b26\u7528\u4e8e\u7ec4\u5408\u591a\u4e2a\u6761\u4ef6\uff0c\u5e76\u8fd4\u56de\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u884c\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE age > 18 AND gender = 'F' ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5927\u4e8e 18 \u5c81\u4e14\u6027\u522b\u4e3a\u5973\u6027\u7684\u5ba2\u6237\u3002 OR \u8fd0\u7b97\u7b26 OR \u8fd0\u7b97\u7b26\u7528\u4e8e\u7ec4\u5408\u591a\u4e2a\u6761\u4ef6\uff0c\u5e76\u8fd4\u56de\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\u7684\u884c\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE age > 18 OR gender = 'F' ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5927\u4e8e 18 \u5c81\u6216\u6027\u522b\u4e3a\u5973\u6027\u7684\u5ba2\u6237\u3002 NOT \u8fd0\u7b97\u7b26 NOT \u8fd0\u7b97\u7b26\u7528\u4e8e\u5426\u5b9a\u4e00\u4e2a\u6761\u4ef6\uff0c\u8fd4\u56de\u4e0d\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u884c\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE NOT age > 18 ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5c0f\u4e8e\u6216\u7b49\u4e8e 18 \u5c81\u7684\u5ba2\u6237\u3002 \u7ec4\u5408\u4f7f\u7528 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\uff0c\u4ee5\u4fbf\u66f4\u590d\u6742\u7684\u6761\u4ef6\u7b5b\u9009\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE age > 18 AND ( gender = 'F' OR city = 'New York' ) AND NOT status = 'inactive' ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5927\u4e8e 18 \u5c81\u3001\u6027\u522b\u4e3a\u5973\u6027\u6216\u4f4f\u5728\u7ebd\u7ea6\u5e02\u3001\u4e14\u72b6\u6001\u4e0d\u4e3a\u201cinactive\u201d\u7684\u5ba2\u6237\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4f7f\u7528 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u62ec\u53f7\u6765\u660e\u786e\u6761\u4ef6\u7684\u4f18\u5148\u7ea7\uff0c\u4ee5\u4fbf\u786e\u4fdd\u6761\u4ef6\u7ec4\u5408\u7684\u6b63\u786e\u6027\u3002 \u5173\u4e8e LIKE # \u5728 MySQL \u4e2d\uff0cLIKE \u662f\u4e00\u79cd\u6a21\u5f0f\u5339\u914d\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u6307\u5b9a\u7684\u6a21\u5f0f\u6216\u5b50\u5b57\u7b26\u4e32\u3002LIKE \u8fd0\u7b97\u7b26\u901a\u5e38\u4e0e\u901a\u914d\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u5339\u914d\u5b57\u7b26\u4e32\u3002 LIKE \u8fd0\u7b97\u7b26\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a SELECT column_name ( s ) FROM table_name WHERE column_name LIKE pattern ; \u5176\u4e2d\uff0ccolumn_name \u662f\u8981\u5339\u914d\u7684\u5217\u540d\uff0ctable_name \u662f\u8981\u67e5\u8be2\u7684\u8868\u540d\uff0cpattern \u662f\u8981\u5339\u914d\u7684\u6a21\u5f0f\u6216\u5b50\u5b57\u7b26\u4e32\u3002pattern \u53ef\u4ee5\u5305\u542b\u901a\u914d\u7b26\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u5339\u914d\u5b57\u7b26\u4e32\u3002 \u5728 MySQL \u4e2d\uff0cLIKE \u8fd0\u7b97\u7b26\u652f\u6301\u4e24\u79cd\u901a\u914d\u7b26\uff1a \u767e\u5206\u53f7\uff08%\uff09\uff1a\u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c'a%' \u5339\u914d\u4ee5\u5b57\u6bcd a \u5f00\u5934\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c'%a' \u5339\u914d\u4ee5\u5b57\u6bcd a \u7ed3\u5c3e\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c'%a%' \u5339\u914d\u5305\u542b\u5b57\u6bcd a \u7684\u4efb\u4f55\u5b57\u7b26\u4e32\u3002 \u4e0b\u5212\u7ebf\uff08 \uff09\uff1a\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c'a ' \u5339\u914d\u4ee5\u5b57\u6bcd a \u5f00\u5934\u4e14\u957f\u5ea6\u4e3a\u4e24\u4e2a\u5b57\u7b26\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c'_a' \u5339\u914d\u4ee5\u5b57\u6bcd a \u7ed3\u5c3e\u4e14\u957f\u5ea6\u4e3a\u4e24\u4e2a\u5b57\u7b26\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528 LIKE \u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a \u67e5\u627e\u4ee5 'J' \u5f00\u5934\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE 'J%' ; \u67e5\u627e\u5305\u542b 'doe' \u5b50\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE '%doe%' ; \u67e5\u627e\u4ee5 'j' \u5f00\u5934\u4e14\u957f\u5ea6\u4e3a 4 \u4e2a\u5b57\u7b26\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE 'j___' ; \u67e5\u627e\u4ee5 'j' \u5f00\u5934\u6216\u4ee5 's' \u7ed3\u5c3e\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE 'j%' OR name LIKE '%s' ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLIKE \u8fd0\u7b97\u7b26\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6267\u884c\u6a21\u5f0f\u5339\u914d\u3002\u5982\u679c\u8981\u8fdb\u884c\u9ad8\u6548\u7684\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5168\u6587\u672c\u641c\u7d22\u5f15\u64ce\uff0c\u5982 MySQL \u63d0\u4f9b\u7684\u5168\u6587\u672c\u641c\u7d22\u5f15\u64ce MyISAM \u6216 InnoDB \u5f15\u64ce\u4e2d\u7684\u5168\u6587\u672c\u641c\u7d22\u63d2\u4ef6\u3002 MYSQL Function # \u6bd4\u5982\uff0c\u6211\u73b0\u5728\u6709\u4e2a\u9700\u6c42\uff0c\u8ba1\u7b97\u4e0a\u9762\u6d88\u8d39\u6b21\u6570 SELECT COUNT ( amount ) FROM transactions ; SELECT MAX ( amount ) AS max_amount FROM transactions ; SELECT SUM ( amount ) AS all_amount FROM transactions ; \u94fe\u63a5\u5b57\u7b26\u4e32 employee \u8868\u5185\u5bb9 \u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u628a\u540d\u5b57\u8fde\u8d77\u6765 SELECT CONCAT ( first_name , \" \" , last_name ) FROM employees ;","title":"MYSQL"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#mysql","text":"","title":"MYSQL"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#ddl-\u6570\u636e\u5b9a\u4e49\u8bed\u8a00","text":"","title":"DDL \u6570\u636e\u5b9a\u4e49\u8bed\u8a00"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u6570\u636e\u5e93\u76f8\u5173\u547d\u4ee4","text":"CREATE DATABASE IF NOT EXISTS myDB ; -- \u521b\u5efa\u6570\u636e\u5e93 USE myDB ; -- \u4f7f\u7528\u5f53\u524d\u6570\u636e\u5e93 DROP DATABASE myDB ; -- \u5220\u9664\u6570\u636e\u5e93","title":"\u6570\u636e\u5e93\u76f8\u5173\u547d\u4ee4"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u8868\u76f8\u5173\u547d\u4ee4","text":"","title":"\u8868\u76f8\u5173\u547d\u4ee4"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u663e\u793a\u8868","text":"SHOW TABLES ;","title":"\u663e\u793a\u8868"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u521b\u5efa\u8868","text":"CREATE TABLE employees ( employee_id INT , first_name VARCHAR ( 50 ), last_name VARCHAR ( 50 ), hourly_pay DECIMAL ( 5 , 2 ), hire_date DATE );","title":"\u521b\u5efa\u8868"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u91cd\u547d\u540d\u8868","text":"RENAME TABLE employees TO workers ;","title":"\u91cd\u547d\u540d\u8868"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5220\u9664\u8868","text":"DROP TABLE employees ;","title":"\u5220\u9664\u8868"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u66f4\u6539\u8868","text":"ALTER TABLE employees ADD phone_number VARCHAR ( 15 ); \u4fee\u6539\u5b57\u6bb5\u540d ALTER TABLE employees CHANGE COLUMN ` email ` ` emails ` varchar ( 120 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER ` phone_number ` ; \u4fee\u6539\u5b57\u6bb5\u6570\u636e\u7c7b\u578b ALTER TABLE employees MODIFY COLUMN ` email ` VARCHAR ( 300 ); \u79fb\u52a8\u5b57\u6bb5\u540d\u4f4d\u7f6e ALTER TABLE employees MODIFY COLUMN ` email ` VARCHAR ( 300 ) AFTER hire_date ; SELECT * FROM employees ; \u5220\u9664\u5b57\u6bb5\u540d ALTER TABLE employees DROP COLUMN ` email ` ; SELECT * FROM employees ;","title":"\u66f4\u6539\u8868"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#dml-\u6570\u636e\u64cd\u4f5c\u8bed\u8a00","text":"","title":"DML \u6570\u636e\u64cd\u4f5c\u8bed\u8a00"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u63d2\u5165\u6570\u636e","text":"INSERT INTO employees VALUES ( 1 , \"Eugene\" , \"Krabs\" , 25 . 50 , \"2023-05-01\" , \"12345677889\" , \"meowrian@126.com\" ), ( 2 , \"rain\" , \"meow\" , 30 . 20 , \"2023-04-30\" , \"17456778901\" , \"meowrain@sf.com\" ), ( 3 , \"Smith\" , \"Johm\" , 45 . 20 , \"2022-12-20\" , \"18890997652\" , \"meow@google.com\" ); SELECT * FROM employees ; \u63d2\u5165\u90e8\u5206\u6570\u636e INSERT INTO employees ( employee_id , first_name , last_name ) VALUES ( 4 , \"Smith\" , \"Mike\" ); SELECT * FROM employees ;","title":"\u63d2\u5165\u6570\u636e"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u4fee\u6539\u6570\u636e-update","text":"UPDATE employees SET hourly_pay = 10 . 25 WHERE employee_id = 1 ; SELECT * FROM employees ;","title":"\u4fee\u6539\u6570\u636e UPDATE"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5220\u9664\u6570\u636e-delete","text":"DELETE FROM employees WHERE last_name = 'Kate' ; SELECT * FROM employees ; \u63d2\u5165\u65f6\u95f4\u6570\u636e \u521b\u5efa\u8868 CREATE TABLE time ( my_date DATE , my_time TIME , my_datetime DATETIME ); SELECT * FROM time ; \u63d2\u5165\u6570\u636e\uff0c\u5e76\u4e14\u67e5\u8be2\u7ed3\u679c INSERT INTO time VALUES ( CURRENT_DATE (), CURRENT_TIME (), NOW () ); SELECT * FROM time ; \u8fd9\u6837\u53ef\u4ee5\u63d2\u5165\u7b2c\u4e8c\u5929\u7684\u65e5\u671f\u6570\u636e","title":"\u5220\u9664\u6570\u636e DELETE"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#dql-\u6570\u636e\u67e5\u8be2\u8bed\u8a00","text":"","title":"DQL \u6570\u636e\u67e5\u8be2\u8bed\u8a00"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#select-\u67e5\u8be2\u8bed\u53e5","text":"SELECT first_name , last_name FROM employees ; \u901a\u8fc7\u4e0a\u9762\u7684\u8fd9\u4e2a\u547d\u4ee4\uff0c\u6211\u5c31\u80fd\u62ff\u5230\u6570\u636e\u5e93\u4e2d\u5df2\u7ecf\u5b58\u50a8\u7684\u6240\u6709\u4eba\u540d\u4e86","title":"SELECT \u67e5\u8be2\u8bed\u53e5"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#select--where","text":"SELECT * FROM employees WHERE employee_id = 1 ; \u901a\u8fc7\u4e0a\u9762\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u5c31\u80fd\u83b7\u53d6\u5230 id \u4e3a 1 \u7684\u8fd9\u4e2a\u5458\u5de5\u7684\u6240\u6709\u6570\u636e\u4e86\uff0c\u5f53\u7136\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u540d\u5b57\u67e5\u627e SELECT * FROM employees WHERE first_name = 'Eugene' AND last_name = 'Krabs' ; \u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u547d\u4ee4\u627e\u5230\u96c7\u4f63\u65e5\u671f\u4e0d\u662f NULL \u7684\u6240\u6709\u4eba\u7684\u4fe1\u606f SELECT * FROM employees WHERE hire_date IS NOT NULL ;","title":"SELECT + WHERE"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-unique","text":"\u5728\u521b\u5efa\u8868\u65f6\uff0c UNIQUE \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\u3002 CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ) UNIQUE , price DECIMAL ( 4 , 2 ) ); -- \u5728\u521b\u5efa\u8868\u65f6\uff0c UNIQUE \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\u3002\u5728\u8fd9\u91cc\u7684\u4f8b\u5b50\u4e2d\uff0c UNIQUE \u5173\u952e\u5b57\u5f3a\u5236 product_name \u5217\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u6709\u76f8\u540c\u7684 product_name \u503c\u5b58\u5728\u4e8e\u8be5\u8868\u4e2d\u7684\u4e0d\u540c\u884c\u4e2d\u3002\u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u8fdd\u53cd\u6b64\u9650\u5236\uff0c\u5c06\u4f1a\u51fa\u73b0\u552f\u4e00\u952e\u51b2\u7a81\u9519\u8bef\u3002 CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ), price DECIMAL ( 4 , 2 ) ); -- \u5728\u521b\u5efa\u8868\u65f6\uff0c UNIQUE \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\u3002\u5728\u8fd9\u91cc\u7684\u4f8b\u5b50\u4e2d\uff0c UNIQUE \u5173\u952e\u5b57\u5f3a\u5236 product_name \u5217\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u662f\u552f\u4e00\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u6709\u76f8\u540c\u7684 product_name \u503c\u5b58\u5728\u4e8e\u8be5\u8868\u4e2d\u7684\u4e0d\u540c\u884c\u4e2d\u3002\u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u8fdd\u53cd\u6b64\u9650\u5236\uff0c\u5c06\u4f1a\u51fa\u73b0\u552f\u4e00\u952e\u51b2\u7a81\u9519\u8bef\u3002 ALTER TABLE products ADD CONSTRAINT UNIQUE ( product_name ); -- \u8fd9\u662f\u4e00\u4e2a SQL \u8bed\u53e5\uff0c\u5b83\u7684\u610f\u601d\u662f\u5728\u540d\u4e3a \"products\" \u7684\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a \"product_name\" \u7684\u552f\u4e00\u7ea6\u675f (UNIQUE CONSTRAINT)\u3002\u8fd9\u610f\u5473\u7740\u5728\u8be5\u8868\u4e2d\uff0c\u6bcf\u4e2a\u4ea7\u54c1\u540d\u79f0\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\u5982\u679c\u5c1d\u8bd5\u63d2\u5165\u5177\u6709\u76f8\u540c\u4ea7\u54c1\u540d\u79f0\u7684\u884c\uff0c\u5219\u4f1a\u89e6\u53d1\u552f\u4e00\u7ea6\u675f\uff0c\u4ece\u800c\u9632\u6b62\u9519\u8bef\u6570\u636e\u7684\u63d2\u5165\u3002 SELECT * FROM products ; \u63a5\u4e0b\u6765\u5b9e\u6218\u4e00\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230 unique \u6709\u4ec0\u4e48\u4f5c\u7528 \u8fd9\u6837\u5199\u5c31\u6b63\u5e38\u4e86","title":"\u5173\u4e8e UNIQUE"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-not-null","text":"NOT NULL \u7ea6\u675f\u7528\u4e8e\u4fdd\u8bc1\u5217\u7684\u503c\u4e0d\u80fd\u4e3a\u7a7a(NULL)\u3002\u5b83\u7684\u8bed\u6cd5\u683c\u5f0f\u4e3a: sql column_name datatype NOT NULL CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ), price DECIMAL ( 4 , 2 ) NOT NULL ); CREATE TABLE products ( product_id INT , product_name VARCHAR ( 25 ), price DECIMAL ( 4 , 2 ) ); ALTER TABLE products MODIFY price DECIMAL ( 4 , 2 ) NOT NULL ; \u5b9e\u6218\u62a5\u9519\uff1a \u6b63\u786e\u6f14\u793a\uff1a","title":"\u5173\u4e8e NOT NULL"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-check","text":"CHECK \u7ea6\u675f\u7528\u4e8e\u9650\u5236\u5217\u4e2d\u7684\u503c\u8303\u56f4,\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u3002\u5b83\u7684\u8bed\u6cd5\u683c\u5f0f\u4e3a: column_name datatype CHECK ( condition ) condition \u662f\u8981\u6c42\u5217\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6,\u53ef\u4ee5\u662f\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3001BETWEEN\u3001IN \u8fd0\u7b97\u7b26\u7b49\u3002 \u521b\u5efa CREATE TABLE employees_test ( employee_id INT , first_name VARCHAR ( 50 ), last_name VARCHAR ( 50 ), hourly_pay DECIMAL ( 5 , 2 ), hire_date DATE , CONSTRAINT chk_hourly_pay CHECK ( hourly_pay >= 10 . 00 ) ); \u8ffd\u52a0 ALTER TABLE employees ADD CONSTRAINT chk_hourly_pay CHECK ( hourly_pay >= 10 . 00 ); \u5728 MySQL \u4e2d\uff0cCHECK \u7ea6\u675f\u662f\u88ab\u652f\u6301\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u88ab\u5b9e\u9645\u6267\u884c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u4f60\u5728\u521b\u5efa\u8868\u65f6\u5b9a\u4e49\u4e86 CHECK \u7ea6\u675f\uff0c\u4f46\u662f MySQL \u5e76\u4e0d\u4f1a\u5728\u63d2\u5165\u6570\u636e\u65f6\u6267\u884c\u8be5\u7ea6\u675f\uff0c\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u4f60\u63d2\u5165\u4e86\u4e0d\u7b26\u5408 CHECK \u7ea6\u675f\u7684\u6570\u636e\uff0cMySQL \u4e5f\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u662f\u4f1a\u7ee7\u7eed\u63d2\u5165\u8be5\u6570\u636e\u3002","title":"\u5173\u4e8e CHECK"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-default","text":"\u5728 SQL \u4e2d,DEFAULT \u5173\u952e\u5b57\u7528\u4e8e\u4e3a\u5217\u5b9a\u4e49\u9ed8\u8ba4\u503c\u3002\u5f53\u5411\u8868\u4e2d\u63d2\u5165\u65b0\u884c\u65f6,\u5982\u679c\u672a\u663e\u5f0f\u4e3a\u67d0\u5217\u6307\u5b9a\u503c,\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503c\u4f7f\u6211\u4eec\u65e0\u9700\u6bcf\u6b21\u63d2\u5165\u65b0\u884c\u65f6\u90fd\u6307\u5b9a\u6bcf\u4e2a\u5217\u7684\u503c,\u6709\u52a9\u4e8e\u7b80\u5316\u63d2\u5165\u8bed\u53e5\u548c\u63d0\u9ad8\u6548\u7387\u3002 CREATE TABLE products ( product_id INT , product_name VARCHAR ( 50 ), price DECIMAL ( 4 , 2 ) DEFAULT 0 ); \u5982\u679c\u8868\u5df2\u7ecf\u5b58\u5728 ALTER TABLE products ALTER price SET DEFAULT 0 \u6211\u4eec\u63d2\u5165\u6570\u636e INSERT INTO products ( product_id , product_name ) VALUES ( 104 , \"straw\" ),( 105 , \"napkin\" ),( 106 , \"fork\" ),( 106 , \"spoon\" ); SELECT * FROM products ;","title":"\u5173\u4e8e DEFAULT"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-primary-key","text":"\u5728 SQL \u4e2d\uff0cPRIMARY KEY\uff08\u4e3b\u952e\uff09\u662f\u4e00\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u7528\u4e8e\u6807\u8bc6\u8868\u4e2d\u7684\u4e00\u5217\u6216\u591a\u5217\uff0c\u5b83\u4eec\u7684\u503c\u552f\u4e00\u6807\u8bc6\u6bcf\u884c\u6570\u636e\u3002\u4e3b\u952e\u53ef\u4ee5\u786e\u4fdd\u8868\u4e2d\u6bcf\u884c\u6570\u636e\u7684\u552f\u4e00\u6027\uff0c\u56e0\u6b64\u5b83\u901a\u5e38\u88ab\u7528\u4f5c\u8868\u4e2d\u7684\u7d22\u5f15\u3002\u4e3b\u952e\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\uff0c\u4f46\u901a\u5e38\u90fd\u662f\u4f7f\u7528\u5355\u4e2a\u5217\u4f5c\u4e3a\u4e3b\u952e\u3002 \u5728\u521b\u5efa\u8868\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e3b\u952e\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5217\u6216\u591a\u4e2a\u5217\u7684\u7ec4\u5408\u3002\u4e3b\u952e\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\uff1a \u5728\u5217\u5b9a\u4e49\u65f6\uff0c\u4f7f\u7528 PRIMARY KEY \u5173\u952e\u5b57\u5c06\u8be5\u5217\u6307\u5b9a\u4e3a\u4e3b\u952e\u3002 \u5728\u5217\u5b9a\u4e49\u540e\uff0c\u4f7f\u7528 ALTER TABLE \u547d\u4ee4\u5c06\u5217\u6307\u5b9a\u4e3a\u4e3b\u952e\u3002 \u4e00\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u4e3b\u952e\u7684\u503c\u4e0d\u80fd\u4e3a NULL\uff0c\u56e0\u4e3a\u4e3b\u952e\u7528\u4e8e\u6807\u8bc6\u6bcf\u884c\u6570\u636e\uff0c\u5982\u679c\u4e3b\u952e\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u552f\u4e00\u6807\u8bc6\u6bcf\u884c\u6570\u636e\u3002\u5982\u679c\u8981\u5728\u8868\u4e2d\u4f7f\u7528\u591a\u4e2a\u5217\u4f5c\u4e3a\u4e3b\u952e\uff0c\u53ef\u4ee5\u4f7f\u7528\u590d\u5408\u4e3b\u952e\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5217\u7684\u503c\u7684\u7ec4\u5408\u5fc5\u987b\u552f\u4e00\u6807\u8bc6\u6bcf\u884c\u6570\u636e\u3002 \u4e3b\u952e\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u5916\u952e\uff0c\u5916\u952e\u662f\u4e00\u4e2a\u8868\u4e2d\u7684\u5217\uff0c\u5b83\u5f15\u7528\u53e6\u4e00\u4e2a\u8868\u4e2d\u7684\u4e3b\u952e\u5217\u3002\u5916\u952e\u7528\u4e8e\u786e\u4fdd\u8868\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u4e8e\u9632\u6b62\u5728\u4e00\u4e2a\u8868\u4e2d\u63d2\u5165\u65e0\u6548\u7684\u6570\u636e\uff0c\u4ee5\u53ca\u5728\u5220\u9664\u4e00\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u76f8\u5173\u7684\u6570\u636e\u3002 \u4e3b\u952e\u662f\u552f\u4e00\u4e14\u4e0d\u80fd\u4e3a\u7a7a\u7684 \u4e3b\u952e\u662f\u4e00\u79cd\u552f\u4e00\u4e14\u4e0d\u80fd\u4e3a\u7a7a\u7684\u6807\u8bc6\u7b26\uff0c\u53ef\u4ee5\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u6570\u636e\u3002\u5c31\u50cf\u4eba\u4eec\u7684\u8eab\u4efd\u8bc1\u53f7\u4e00\u6837\uff0c\u6bcf\u4e2a\u4eba\u7684\u8eab\u4efd\u8bc1\u53f7\u90fd\u662f\u552f\u4e00\u7684\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u4eba\u3002\u540c\u6837\u5730\uff0c\u6bcf\u884c\u6570\u636e\u7684\u4e3b\u952e\u4e5f\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u8be5\u884c\u6570\u636e\u3002\u4e3b\u952e\u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\u7ec4\u6210\uff0c\u4f46\u6bcf\u4e2a\u4e3b\u952e\u503c\u7684\u7ec4\u5408\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002 CREATE TABLE transactions ( transaction_id INT PRIMARY KEY , amount DECIMAL ( 5 , 2 ) ); SELECT * FROM transactions ; \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u8868\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 id \u4e3a\u4e3b\u952e ALTER TABLE transactions ADD CONSTRAINT PRIMARY KEY ( transaction_id ); SELECT * FROM transactions ; \u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4e3b\u952e\u4e0d\u80fd\u4e3a NULL","title":"\u5173\u4e8e PRIMARY KEY"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-auto_increament","text":"\u5728 MySQL \u4e2d\uff0cAUTO_INCREMENT \u662f\u4e00\u79cd\u5217\u5c5e\u6027\uff0c\u5b83\u53ef\u4ee5\u4e3a\u8868\u4e2d\u7684\u67d0\u4e00\u5217\u6307\u5b9a\u4e00\u4e2a\u81ea\u52a8\u589e\u957f\u7684\u6574\u6570\u503c\uff0c\u6bcf\u6b21\u63d2\u5165\u65b0\u8bb0\u5f55\u65f6\uff0c\u8be5\u5217\u7684\u503c\u90fd\u4f1a\u81ea\u52a8\u9012\u589e\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cAUTO_INCREMENT \u5c5e\u6027\u5e94\u8be5\u7528\u4e8e\u5b9a\u4e49\u4e3b\u952e\u5217\uff0c\u4ee5\u786e\u4fdd\u6bcf\u884c\u6570\u636e\u90fd\u6709\u552f\u4e00\u7684\u6807\u8bc6\u7b26\u3002 \u53ef\u4ee5\u901a\u8fc7\u5728\u8868\u5b9a\u4e49\u4e2d\u4f7f\u7528 AUTO_INCREMENT \u5173\u952e\u5b57\u6765\u4e3a\u8868\u4e2d\u7684\u67d0\u4e2a\u5217\u6307\u5b9a\u81ea\u52a8\u589e\u957f\u5c5e\u6027\uff0c\u4f8b\u5982\uff1a CREATE TABLE customers ( id INT AUTO_INCREMENT PRIMARY KEY , name VARCHAR ( 50 ), email VARCHAR ( 50 ) ); \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cid \u5217\u88ab\u6307\u5b9a\u4e3a\u4e3b\u952e\uff0c\u5e76\u4f7f\u7528 AUTO_INCREMENT \u5c5e\u6027\uff0c\u56e0\u6b64\u6bcf\u6b21\u63d2\u5165\u65b0\u8bb0\u5f55\u65f6\uff0cid \u5217\u7684\u503c\u90fd\u4f1a\u81ea\u52a8\u9012\u589e\u3002 CREATE TABLE transactions ( transaction_id INT PRIMARY KEY AUTO_INCREMENT , amount DECIMAL ( 5 , 2 ) ); SELECT * FROM transactions ; INSERT INTO transactions ( amount ) VALUES ( 4 . 99 ),( 5 . 43 ),( 3 . 22 ); SELECT * FROM transactions ; \u8bbe\u7f6e\u81ea\u589e\u8d77\u59cb\u503c ALTER TABLE transactions AUTO_INCREMENT = 1000 ; INSERT INTO transactions ( amount ) VALUES ( 4 . 23 ),( 5 . 66 ),( 5 . 78 ),( 7 . 32 ); SELECT * FROM transactions ;","title":"\u5173\u4e8e AUTO_INCREAMENT"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-foreign-key","text":"\u5728 MySQL \u4e2d\uff0cFOREIGN KEY\uff08\u5916\u952e\uff09\u662f\u4e00\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u8868\u7684\u5217\u4e0e\u53e6\u4e00\u4e2a\u8868\u7684\u5217\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5916\u952e\u7528\u4e8e\u786e\u4fdd\u8868\u4e4b\u95f4\u7684\u6570\u636e\u4e00\u81f4\u6027\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u4e8e\u9632\u6b62\u5728\u4e00\u4e2a\u8868\u4e2d\u63d2\u5165\u65e0\u6548\u7684\u6570\u636e\uff0c\u4ee5\u53ca\u5728\u5220\u9664\u4e00\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5220\u9664\u76f8\u5173\u7684\u6570\u636e\u3002 \u5916\u952e\u901a\u5e38\u7528\u4e8e\u5efa\u7acb\u8868\u4e0e\u8868\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u4f8b\u5982\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5916\u952e\u5c06\u4e00\u5f20\u8868\u4e2d\u7684\u5217\u4e0e\u53e6\u4e00\u5f20\u8868\u4e2d\u7684\u4e3b\u952e\u5217\u5173\u8054\u8d77\u6765\u3002\u5728 MySQL \u4e2d\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u8868\u65f6\u4f7f\u7528 FOREIGN KEY \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u5916\u952e\uff0c\u4f8b\u5982\uff1a CREATE TABLE orders ( order_id INT PRIMARY KEY , customer_id INT , order_date DATE , FOREIGN KEY ( customer_id ) REFERENCES customers ( id ) ); \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0corders \u8868\u4e2d\u7684 customer_id \u5217\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5916\u952e\uff0c\u5b83\u5f15\u7528\u4e86 customers \u8868\u4e2d\u7684 id \u5217\u3002\u8fd9\u610f\u5473\u7740\uff0corders \u8868\u4e2d\u7684\u6bcf\u4e2a customer_id \u503c\u5fc5\u987b\u5b58\u5728\u4e8e customers \u8868\u7684 id \u5217\u4e2d\u3002\u5982\u679c\u5c1d\u8bd5\u5411 orders \u8868\u4e2d\u63d2\u5165\u4e00\u4e2a customer_id \u503c\uff0c\u800c\u8be5\u503c\u4e0d\u5b58\u5728\u4e8e customers \u8868\u4e2d\u7684 id \u5217\u4e2d\uff0c\u5219\u4f1a\u5f15\u53d1\u4e00\u4e2a\u9519\u8bef\u3002 \u6848\u4f8b\uff1a \u521b\u5efa customers \u8868 CREATE TABLE customers ( customer_id INT PRIMARY KEY AUTO_INCREMENT , first_name VARCHAR ( 50 ), last_name VARCHAR ( 50 ) ); SELECT * FROM customers ; \u63d2\u5165\u6570\u636e\u5230 customers \u8868 INSERT INTO customers ( first_name , last_name ) VALUES ( \"Fred\" , \"Fish\" ), ( \"Larry\" , \"Lobster\" ), ( \"Bubble\" , \"Bass\" ); SELECT * FROM customers ; \u521b\u5efa transaction \u8868 CREATE TABLE transactions ( transaction_id INT PRIMARY KEY AUTO_INCREMENT , amount DECIMAL ( 5 , 2 ), customer_id INT , FOREIGN KEY ( customer_id ) REFERENCES customers ( customer_id ) ); SELECT * FROM transactions ; \u63d2\u5165\u6570\u636e \u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u5220\u9664 customers \u8868\u4e2d\u7684\u4e00\u4e2a\u4eba\uff0c\u4f46\u662f\u8fd9\u4e2a\u4eba\u548c transactions \u4e2d\u7684\u4e00\u4e2a\u5b57\u6bb5\u76f8\u5173\u8054 \u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e0b\u9762\u7684\u62a5\u9519","title":"\u5173\u4e8e FOREIGN KEY"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-joins","text":"\u5728 MySQL \u4e2d\uff0cJOIN \u662f\u4e00\u79cd\u7528\u4e8e\u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u4e2d\u7684\u6570\u636e\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u64cd\u4f5c\u3002JOIN \u64cd\u4f5c\u57fa\u4e8e\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5b83\u5c06\u4e00\u5f20\u8868\u4e2d\u7684\u6570\u636e\u4e0e\u53e6\u4e00\u5f20\u8868\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u5339\u914d\uff0c\u4ee5\u4fbf\u4ece\u8fd9\u4e9b\u8868\u4e2d\u68c0\u7d22\u76f8\u5173\u7684\u6570\u636e\u3002 MySQL \u4e2d\u6709\u591a\u79cd\u7c7b\u578b\u7684 JOIN \u64cd\u4f5c\uff0c\u5305\u62ec INNER JOIN\u3001LEFT JOIN\u3001RIGHT JOIN \u548c FULL OUTER JOIN\u3002\u4e0b\u9762\u662f\u5404\u79cd JOIN \u64cd\u4f5c\u7684\u8bf4\u660e\uff1a INNER JOIN\uff1a\u8fd4\u56de\u4e24\u4e2a\u8868\u4e2d\u5339\u914d\u7684\u884c\u3002\u5b83\u53ea\u8fd4\u56de\u4e24\u4e2a\u8868\u4e2d\u90fd\u5b58\u5728\u7684\u884c\u3002 SELECT * FROM table1 INNER JOIN table2 ON table1 . column = table2 . column ; LEFT JOIN\uff1a\u8fd4\u56de\u5de6\u8868\u4e2d\u7684\u6240\u6709\u884c\u4ee5\u53ca\u53f3\u8868\u4e2d\u5339\u914d\u7684\u884c\u3002\u5982\u679c\u53f3\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c\u5219\u8fd4\u56de NULL \u503c\u3002 SELECT * FROM table1 LEFT JOIN table2 ON table1 . column = table2 . column ; RIGHT JOIN\uff1a\u8fd4\u56de\u53f3\u8868\u4e2d\u7684\u6240\u6709\u884c\u4ee5\u53ca\u5de6\u8868\u4e2d\u5339\u914d\u7684\u884c\u3002\u5982\u679c\u5de6\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c\u5219\u8fd4\u56de NULL \u503c\u3002 SELECT * FROM table1 RIGHT JOIN table2 ON table1 . column = table2 . column ; FULL OUTER JOIN\uff1a\u8fd4\u56de\u4e24\u4e2a\u8868\u4e2d\u7684\u6240\u6709\u884c\u3002\u5982\u679c\u67d0\u4e2a\u8868\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u884c\uff0c\u5219\u8fd4\u56de NULL \u503c\u3002 SELECT * FROM table1 FULL OUTER JOIN table2 ON table1 . column = table2 . column ; \u5728\u4f7f\u7528 JOIN \u64cd\u4f5c\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u901a\u5e38\u901a\u8fc7\u4f7f\u7528 ON \u5173\u952e\u5b57\u6765\u5b9e\u73b0\u3002ON \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a SELECT * FROM orders INNER JOIN customers ON orders . customer_id = customers . id ; \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0corders \u8868\u548c customers \u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u662f orders.customer_id = customers.id \u3002\u8fd9\u610f\u5473\u7740\uff0c\u53ea\u6709 orders \u8868\u4e2d\u7684 customer_id \u503c\u4e0e customers \u8868\u4e2d\u7684 id \u503c\u5339\u914d\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de\u76f8\u5173\u7684\u884c\u3002 JOIN \u64cd\u4f5c\u4e5f\u53ef\u4ee5\u4f7f\u7528 WHERE \u5b50\u53e5\u6765\u6307\u5b9a\u5173\u8054\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a SELECT * FROM orders , customers WHERE orders . customer_id = customers . id ; \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0corders \u8868\u548c customers \u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u662f orders.customer_id = customers.id \u3002\u8fd9\u79cd\u5199\u6cd5\u4e0e\u4f7f\u7528 INNER JOIN \u64cd\u4f5c\u662f\u7b49\u4ef7\u7684\u3002","title":"\u5173\u4e8e JOINS"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#inner-join-\u5b9e\u6218","text":"\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b transactions \u8868\u548c customers \u8868\u4e2d\u7684\u5185\u5bb9 SELECT * FROM transactions INNER JOIN customers ON transactions . customer_id = customers . customer_id ; \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u8fd9\u6837\u62fc\u8d77\u6765\uff0c\u5c31\u80fd\u6e05\u6670\u7684\u83b7\u5f97\u5230\u7528\u6237\u7684 transaction_id \u8fd8\u6709 name \uff0c\u4ee5\u53ca\u6d88\u8d39\u7684 amount \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 customer_id \u8fd9\u4e2a\u5c5e\u6027\u628a\u4e24\u4e2a\u8868\u8fde\u63a5\u8d77\u6765","title":"INNER JOIN \u5b9e\u6218"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5b9e\u6218-left-joinright-join","text":"\u73b0\u5728\u6211\u4eec\u5f80 transactions \u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u6ca1\u6709 customer_id \u5c5e\u6027\u7684\u5b57\u6bb5 INNER JOIN \u7ed3\u679c\u662f\u8fd9\u6837\u7684 LEFT JOIN \u662f\u8fd9\u6837\u7684 RIGHT JOIN \u662f\u8fd9\u6837\u7684","title":"\u5b9e\u6218 LEFT JOIN\uff0cRIGHT JOIN"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-on","text":"\u5728 MySQL \u4e2d\uff0cON \u5173\u952e\u5b57\u7528\u4e8e\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u3002\u5728\u4f7f\u7528 JOIN \u64cd\u4f5c\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u901a\u5e38\u901a\u8fc7\u4f7f\u7528 ON \u5173\u952e\u5b57\u6765\u5b9e\u73b0\u3002 ON \u5173\u952e\u5b57\u540e\u9762\u7684\u6761\u4ef6\u6307\u5b9a\u4e86\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6761\u4ef6\u3002\u4f8b\u5982\uff1a SELECT * FROM orders INNER JOIN customers ON orders . customer_id = customers . id ; \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528 INNER JOIN \u64cd\u4f5c\u5c06 orders \u8868\u548c customers \u8868\u8fde\u63a5\u8d77\u6765\uff0c\u5e76\u6307\u5b9a\u4e86 orders.customer_id = customers.id \u4f5c\u4e3a\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5173\u8054\u6761\u4ef6\u3002\u8fd9\u610f\u5473\u7740\uff0c\u53ea\u6709 orders \u8868\u4e2d\u7684 customer_id \u503c\u4e0e customers \u8868\u4e2d\u7684 id \u503c\u5339\u914d\u65f6\uff0c\u624d\u4f1a\u8fd4\u56de\u76f8\u5173\u7684\u884c\u3002 ON \u5173\u952e\u5b57\u540e\u9762\u7684\u6761\u4ef6\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u8fd0\u7b97\u7b26\u548c\u51fd\u6570\uff0c\u4f8b\u5982\uff1a \u7b49\u4e8e\u8fd0\u7b97\u7b26\uff08=\uff09 SELECT * FROM orders INNER JOIN customers ON orders . customer_id = customers . id ; \u4e0d\u7b49\u4e8e\u8fd0\u7b97\u7b26\uff08<>\uff09 SELECT * FROM orders INNER JOIN customers ON orders . customer_id <> customers . id ; \u5927\u4e8e\u8fd0\u7b97\u7b26\uff08>\uff09 SELECT * FROM orders INNER JOIN customers ON orders . order_date > customers . join_date ; \u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff08<\uff09 SELECT * FROM orders INNER JOIN customers ON orders . order_date < customers . join_date ; IN \u8fd0\u7b97\u7b26 SELECT * FROM orders INNER JOIN customers ON orders . customer_id IN ( 1 , 2 , 3 ); LIKE \u8fd0\u7b97\u7b26 SELECT * FROM orders INNER JOIN customers ON customers.name LIKE 'J%'; \u51fd\u6570 SELECT * FROM orders INNER JOIN customers ON YEAR ( orders . order_date ) = YEAR ( customers . join_date ); \u5728\u4f7f\u7528 ON \u5173\u952e\u5b57\u65f6\uff0c\u9700\u8981\u786e\u4fdd\u5173\u8054\u6761\u4ef6\u662f\u6b63\u786e\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u786e\u4fdd\u6b63\u786e\u5730\u5173\u8054\u4e24\u4e2a\u8868\u3002\u5982\u679c\u5173\u8054\u6761\u4ef6\u4e0d\u6b63\u786e\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u67e5\u8be2\u7ed3\u679c\u3002","title":"\u5173\u4e8e ON"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-andornot","text":"\u5728 MySQL \u4e2d\uff0cAND\u3001OR \u548c NOT \u662f\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u7ec4\u5408\u548c\u64cd\u4f5c\u591a\u4e2a\u6761\u4ef6\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a AND \u8fd0\u7b97\u7b26 AND \u8fd0\u7b97\u7b26\u7528\u4e8e\u7ec4\u5408\u591a\u4e2a\u6761\u4ef6\uff0c\u5e76\u8fd4\u56de\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u884c\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE age > 18 AND gender = 'F' ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5927\u4e8e 18 \u5c81\u4e14\u6027\u522b\u4e3a\u5973\u6027\u7684\u5ba2\u6237\u3002 OR \u8fd0\u7b97\u7b26 OR \u8fd0\u7b97\u7b26\u7528\u4e8e\u7ec4\u5408\u591a\u4e2a\u6761\u4ef6\uff0c\u5e76\u8fd4\u56de\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\u7684\u884c\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE age > 18 OR gender = 'F' ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5927\u4e8e 18 \u5c81\u6216\u6027\u522b\u4e3a\u5973\u6027\u7684\u5ba2\u6237\u3002 NOT \u8fd0\u7b97\u7b26 NOT \u8fd0\u7b97\u7b26\u7528\u4e8e\u5426\u5b9a\u4e00\u4e2a\u6761\u4ef6\uff0c\u8fd4\u56de\u4e0d\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u884c\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE NOT age > 18 ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5c0f\u4e8e\u6216\u7b49\u4e8e 18 \u5c81\u7684\u5ba2\u6237\u3002 \u7ec4\u5408\u4f7f\u7528 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\uff0c\u4ee5\u4fbf\u66f4\u590d\u6742\u7684\u6761\u4ef6\u7b5b\u9009\u3002\u4f8b\u5982\uff1a SELECT * FROM customers WHERE age > 18 AND ( gender = 'F' OR city = 'New York' ) AND NOT status = 'inactive' ; \u4e0a\u9762\u7684\u67e5\u8be2\u5c06\u8fd4\u56de\u6240\u6709\u5e74\u9f84\u5927\u4e8e 18 \u5c81\u3001\u6027\u522b\u4e3a\u5973\u6027\u6216\u4f4f\u5728\u7ebd\u7ea6\u5e02\u3001\u4e14\u72b6\u6001\u4e0d\u4e3a\u201cinactive\u201d\u7684\u5ba2\u6237\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4f7f\u7528 AND\u3001OR \u548c NOT \u8fd0\u7b97\u7b26\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u62ec\u53f7\u6765\u660e\u786e\u6761\u4ef6\u7684\u4f18\u5148\u7ea7\uff0c\u4ee5\u4fbf\u786e\u4fdd\u6761\u4ef6\u7ec4\u5408\u7684\u6b63\u786e\u6027\u3002","title":"\u5173\u4e8e AND,OR,NOT"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#\u5173\u4e8e-like","text":"\u5728 MySQL \u4e2d\uff0cLIKE \u662f\u4e00\u79cd\u6a21\u5f0f\u5339\u914d\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u6307\u5b9a\u7684\u6a21\u5f0f\u6216\u5b50\u5b57\u7b26\u4e32\u3002LIKE \u8fd0\u7b97\u7b26\u901a\u5e38\u4e0e\u901a\u914d\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u5339\u914d\u5b57\u7b26\u4e32\u3002 LIKE \u8fd0\u7b97\u7b26\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a SELECT column_name ( s ) FROM table_name WHERE column_name LIKE pattern ; \u5176\u4e2d\uff0ccolumn_name \u662f\u8981\u5339\u914d\u7684\u5217\u540d\uff0ctable_name \u662f\u8981\u67e5\u8be2\u7684\u8868\u540d\uff0cpattern \u662f\u8981\u5339\u914d\u7684\u6a21\u5f0f\u6216\u5b50\u5b57\u7b26\u4e32\u3002pattern \u53ef\u4ee5\u5305\u542b\u901a\u914d\u7b26\uff0c\u4ee5\u4fbf\u66f4\u7075\u6d3b\u5730\u5339\u914d\u5b57\u7b26\u4e32\u3002 \u5728 MySQL \u4e2d\uff0cLIKE \u8fd0\u7b97\u7b26\u652f\u6301\u4e24\u79cd\u901a\u914d\u7b26\uff1a \u767e\u5206\u53f7\uff08%\uff09\uff1a\u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c'a%' \u5339\u914d\u4ee5\u5b57\u6bcd a \u5f00\u5934\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c'%a' \u5339\u914d\u4ee5\u5b57\u6bcd a \u7ed3\u5c3e\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c'%a%' \u5339\u914d\u5305\u542b\u5b57\u6bcd a \u7684\u4efb\u4f55\u5b57\u7b26\u4e32\u3002 \u4e0b\u5212\u7ebf\uff08 \uff09\uff1a\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u3002\u4f8b\u5982\uff0c'a ' \u5339\u914d\u4ee5\u5b57\u6bcd a \u5f00\u5934\u4e14\u957f\u5ea6\u4e3a\u4e24\u4e2a\u5b57\u7b26\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c'_a' \u5339\u914d\u4ee5\u5b57\u6bcd a \u7ed3\u5c3e\u4e14\u957f\u5ea6\u4e3a\u4e24\u4e2a\u5b57\u7b26\u7684\u4efb\u4f55\u5b57\u7b26\u4e32\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528 LIKE \u8fd0\u7b97\u7b26\u7684\u793a\u4f8b\uff1a \u67e5\u627e\u4ee5 'J' \u5f00\u5934\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE 'J%' ; \u67e5\u627e\u5305\u542b 'doe' \u5b50\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE '%doe%' ; \u67e5\u627e\u4ee5 'j' \u5f00\u5934\u4e14\u957f\u5ea6\u4e3a 4 \u4e2a\u5b57\u7b26\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE 'j___' ; \u67e5\u627e\u4ee5 'j' \u5f00\u5934\u6216\u4ee5 's' \u7ed3\u5c3e\u7684\u6240\u6709\u5ba2\u6237\u540d\uff1a SELECT * FROM customers WHERE name LIKE 'j%' OR name LIKE '%s' ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLIKE \u8fd0\u7b97\u7b26\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6267\u884c\u6a21\u5f0f\u5339\u914d\u3002\u5982\u679c\u8981\u8fdb\u884c\u9ad8\u6548\u7684\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5168\u6587\u672c\u641c\u7d22\u5f15\u64ce\uff0c\u5982 MySQL \u63d0\u4f9b\u7684\u5168\u6587\u672c\u641c\u7d22\u5f15\u64ce MyISAM \u6216 InnoDB \u5f15\u64ce\u4e2d\u7684\u5168\u6587\u672c\u641c\u7d22\u63d2\u4ef6\u3002","title":"\u5173\u4e8e LIKE"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL-Learn-meowrain/#mysql-function","text":"\u6bd4\u5982\uff0c\u6211\u73b0\u5728\u6709\u4e2a\u9700\u6c42\uff0c\u8ba1\u7b97\u4e0a\u9762\u6d88\u8d39\u6b21\u6570 SELECT COUNT ( amount ) FROM transactions ; SELECT MAX ( amount ) AS max_amount FROM transactions ; SELECT SUM ( amount ) AS all_amount FROM transactions ; \u94fe\u63a5\u5b57\u7b26\u4e32 employee \u8868\u5185\u5bb9 \u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u628a\u540d\u5b57\u8fde\u8d77\u6765 SELECT CONCAT ( first_name , \" \" , last_name ) FROM employees ;","title":"MYSQL Function"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/","text":"MySQL\u6570\u636e\u5e93 # \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08RDBMS) # \u6982\u5ff5 \uff1a\u5efa\u7acb\u5728\u5173\u7cfb\u6a21\u578b\u57fa\u7840\u4e0a\uff0c\u6709\u591a\u5f20\u76f8\u4e92\u8fde\u63a5\u7684\u4e8c\u7ef4\u8868\u7ec4\u6210\u7684\u6570\u636e\u5e93\u3002 \u7279\u70b9 \uff1a 1.\u4f7f\u7528\u8868\u5b58\u50a8\u6570\u636e\uff0c\u683c\u5f0f\u7edf\u4e00\uff0c\u4fbf\u4e8e\u7ef4\u62a4 2.\u4f7f\u7528SQL\u8bed\u8a00\u64cd\u4f5c\uff0c\u6807\u51c6\u7edf\u4e00\uff0c\u4f7f\u7528\u65b9\u4fbf SQL\u8bed\u8a00 # SQL\u901a\u7528\u8bed\u6cd5 # 1.SQL\u8bed\u53e5\u53ef\u4ee5\u5355\u884c\u6216\u591a\u884c\u4e66\u5199\uff0c\u5206\u53f7\u7ed3\u5c3e 2.SQL\u8bed\u53e5\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u7f29\u8fdb\u6765\u589e\u5f3a\u8bed\u53e5\u53ef\u8bfb\u6027 3.SQL\u8bed\u53e5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5173\u952e\u5b57\u5efa\u8bae\u4f7f\u7528\u5927\u5199 4.\u6ce8\u91ca\uff1a \u200b \u5355\u884c\u6ce8\u91ca\uff1a--\u6216# \u200b \u591a\u884c\u6ce8\u91ca\uff1a/* */ \u5206\u7c7b # 1.DDL \u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff0c\u7528\u6765\u5b9a\u4e49\u6570\u636e\u5e93\u5bf9\u8c61\uff08\u6570\u636e\u5e93\uff0c\u8868\uff0c\u5b57\u6bb5\uff09 2.DML\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u7528\u6765\u5bf9\u6570\u636e\u5e93\u8868\u7684\u6570\u636e\u8fdb\u884c\u589e\u5220\u51cf 3.DQL\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u6765\u67e5\u8be2\u6570\u636e\u5e93\u8868\u7684\u8bb0\u5f55 4.DCL\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff0c\u7528\u6765\u521b\u5efa\u6570\u636e\u5e93\u7528\u6237\uff0c\u63a7\u5236\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u6743\u9650 DDL # \u6570\u636e\u5e93\u64cd\u4f5c # \u67e5\u8be2 \u67e5\u8be2\u6240\u6709\u6570\u636e SHOW DATABASES; \u67e5\u8be2\u5f53\u524d\u6570\u636e SELECT DATABASE(); \u521b\u5efa CREATE DATABASE[IF NOT EXISTS]\u6570\u636e\u5e93\u540d[DEFAULT CHARSET\u5b57\u7b26\u96c6] [COLLATE \u6392\u5e8f\u89c4\u5219]; \u5220\u9664 DROP DATABASE[IF EXISTS]\u6570\u636e\u5e93\u540d; \u4f7f\u7528 USE \u6570\u636e\u5e93\u540d; \u8868\u64cd\u4f5c # \u67e5\u8be2 \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\u6240\u6709\u8868 SHOW TABLES; \u67e5\u8be2\u8868\u7ed3\u6784 DESC \u8868\u540d; \u67e5\u8be2\u6307\u5b9a\u8868\u7684\u5efa\u8868\u8bed\u53e5 SHOW CERATE TABLE \u8868\u540d; \u521b\u5efa CREATE TABLE \u8868\u540d ( \u5b57\u6bb5 1 \u5b57\u6bb5 1 \u7c7b\u578b [ COMMENT \u5b57\u6bb5 1 \u6ce8\u91ca ], \u5b57\u6bb5 2 \u5b57\u6bb5 2 \u7c7b\u578b [ COMMENT \u5b57\u6bb5 2 \u6ce8\u91ca ] )[ COMMENT \u8868\u6ce8\u91ca ]; \u6570\u636e\u7c7b\u578b \u6570\u503c\u7c7b\u578b\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u65e5\u671f\u7c7b\u578b\uff1b \u4fee\u6539 \u6dfb\u52a0\u5b57\u6bb5 ALTER TABLE \u8868\u540dADD \u5b57\u6bb5\u540d \u7c7b\u578b\uff08\u957f\u5ea6\uff09[comment \u6ce8\u91ca][\u7ea6\u675f]; \u4fee\u6539\u6570\u636e\u7c7b\u578b ALTER TABLE \u8868\u540d MODIFY \u5b57\u6bb5\u540d \u65b0\u6570\u636e\u7c7b\u578b(\u957f\u5ea6); \u4fee\u6539\u5b57\u6bb5\u540d\u548c\u7c7b\u578b ALTER TABLE \u8868\u540d CHANGE \u65e7\u5b57\u6bb5\u540d \u65b0\u5b57\u6bb5\u540d \u7c7b\u578b(\u957f\u5ea6) [COMMENT \u6ce8\u91ca][\u7ea6\u675f] ; \u5220\u9664\u5b57\u6bb5 ALTER TABLE \u8868\u540d DROP \u5b57\u6bb5\u540d; \u4fee\u6539\u8868\u540d ALTER TABLE \u8868\u540d RENAME TO \u65b0\u8868\u540d; \u5220\u9664 \u5220\u9664\u8868 DROP TABLE[IF EXISTS] \u8868\u540d; \u5220\u9664\u6307\u5b9a\u8868\uff0c\u5e76\u91cd\u65b0\u521b\u5efa\u8be5\u8868 (\u6e05\u7a7a\u6570\u636e) TRUNCATE TABLE \u8868\u540d; MySQL\u56fe\u5f62\u5316\u5de5\u5177 # Navicat\uff0cDatagrip Navicat\u7684\u5b89\u88c5\u548c\u7834\u89e3\uff1a( https://www.bilibili.com/video/BV1V84y137VG/?p=6&spm_id_from=333.880.my_history.page.click ) DML # \u6dfb\u52a0\u6570\u636e (NSERT) # 1.\u7ed9\u6307\u5b9a\u5b57\u6bb5\u6dfb\u52a0\u6570\u636e INSET INTO \u8868\u540d\uff08\u5b57\u6bb5\u540d1\uff0c\u5b57\u6bb5\u540d2\uff09VALUES(\u503c1\uff0c\u503c2); 2.\u7ed9\u5168\u90e8\u5b57\u6bb5\u6dfb\u52a0\u6570\u636e INSET INTO \u8868\u540d VALUES(\u503c1\uff0c\u503c2); 3.\u6279\u91cf\u6dfb\u52a0\u6570\u636e INSET INTO \u8868\u540d\uff08\u5b57\u6bb5\u540d1\uff0c\u5b57\u6bb5\u540d2\uff09VALUES(\u503c1\uff0c\u503c2),(\u503c1\uff0c\u503c2); INSET INTO \u8868\u540d VALUES(\u503c1\uff0c\u503c2),(\u503c1\uff0c\u503c2); \u4fee\u6539\u6570\u636e (UPDATE) # UPDATE\u8868\u540d SET \u5b57\u6bb5\u540d1 = \u503c1,\u5b57\u6bb5\u540d2 = \u503c2\uff0c [WHERE \u6761\u4ef6]; \u6ce8\uff1a\u5982\u679c\u6ca1\u6709\u6761\u4ef6\uff0c\u4f1a\u4fee\u6539\u6574\u5f20\u8868\u7684\u6240\u6709\u6570\u636e\u3002 \u5220\u9664\u6570\u636e (DELETE) # DELETE FROM \u8868\u540d [WHERE \u6761\u4ef6] \u6ce8\uff1a1.\u5982\u679c\u6ca1\u6709\u6761\u4ef6\uff0c\u4f1a\u5220\u9664\u6574\u5f20\u8868\u7684\u6240\u6709\u6570\u636e\u3002 \u200b 2.\u4e0d\u80fd\u5220\u9664\u67d0\u4e00\u4e2a\u5b57\u6bb5\u7684\u503c\u3002 DQL # \u8bed\u6cd5 # SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d\u5217\u8868 WHERE \u6761\u4ef6\u5217\u8868 GROUP BY \u5206\u7ec4\u5b57\u6bb5\u5217\u8868 HAVING \u5206\u7ec4\u540e\u6761\u4ef6\u5217\u8868 ORDER BY \u6392\u5e8f\u5b57\u6bb5\u5217\u8868 LIMIT \u5206\u9875\u53c2\u6570 \u57fa\u672c\u67e5\u8be2 # 1.\u67e5\u8be2\u591a\u4e2a\u5b57\u6bb5 SELECT \u5b57\u6bb51\uff0c\u5b57\u6bb52 FROM \u8868\u540d; SELECT *FROM \u8868\u540d; \u67e5\u8be2\u6240\u6709\u5b57\u6bb5\u8fd4\u56de\uff08\u4e0d\u5efa\u8bae\u5199*\uff0c\u6548\u7387\u4f4e\uff09 2.\u8bbe\u7f6e\u522b\u540d SELECT \u5b57\u6bb51[AS \u522b\u540d1]\uff0c\u5b57\u6bb52[AS \u522b\u540d2] FROM \u8868\u540d; 3.\u53bb\u9664\u91cd\u590d\u8bb0\u5f55 SELECT DISTINCT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d; \u6761\u4ef6\u67e5\u8be2(WHERE) # 1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d WHERE \u6761\u4ef6\u5217\u8868; 2.\u6761\u4ef6 \u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u903b\u8f91\u8fd0\u7b97\u7b26(\u4e0eJava\uff0cc\u76f8\u4f3c) \u4e0eJava\uff0cc\u4e0d\u540c\u7684\u8fd0\u7b97\u7b26\u6709\uff1a BETWEEN ... AND ... \u5728\u67d0\u4e2a\u8303\u56f4\u4e4b\u5185\uff08\u6709\u6700\u5927\u6700\u5c0f\u503c\uff09 IN\uff08...\uff09\u5728in\u4e4b\u540e\u7684\u5217\u8868\u4e2d\u7684\u503c\uff0c\u591a\u9009\u4e00 LIKE \u5360\u4f4d\u7b26 \u6a21\u7cca\u5339\u914d\uff08_\u5339\u914d\u5355\u4e2a\u5b57\u7b26\uff0c%\u5339\u914d\u4efb\u610f\u4e2a\u5b57\u7b26\uff09 IS NULL \u662fNULL \u805a\u5408\u51fd\u6570(count,max,min,avg,sum) # 1.\u4ecb\u7ecd\uff1a \u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8fdb\u884c\u7eb5\u5411\u8ba1\u7b97\u3002 2.\u5e38\u89c1\u7684\u805a\u5408\u51fd\u6570 count \u7edf\u8ba1\u6570\u91cf max \u6700\u5927\u503c min \u6700\u5c0f\u503c avg \u5e73\u5747\u503c sum \u6c42\u548c 3.\u8bed\u6cd5 SELECT \u805a\u5408\u51fd\u6570\uff08\u5b57\u6bb5\u5217\u8868\uff09 FROM \u8868\u540d; \u5206\u7ec4\u67e5\u8be2(GROUP BY) # 1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d [WHERE \u6761\u4ef6] GROUP BY \u5206\u7ec4\u5b57\u6bb5\u540d [HAVING \u5206\u7ec4\u540e\u8fc7\u6ee4\u6761\u4ef6]; 2.where\u548chaving\u7684\u533a\u522b \u6267\u884c\u65f6\u673a\u4e0d\u540c\uff1awhere\u662f\u5206\u7ec4\u4e4b\u524d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u6ee1\u8db3where\u6761\u4ef6\uff0c\u4e0d\u53c2\u4e0e\u5206\u7ec4\uff1b\u800chaving\u662f\u5206\u7ec4\u4e4b\u540e\u5bf9\u7ed3\u679c\u8fdb\u884c\u8fc7\u6ee4\u3002 \u5224\u65ad\u6761\u4ef6\u4e0d\u540c\uff1awhere\u4e0d\u80fd\u5bf9\u805a\u5408\u51fd\u6570\u8fdb\u884c\u5224\u65ad\uff0chaving\u53ef\u4ee5\u3002 \u6ce8\uff1awhere>\u805a\u5408\u51fd\u6570>having\u3002 \u200b \u5206\u7ec4\u4e4b\u540e\uff0c\u67e5\u8be2\u7684\u5b57\u6bb5\u4e00\u822c\u4e3a\u805a\u5408\u51fd\u6570\u548c\u5206\u7ec4\u5b57\u6bb5\uff0c\u67e5\u8be2\u5176\u4ed6\u5b57\u6bb5\u65e0\u610f\u4e49\u3002 \u6392\u5e8f\u67e5\u8be2(ORDER BY) # 1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d ORDER BY \u5b57\u6bb51 \u6392\u5e8f\u65b9\u5f0f1\uff0c\u5b57\u6bb52\uff0c\u6392\u5e8f\u65b9\u5f0f2; 2.\u6392\u5e8f\u65b9\u5f0f\uff1a ASC\uff08 \u5347\u5e8f\uff0c\u53ef\u7701\u7565\uff09 DESC (\u964d\u5e8f\uff0c\u4e0d\u53ef\u7701\u7565\uff09\u3002 \u6ce8\uff1a\u591a\u5b57\u6bb5\u6392\u5e8f\uff0c\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u76f8\u540c\u65f6\uff0c\u624d\u4f1a\u6839\u636e\u7b2c\u4e8c\u4e2a\u6392\u5e8f\u3002 \u5206\u9875\u67e5\u8be2(LIMIY) # 1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d LIMIT \u8d77\u59cb\u7d22\u5f15\uff0c\u67e5\u8be2\u8bb0\u5f55\u6570; \u6ce8\uff1a\u8d77\u59cb\u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u8d77\u59cb\u7d22\u5f15=\uff08\u67e5\u8be2\u9875\u7801-1\uff09*\u6bcf\u9875\u663e\u793a\u8bb0\u5f55\u6570\u3002 \u200b limit\u662fMySQL\u7279\u6709\uff0c\u522b\u7684\u6570\u636e\u5e93\u662f\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 \u200b \u5982\u679c\u67e5\u8be2\u662f\u7b2c\u4e00\u9875\u6570\u636e\uff0c\u8d77\u59cb\u7d22\u5f15\u53ef\u7701\uff0c\u76f4\u63a5\u7b80\u5199\u4e3a limit 10\u3002","title":"MySQL\u6570\u636e\u5e93"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#mysql\u6570\u636e\u5e93","text":"","title":"MySQL\u6570\u636e\u5e93"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u5173\u7cfb\u578b\u6570\u636e\u5e93rdbms","text":"\u6982\u5ff5 \uff1a\u5efa\u7acb\u5728\u5173\u7cfb\u6a21\u578b\u57fa\u7840\u4e0a\uff0c\u6709\u591a\u5f20\u76f8\u4e92\u8fde\u63a5\u7684\u4e8c\u7ef4\u8868\u7ec4\u6210\u7684\u6570\u636e\u5e93\u3002 \u7279\u70b9 \uff1a 1.\u4f7f\u7528\u8868\u5b58\u50a8\u6570\u636e\uff0c\u683c\u5f0f\u7edf\u4e00\uff0c\u4fbf\u4e8e\u7ef4\u62a4 2.\u4f7f\u7528SQL\u8bed\u8a00\u64cd\u4f5c\uff0c\u6807\u51c6\u7edf\u4e00\uff0c\u4f7f\u7528\u65b9\u4fbf","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08RDBMS)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#sql\u8bed\u8a00","text":"","title":"SQL\u8bed\u8a00"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#sql\u901a\u7528\u8bed\u6cd5","text":"1.SQL\u8bed\u53e5\u53ef\u4ee5\u5355\u884c\u6216\u591a\u884c\u4e66\u5199\uff0c\u5206\u53f7\u7ed3\u5c3e 2.SQL\u8bed\u53e5\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u7f29\u8fdb\u6765\u589e\u5f3a\u8bed\u53e5\u53ef\u8bfb\u6027 3.SQL\u8bed\u53e5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5173\u952e\u5b57\u5efa\u8bae\u4f7f\u7528\u5927\u5199 4.\u6ce8\u91ca\uff1a \u200b \u5355\u884c\u6ce8\u91ca\uff1a--\u6216# \u200b \u591a\u884c\u6ce8\u91ca\uff1a/* */","title":"SQL\u901a\u7528\u8bed\u6cd5"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u5206\u7c7b","text":"1.DDL \u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff0c\u7528\u6765\u5b9a\u4e49\u6570\u636e\u5e93\u5bf9\u8c61\uff08\u6570\u636e\u5e93\uff0c\u8868\uff0c\u5b57\u6bb5\uff09 2.DML\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u7528\u6765\u5bf9\u6570\u636e\u5e93\u8868\u7684\u6570\u636e\u8fdb\u884c\u589e\u5220\u51cf 3.DQL\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u6765\u67e5\u8be2\u6570\u636e\u5e93\u8868\u7684\u8bb0\u5f55 4.DCL\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff0c\u7528\u6765\u521b\u5efa\u6570\u636e\u5e93\u7528\u6237\uff0c\u63a7\u5236\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u6743\u9650","title":"\u5206\u7c7b"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#ddl","text":"","title":"DDL"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u6570\u636e\u5e93\u64cd\u4f5c","text":"\u67e5\u8be2 \u67e5\u8be2\u6240\u6709\u6570\u636e SHOW DATABASES; \u67e5\u8be2\u5f53\u524d\u6570\u636e SELECT DATABASE(); \u521b\u5efa CREATE DATABASE[IF NOT EXISTS]\u6570\u636e\u5e93\u540d[DEFAULT CHARSET\u5b57\u7b26\u96c6] [COLLATE \u6392\u5e8f\u89c4\u5219]; \u5220\u9664 DROP DATABASE[IF EXISTS]\u6570\u636e\u5e93\u540d; \u4f7f\u7528 USE \u6570\u636e\u5e93\u540d;","title":"\u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u8868\u64cd\u4f5c","text":"\u67e5\u8be2 \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\u6240\u6709\u8868 SHOW TABLES; \u67e5\u8be2\u8868\u7ed3\u6784 DESC \u8868\u540d; \u67e5\u8be2\u6307\u5b9a\u8868\u7684\u5efa\u8868\u8bed\u53e5 SHOW CERATE TABLE \u8868\u540d; \u521b\u5efa CREATE TABLE \u8868\u540d ( \u5b57\u6bb5 1 \u5b57\u6bb5 1 \u7c7b\u578b [ COMMENT \u5b57\u6bb5 1 \u6ce8\u91ca ], \u5b57\u6bb5 2 \u5b57\u6bb5 2 \u7c7b\u578b [ COMMENT \u5b57\u6bb5 2 \u6ce8\u91ca ] )[ COMMENT \u8868\u6ce8\u91ca ]; \u6570\u636e\u7c7b\u578b \u6570\u503c\u7c7b\u578b\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u65e5\u671f\u7c7b\u578b\uff1b \u4fee\u6539 \u6dfb\u52a0\u5b57\u6bb5 ALTER TABLE \u8868\u540dADD \u5b57\u6bb5\u540d \u7c7b\u578b\uff08\u957f\u5ea6\uff09[comment \u6ce8\u91ca][\u7ea6\u675f]; \u4fee\u6539\u6570\u636e\u7c7b\u578b ALTER TABLE \u8868\u540d MODIFY \u5b57\u6bb5\u540d \u65b0\u6570\u636e\u7c7b\u578b(\u957f\u5ea6); \u4fee\u6539\u5b57\u6bb5\u540d\u548c\u7c7b\u578b ALTER TABLE \u8868\u540d CHANGE \u65e7\u5b57\u6bb5\u540d \u65b0\u5b57\u6bb5\u540d \u7c7b\u578b(\u957f\u5ea6) [COMMENT \u6ce8\u91ca][\u7ea6\u675f] ; \u5220\u9664\u5b57\u6bb5 ALTER TABLE \u8868\u540d DROP \u5b57\u6bb5\u540d; \u4fee\u6539\u8868\u540d ALTER TABLE \u8868\u540d RENAME TO \u65b0\u8868\u540d; \u5220\u9664 \u5220\u9664\u8868 DROP TABLE[IF EXISTS] \u8868\u540d; \u5220\u9664\u6307\u5b9a\u8868\uff0c\u5e76\u91cd\u65b0\u521b\u5efa\u8be5\u8868 (\u6e05\u7a7a\u6570\u636e) TRUNCATE TABLE \u8868\u540d;","title":"\u8868\u64cd\u4f5c"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#mysql\u56fe\u5f62\u5316\u5de5\u5177","text":"Navicat\uff0cDatagrip Navicat\u7684\u5b89\u88c5\u548c\u7834\u89e3\uff1a( https://www.bilibili.com/video/BV1V84y137VG/?p=6&spm_id_from=333.880.my_history.page.click )","title":"MySQL\u56fe\u5f62\u5316\u5de5\u5177"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#dml","text":"","title":"DML"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u6dfb\u52a0\u6570\u636e-nsert","text":"1.\u7ed9\u6307\u5b9a\u5b57\u6bb5\u6dfb\u52a0\u6570\u636e INSET INTO \u8868\u540d\uff08\u5b57\u6bb5\u540d1\uff0c\u5b57\u6bb5\u540d2\uff09VALUES(\u503c1\uff0c\u503c2); 2.\u7ed9\u5168\u90e8\u5b57\u6bb5\u6dfb\u52a0\u6570\u636e INSET INTO \u8868\u540d VALUES(\u503c1\uff0c\u503c2); 3.\u6279\u91cf\u6dfb\u52a0\u6570\u636e INSET INTO \u8868\u540d\uff08\u5b57\u6bb5\u540d1\uff0c\u5b57\u6bb5\u540d2\uff09VALUES(\u503c1\uff0c\u503c2),(\u503c1\uff0c\u503c2); INSET INTO \u8868\u540d VALUES(\u503c1\uff0c\u503c2),(\u503c1\uff0c\u503c2);","title":"\u6dfb\u52a0\u6570\u636e (NSERT)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u4fee\u6539\u6570\u636e-update","text":"UPDATE\u8868\u540d SET \u5b57\u6bb5\u540d1 = \u503c1,\u5b57\u6bb5\u540d2 = \u503c2\uff0c [WHERE \u6761\u4ef6]; \u6ce8\uff1a\u5982\u679c\u6ca1\u6709\u6761\u4ef6\uff0c\u4f1a\u4fee\u6539\u6574\u5f20\u8868\u7684\u6240\u6709\u6570\u636e\u3002","title":"\u4fee\u6539\u6570\u636e (UPDATE)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u5220\u9664\u6570\u636e-delete","text":"DELETE FROM \u8868\u540d [WHERE \u6761\u4ef6] \u6ce8\uff1a1.\u5982\u679c\u6ca1\u6709\u6761\u4ef6\uff0c\u4f1a\u5220\u9664\u6574\u5f20\u8868\u7684\u6240\u6709\u6570\u636e\u3002 \u200b 2.\u4e0d\u80fd\u5220\u9664\u67d0\u4e00\u4e2a\u5b57\u6bb5\u7684\u503c\u3002","title":"\u5220\u9664\u6570\u636e (DELETE)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#dql","text":"","title":"DQL"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u8bed\u6cd5","text":"SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d\u5217\u8868 WHERE \u6761\u4ef6\u5217\u8868 GROUP BY \u5206\u7ec4\u5b57\u6bb5\u5217\u8868 HAVING \u5206\u7ec4\u540e\u6761\u4ef6\u5217\u8868 ORDER BY \u6392\u5e8f\u5b57\u6bb5\u5217\u8868 LIMIT \u5206\u9875\u53c2\u6570","title":"\u8bed\u6cd5"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u57fa\u672c\u67e5\u8be2","text":"1.\u67e5\u8be2\u591a\u4e2a\u5b57\u6bb5 SELECT \u5b57\u6bb51\uff0c\u5b57\u6bb52 FROM \u8868\u540d; SELECT *FROM \u8868\u540d; \u67e5\u8be2\u6240\u6709\u5b57\u6bb5\u8fd4\u56de\uff08\u4e0d\u5efa\u8bae\u5199*\uff0c\u6548\u7387\u4f4e\uff09 2.\u8bbe\u7f6e\u522b\u540d SELECT \u5b57\u6bb51[AS \u522b\u540d1]\uff0c\u5b57\u6bb52[AS \u522b\u540d2] FROM \u8868\u540d; 3.\u53bb\u9664\u91cd\u590d\u8bb0\u5f55 SELECT DISTINCT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d;","title":"\u57fa\u672c\u67e5\u8be2"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u6761\u4ef6\u67e5\u8be2where","text":"1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d WHERE \u6761\u4ef6\u5217\u8868; 2.\u6761\u4ef6 \u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u903b\u8f91\u8fd0\u7b97\u7b26(\u4e0eJava\uff0cc\u76f8\u4f3c) \u4e0eJava\uff0cc\u4e0d\u540c\u7684\u8fd0\u7b97\u7b26\u6709\uff1a BETWEEN ... AND ... \u5728\u67d0\u4e2a\u8303\u56f4\u4e4b\u5185\uff08\u6709\u6700\u5927\u6700\u5c0f\u503c\uff09 IN\uff08...\uff09\u5728in\u4e4b\u540e\u7684\u5217\u8868\u4e2d\u7684\u503c\uff0c\u591a\u9009\u4e00 LIKE \u5360\u4f4d\u7b26 \u6a21\u7cca\u5339\u914d\uff08_\u5339\u914d\u5355\u4e2a\u5b57\u7b26\uff0c%\u5339\u914d\u4efb\u610f\u4e2a\u5b57\u7b26\uff09 IS NULL \u662fNULL","title":"\u6761\u4ef6\u67e5\u8be2(WHERE)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u805a\u5408\u51fd\u6570countmaxminavgsum","text":"1.\u4ecb\u7ecd\uff1a \u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8fdb\u884c\u7eb5\u5411\u8ba1\u7b97\u3002 2.\u5e38\u89c1\u7684\u805a\u5408\u51fd\u6570 count \u7edf\u8ba1\u6570\u91cf max \u6700\u5927\u503c min \u6700\u5c0f\u503c avg \u5e73\u5747\u503c sum \u6c42\u548c 3.\u8bed\u6cd5 SELECT \u805a\u5408\u51fd\u6570\uff08\u5b57\u6bb5\u5217\u8868\uff09 FROM \u8868\u540d;","title":"\u805a\u5408\u51fd\u6570(count,max,min,avg,sum)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u5206\u7ec4\u67e5\u8be2group-by","text":"1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d [WHERE \u6761\u4ef6] GROUP BY \u5206\u7ec4\u5b57\u6bb5\u540d [HAVING \u5206\u7ec4\u540e\u8fc7\u6ee4\u6761\u4ef6]; 2.where\u548chaving\u7684\u533a\u522b \u6267\u884c\u65f6\u673a\u4e0d\u540c\uff1awhere\u662f\u5206\u7ec4\u4e4b\u524d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u6ee1\u8db3where\u6761\u4ef6\uff0c\u4e0d\u53c2\u4e0e\u5206\u7ec4\uff1b\u800chaving\u662f\u5206\u7ec4\u4e4b\u540e\u5bf9\u7ed3\u679c\u8fdb\u884c\u8fc7\u6ee4\u3002 \u5224\u65ad\u6761\u4ef6\u4e0d\u540c\uff1awhere\u4e0d\u80fd\u5bf9\u805a\u5408\u51fd\u6570\u8fdb\u884c\u5224\u65ad\uff0chaving\u53ef\u4ee5\u3002 \u6ce8\uff1awhere>\u805a\u5408\u51fd\u6570>having\u3002 \u200b \u5206\u7ec4\u4e4b\u540e\uff0c\u67e5\u8be2\u7684\u5b57\u6bb5\u4e00\u822c\u4e3a\u805a\u5408\u51fd\u6570\u548c\u5206\u7ec4\u5b57\u6bb5\uff0c\u67e5\u8be2\u5176\u4ed6\u5b57\u6bb5\u65e0\u610f\u4e49\u3002","title":"\u5206\u7ec4\u67e5\u8be2(GROUP BY)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u6392\u5e8f\u67e5\u8be2order-by","text":"1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d ORDER BY \u5b57\u6bb51 \u6392\u5e8f\u65b9\u5f0f1\uff0c\u5b57\u6bb52\uff0c\u6392\u5e8f\u65b9\u5f0f2; 2.\u6392\u5e8f\u65b9\u5f0f\uff1a ASC\uff08 \u5347\u5e8f\uff0c\u53ef\u7701\u7565\uff09 DESC (\u964d\u5e8f\uff0c\u4e0d\u53ef\u7701\u7565\uff09\u3002 \u6ce8\uff1a\u591a\u5b57\u6bb5\u6392\u5e8f\uff0c\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u76f8\u540c\u65f6\uff0c\u624d\u4f1a\u6839\u636e\u7b2c\u4e8c\u4e2a\u6392\u5e8f\u3002","title":"\u6392\u5e8f\u67e5\u8be2(ORDER BY)"},{"location":"%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Learn/#\u5206\u9875\u67e5\u8be2limiy","text":"1.\u8bed\u6cd5 SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d LIMIT \u8d77\u59cb\u7d22\u5f15\uff0c\u67e5\u8be2\u8bb0\u5f55\u6570; \u6ce8\uff1a\u8d77\u59cb\u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u8d77\u59cb\u7d22\u5f15=\uff08\u67e5\u8be2\u9875\u7801-1\uff09*\u6bcf\u9875\u663e\u793a\u8bb0\u5f55\u6570\u3002 \u200b limit\u662fMySQL\u7279\u6709\uff0c\u522b\u7684\u6570\u636e\u5e93\u662f\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 \u200b \u5982\u679c\u67e5\u8be2\u662f\u7b2c\u4e00\u9875\u6570\u636e\uff0c\u8d77\u59cb\u7d22\u5f15\u53ef\u7701\uff0c\u76f4\u63a5\u7b80\u5199\u4e3a limit 10\u3002","title":"\u5206\u9875\u67e5\u8be2(LIMIY)"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/","text":"Linux # Linux-wikedpad-Linux \u7ef4\u57fa\u767e\u79d1 \u2728Linux\u547d\u4ee4\u884c\u4e0eShell\u811a\u672c\u6559\u7a0b | \u5305\u542b\u5e38\u89c1\u547d\u4ee4\u884c\u4f7f\u7528\uff0cBash\u57fa\u7840\u3001\u9ad8\u7ea7\u7f16\u7a0b\uff0c\u4ee5\u53ca\u5b9e\u7528\u8303\u4f8b\uff01 | \u63d0\u4f9b\u5728\u7ebf\u7f51\u9875\u6587\u6863 \u2728 # https://github.com/ArchLinuxStudio/ShellTutorial Linux \u53d1\u884c\u7248 # \u4ee5\u4e0b\u662f\u51e0\u4e2a\u5e38\u89c1\u7684 Linux \u53d1\u884c\u7248\uff1a Ubuntu\uff1aUbuntu \u662f\u6700\u53d7\u6b22\u8fce\u7684 Linux \u53d1\u884c\u7248\u4e4b\u4e00\uff0c\u4ee5\u6613\u7528\u3001\u7a33\u5b9a\u548c\u793e\u533a\u652f\u6301\u826f\u597d\u800c\u95fb\u540d\u3002\u5b83\u57fa\u4e8e Debian\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53cb\u597d\u7684\u684c\u9762\u73af\u5883\u548c\u5927\u91cf\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 Debian\uff1aDebian \u662f\u4e00\u4e2a\u7a33\u5b9a\u3001\u5b89\u5168\u7684 Linux \u53d1\u884c\u7248\uff0c\u4ee5\u5176\u5e7f\u6cdb\u7684\u8f6f\u4ef6\u5e93\u548c\u5f00\u53d1\u793e\u533a\u800c\u8457\u540d\u3002\u5b83\u63d0\u4f9b\u4e86\u591a\u79cd\u684c\u9762\u73af\u5883\u548c\u670d\u52a1\u5668\u7248\u672c\uff0c\u53ef\u7528\u4e8e\u5404\u79cd\u7528\u9014\u3002 CentOS\uff1aCentOS \u662f\u57fa\u4e8e Red Hat Enterprise Linux\uff08RHEL\uff09\u7684\u4e00\u4e2a\u514d\u8d39\u5f00\u6e90\u7684 Linux \u53d1\u884c\u7248\uff0c\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e RHEL \u7684\u4f01\u4e1a\u7ea7\u529f\u80fd\u548c\u652f\u6301\u3002\u5b83\u88ab\u5e7f\u6cdb\u7528\u4e8e\u670d\u52a1\u5668\u73af\u5883\u548c\u4f01\u4e1a\u5e94\u7528\u3002 Fedora\uff1aFedora \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684 Linux \u53d1\u884c\u7248\uff0c\u7531 Red Hat \u8d5e\u52a9\u3002\u5b83\u63d0\u4f9b\u4e86\u6700\u65b0\u7684\u8f6f\u4ef6\u548c\u6280\u672f\uff0c\u9002\u7528\u4e8e\u684c\u9762\u548c\u670d\u52a1\u5668\u73af\u5883\u3002 Arch Linux\uff1aArch Linux \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u7075\u6d3b\u7684 Linux \u53d1\u884c\u7248\uff0c\u4ee5\u5176\u7b80\u5355\u3001\u81ea\u5b9a\u4e49\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u65b9\u5f0f\u800c\u8457\u540d\u3002\u5b83\u9002\u7528\u4e8e\u9ad8\u7ea7\u7528\u6237\u548c Linux \u7231\u597d\u8005\u3002 Linux \u547d\u4ee4\u5feb\u67e5 # \u2b50Linux \u547d\u4ee4\u5feb\u901f\u67e5\u8be2\u624b\u518c Linux\u6559\u7a0b # \u2b50\u97e9\u987a\u5e73linux Linux Tools Quic Tutorial archlinux \u7b80\u660e\u6307\u5357 # https://github.com/nakanomikuorg/arch-guide Fedora\u4f7f\u7528\u4f53\u9a8c # \u66f4\u6362\u8f6f\u4ef6\u6e90\u4e3a\u6e05\u534e\u6e90 # https://mirrors.tuna.tsinghua.edu.cn/help/fedora/ \u53c2\u8003\u4e0a\u9762\u6e05\u534e\u6e90\u5b98\u65b9\u5199\u7684\u6587\u6863\u90a3\u4e2a\uff0c\u8fdb\u884c\u66f4\u6362 \u542f\u7528flatpak # https://www.flatpak.org/setup/Fedora \u89c1\u4e0a\u9762\u7684\u6587\u6863 flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo NVIDIA\u663e\u5361\u9a71\u52a8\u5b89\u88c5 # https://docs.fedoraproject.org/en-US/quick-docs/how-to-set-nvidia-as-primary-gpu-on-optimus-based-laptops \u89c1\u4e0a\uff0cfedora\u5b98\u65b9\u6587\u6863\uff0c\u6309\u7167\u4e0a\u9762\u64cd\u4f5c\u4e00\u822c\u662f\u6ca1\u95ee\u9898\u7684 \u8f93\u5165\u6cd5 # ibus-rime # \u5728Fedora\u4e2d\u5b89\u88c5 ibus-rime dnf install ibus-rime \u914d\u7f6e # https://blog.mikelyou.com/2020/07/31/rime-input/ \u53ef\u4ee5\u770b\u4e0a\u9762\u8fd9\u4e2a\u94fe\u63a5\u91cc\u9762\u7684\uff0c\u5199\u7684\u5f88\u597d","title":"Linux"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#linux","text":"Linux-wikedpad-Linux \u7ef4\u57fa\u767e\u79d1","title":"Linux"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#linux\u547d\u4ee4\u884c\u4e0eshell\u811a\u672c\u6559\u7a0b--\u5305\u542b\u5e38\u89c1\u547d\u4ee4\u884c\u4f7f\u7528bash\u57fa\u7840\u9ad8\u7ea7\u7f16\u7a0b\u4ee5\u53ca\u5b9e\u7528\u8303\u4f8b--\u63d0\u4f9b\u5728\u7ebf\u7f51\u9875\u6587\u6863-","text":"https://github.com/ArchLinuxStudio/ShellTutorial","title":"\u2728Linux\u547d\u4ee4\u884c\u4e0eShell\u811a\u672c\u6559\u7a0b | \u5305\u542b\u5e38\u89c1\u547d\u4ee4\u884c\u4f7f\u7528\uff0cBash\u57fa\u7840\u3001\u9ad8\u7ea7\u7f16\u7a0b\uff0c\u4ee5\u53ca\u5b9e\u7528\u8303\u4f8b\uff01 | \u63d0\u4f9b\u5728\u7ebf\u7f51\u9875\u6587\u6863 \u2728"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#linux-\u53d1\u884c\u7248","text":"\u4ee5\u4e0b\u662f\u51e0\u4e2a\u5e38\u89c1\u7684 Linux \u53d1\u884c\u7248\uff1a Ubuntu\uff1aUbuntu \u662f\u6700\u53d7\u6b22\u8fce\u7684 Linux \u53d1\u884c\u7248\u4e4b\u4e00\uff0c\u4ee5\u6613\u7528\u3001\u7a33\u5b9a\u548c\u793e\u533a\u652f\u6301\u826f\u597d\u800c\u95fb\u540d\u3002\u5b83\u57fa\u4e8e Debian\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53cb\u597d\u7684\u684c\u9762\u73af\u5883\u548c\u5927\u91cf\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 Debian\uff1aDebian \u662f\u4e00\u4e2a\u7a33\u5b9a\u3001\u5b89\u5168\u7684 Linux \u53d1\u884c\u7248\uff0c\u4ee5\u5176\u5e7f\u6cdb\u7684\u8f6f\u4ef6\u5e93\u548c\u5f00\u53d1\u793e\u533a\u800c\u8457\u540d\u3002\u5b83\u63d0\u4f9b\u4e86\u591a\u79cd\u684c\u9762\u73af\u5883\u548c\u670d\u52a1\u5668\u7248\u672c\uff0c\u53ef\u7528\u4e8e\u5404\u79cd\u7528\u9014\u3002 CentOS\uff1aCentOS \u662f\u57fa\u4e8e Red Hat Enterprise Linux\uff08RHEL\uff09\u7684\u4e00\u4e2a\u514d\u8d39\u5f00\u6e90\u7684 Linux \u53d1\u884c\u7248\uff0c\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e RHEL \u7684\u4f01\u4e1a\u7ea7\u529f\u80fd\u548c\u652f\u6301\u3002\u5b83\u88ab\u5e7f\u6cdb\u7528\u4e8e\u670d\u52a1\u5668\u73af\u5883\u548c\u4f01\u4e1a\u5e94\u7528\u3002 Fedora\uff1aFedora \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684 Linux \u53d1\u884c\u7248\uff0c\u7531 Red Hat \u8d5e\u52a9\u3002\u5b83\u63d0\u4f9b\u4e86\u6700\u65b0\u7684\u8f6f\u4ef6\u548c\u6280\u672f\uff0c\u9002\u7528\u4e8e\u684c\u9762\u548c\u670d\u52a1\u5668\u73af\u5883\u3002 Arch Linux\uff1aArch Linux \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u7075\u6d3b\u7684 Linux \u53d1\u884c\u7248\uff0c\u4ee5\u5176\u7b80\u5355\u3001\u81ea\u5b9a\u4e49\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u65b9\u5f0f\u800c\u8457\u540d\u3002\u5b83\u9002\u7528\u4e8e\u9ad8\u7ea7\u7528\u6237\u548c Linux \u7231\u597d\u8005\u3002","title":"Linux \u53d1\u884c\u7248"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#linux-\u547d\u4ee4\u5feb\u67e5","text":"\u2b50Linux \u547d\u4ee4\u5feb\u901f\u67e5\u8be2\u624b\u518c","title":"Linux \u547d\u4ee4\u5feb\u67e5"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#linux\u6559\u7a0b","text":"\u2b50\u97e9\u987a\u5e73linux Linux Tools Quic Tutorial","title":"Linux\u6559\u7a0b"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#archlinux-\u7b80\u660e\u6307\u5357","text":"https://github.com/nakanomikuorg/arch-guide","title":"archlinux \u7b80\u660e\u6307\u5357"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#fedora\u4f7f\u7528\u4f53\u9a8c","text":"","title":"Fedora\u4f7f\u7528\u4f53\u9a8c"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#\u66f4\u6362\u8f6f\u4ef6\u6e90\u4e3a\u6e05\u534e\u6e90","text":"https://mirrors.tuna.tsinghua.edu.cn/help/fedora/ \u53c2\u8003\u4e0a\u9762\u6e05\u534e\u6e90\u5b98\u65b9\u5199\u7684\u6587\u6863\u90a3\u4e2a\uff0c\u8fdb\u884c\u66f4\u6362","title":"\u66f4\u6362\u8f6f\u4ef6\u6e90\u4e3a\u6e05\u534e\u6e90"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#\u542f\u7528flatpak","text":"https://www.flatpak.org/setup/Fedora \u89c1\u4e0a\u9762\u7684\u6587\u6863 flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo","title":"\u542f\u7528flatpak"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#nvidia\u663e\u5361\u9a71\u52a8\u5b89\u88c5","text":"https://docs.fedoraproject.org/en-US/quick-docs/how-to-set-nvidia-as-primary-gpu-on-optimus-based-laptops \u89c1\u4e0a\uff0cfedora\u5b98\u65b9\u6587\u6863\uff0c\u6309\u7167\u4e0a\u9762\u64cd\u4f5c\u4e00\u822c\u662f\u6ca1\u95ee\u9898\u7684","title":"NVIDIA\u663e\u5361\u9a71\u52a8\u5b89\u88c5"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#\u8f93\u5165\u6cd5","text":"","title":"\u8f93\u5165\u6cd5"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#ibus-rime","text":"\u5728Fedora\u4e2d\u5b89\u88c5 ibus-rime dnf install ibus-rime","title":"ibus-rime"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-learn/#\u914d\u7f6e","text":"https://blog.mikelyou.com/2020/07/31/rime-input/ \u53ef\u4ee5\u770b\u4e0a\u9762\u8fd9\u4e2a\u94fe\u63a5\u91cc\u9762\u7684\uff0c\u5199\u7684\u5f88\u597d","title":"\u914d\u7f6e"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-learn/","text":"Windows # \u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e2a\u6587\u6863\uff1f # \u6709\u7684\u4eba\u53ef\u80fd\u8981\u95ee\u4e86\uff0c\u6211\u90fd\u7528\u4e8610\u591a\u5e74windows\u4e86\uff0c\u8fd8\u80fd\u4e0d\u4f1a\u7528windows\u7cfb\u7edf?\u4f46\u6211\u8981\u8bf4\u7684\u662f\uff0c\u4f60\u53ef\u80fd\u771f\u7684\u4e0d\u4f1a\u7528\uff0c\u800c\u4e14\u5c31\u6211\u89c2\u5bdf\uff0c\u5927\u90e8\u5206\u4eba\u90fd\u4e0d\u4f1a\uff0c\u6240\u4ee5\u624d\u8981\u5199\u8fd9\u4e2a\u6587\u6863\u3002 -- Scoop # Scoop\u662f\u4e00\u79cd\u7528\u4e8eWindows\u64cd\u4f5c\u7cfb\u7edf\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u754c\u9762\u8f7b\u677e\u5730\u5b89\u88c5\u3001\u66f4\u65b0\u548c\u5378\u8f7d\u5404\u79cd\u8f6f\u4ef6\u3002Scoop \u7684\u76ee\u6807\u662f\u4f7f Windows \u7528\u6237\u80fd\u591f\u50cf\u5728 Linux \u6216 macOS \u4e2d\u4e00\u6837\u65b9\u4fbf\u5730\u7ba1\u7406\u8f6f\u4ef6\u5305\uff0c\u4ece\u800c\u63d0\u9ad8\u7528\u6237\u7684\u751f\u4ea7\u529b\u548c\u6548\u7387\u3002 \u4f7f\u7528 Scoop \u53ef\u4ee5\u907f\u514d\u624b\u52a8\u4e0b\u8f7d\u3001\u5b89\u88c5\u548c\u66f4\u65b0\u8f6f\u4ef6\u7684\u7e41\u7410\u8fc7\u7a0b\uff0c\u56e0\u4e3a Scoop \u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u8f6f\u4ef6\u5305\u7684\u4e0b\u8f7d\u3001\u5b89\u88c5\u548c\u914d\u7f6e\u3002Scoop \u4e5f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u7ba1\u7406\u4e0d\u540c\u7248\u672c\u7684\u8f6f\u4ef6\uff0c\u56e0\u4e3a Scoop \u53ef\u4ee5\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u7248\u672c\u7684\u540c\u4e00\u4e2a\u8f6f\u4ef6\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e9b Scoop \u7684\u4e3b\u8981\u7279\u70b9\uff1a \u547d\u4ee4\u884c\u754c\u9762\uff1aScoop \u4f7f\u7528\u547d\u4ee4\u884c\u754c\u9762\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6765\u7ba1\u7406\u8f6f\u4ef6\u5305\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528 GUI \u754c\u9762\u3002 \u5feb\u901f\u5b89\u88c5\uff1aScoop \u7684\u5b89\u88c5\u8fc7\u7a0b\u975e\u5e38\u5feb\u901f\u548c\u7b80\u5355\uff0c\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u5b8c\u6210\u3002 \u81ea\u52a8\u66f4\u65b0\uff1aScoop \u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0\u8f6f\u4ef6\u5305\uff0c\u4f7f\u7528\u6237\u59cb\u7ec8\u62e5\u6709\u6700\u65b0\u7684\u7248\u672c\u3002 \u8f7b\u91cf\u7ea7\uff1aScoop \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u7a0b\u5e8f\u5305\u7ba1\u7406\u5668\uff0c\u5b83\u4e0d\u4f1a\u5360\u7528\u592a\u591a\u7cfb\u7edf\u8d44\u6e90\u3002 \u5f00\u6e90\u514d\u8d39\uff1aScoop \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u8f6f\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002 \u603b\u4e4b\uff0cScoop \u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u548c\u9ad8\u6548\u7684\u7a0b\u5e8f\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9 Windows \u7528\u6237\u8f7b\u677e\u5730\u7ba1\u7406\u4ed6\u4eec\u7684\u8f6f\u4ef6\u5b89\u88c5\u548c\u66f4\u65b0\u3002\u5982\u679c\u60a8\u662f Windows \u7528\u6237\uff0c\u4f7f\u7528 Scoop \u53ef\u4ee5\u63d0\u9ad8\u60a8\u7684\u5de5\u4f5c\u6548\u7387\u548c\u751f\u4ea7\u529b\u3002 Scoop\u5b98\u7f51\uff1a https://scoop.sh/ \u63a5\u4e0b\u6765\uff0c\u5c06\u7ed9\u51fa\u5b83\u7684\u5b89\u88c5\u548c\u4f7f\u7528\u65b9\u6cd5 Scoop\u662f\u4e00\u79cdWindows\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u5b89\u88c5\u548c\u7ba1\u7406\u5404\u79cd\u8f6f\u4ef6\u548c\u5de5\u5177\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u548c\u4f7f\u7528Scoop\uff0c\u4ee5\u53ca\u63d0\u4f9b\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u793a\u4f8b\u3002 \u5b89\u88c5Scoop # \u5728\u5b89\u88c5Scoop\u4e4b\u524d\uff0c\u9700\u8981\u786e\u4fdd\u4f60\u7684Windows\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u4e86PowerShell 5\u4ee5\u4e0a\u7248\u672c\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5b89\u88c5Scoop\uff1a \u6253\u5f00PowerShell\u7ec8\u7aef\u3002 \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5e76\u6267\u884c\uff1a > Set-ExecutionPolicy RemoteSigned -Scope CurrentUser # Optional: Needed to run a remote script the first time > irm get . scoop . sh | iex \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u5373\u53ef\u3002 \u4f7f\u7528Scoop # \u5b89\u88c5Scoop\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u8f6f\u4ef6\u548c\u5de5\u5177\uff1a \u5b89\u88c5\u8f6f\u4ef6 scoop install <software_name> \u4f8b\u5982\uff0c\u8981\u5b89\u88c5Git\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop install git \u5378\u8f7d\u8f6f\u4ef6 scoop uninstall <software_name> \u4f8b\u5982\uff0c\u8981\u5378\u8f7dGit\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop uninstall git \u66f4\u65b0\u8f6f\u4ef6 scoop update <software_name> \u4f8b\u5982\uff0c\u8981\u66f4\u65b0Git\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop update git \u67e5\u627e\u8f6f\u4ef6 scoop search <keyword> \u4f8b\u5982\uff0c\u8981\u67e5\u627e\u540d\u4e3aFirefox\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop search firefox \u5e38\u89c1\u64cd\u4f5c\u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u793a\u4f8b\uff1a \u5b89\u88c5Python scoop install python \u5b89\u88c5Node.js scoop install nodejs \u5b89\u88c5Visual Studio Code scoop install vscode \u5b89\u88c57-Zip scoop install 7zip \u67e5\u627e\u540d\u4e3aFirefox\u7684\u8f6f\u4ef6 scoop search firefox \u66f4\u65b0Git scoop update git \u603b\u4e4b\uff0cScoop\u662f\u4e00\u79cd\u65b9\u4fbf\u7684Windows\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u5b89\u88c5\u548c\u7ba1\u7406\u5404\u79cd\u8f6f\u4ef6\u548c\u5de5\u5177\u3002\u901a\u8fc7\u4ee5\u4e0a\u7684\u4ecb\u7ecd\uff0c\u76f8\u4fe1\u8bfb\u8005\u5df2\u7ecf\u638c\u63e1\u4e86Scoop\u7684\u57fa\u672c\u7528\u6cd5\u548c\u5e38\u89c1\u64cd\u4f5c\u793a\u4f8b\u3002","title":"Windows"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-learn/#windows","text":"","title":"Windows"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-learn/#\u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e2a\u6587\u6863","text":"\u6709\u7684\u4eba\u53ef\u80fd\u8981\u95ee\u4e86\uff0c\u6211\u90fd\u7528\u4e8610\u591a\u5e74windows\u4e86\uff0c\u8fd8\u80fd\u4e0d\u4f1a\u7528windows\u7cfb\u7edf?\u4f46\u6211\u8981\u8bf4\u7684\u662f\uff0c\u4f60\u53ef\u80fd\u771f\u7684\u4e0d\u4f1a\u7528\uff0c\u800c\u4e14\u5c31\u6211\u89c2\u5bdf\uff0c\u5927\u90e8\u5206\u4eba\u90fd\u4e0d\u4f1a\uff0c\u6240\u4ee5\u624d\u8981\u5199\u8fd9\u4e2a\u6587\u6863\u3002 --","title":"\u4e3a\u4ec0\u4e48\u5199\u8fd9\u4e2a\u6587\u6863\uff1f"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-learn/#scoop","text":"Scoop\u662f\u4e00\u79cd\u7528\u4e8eWindows\u64cd\u4f5c\u7cfb\u7edf\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u754c\u9762\u8f7b\u677e\u5730\u5b89\u88c5\u3001\u66f4\u65b0\u548c\u5378\u8f7d\u5404\u79cd\u8f6f\u4ef6\u3002Scoop \u7684\u76ee\u6807\u662f\u4f7f Windows \u7528\u6237\u80fd\u591f\u50cf\u5728 Linux \u6216 macOS \u4e2d\u4e00\u6837\u65b9\u4fbf\u5730\u7ba1\u7406\u8f6f\u4ef6\u5305\uff0c\u4ece\u800c\u63d0\u9ad8\u7528\u6237\u7684\u751f\u4ea7\u529b\u548c\u6548\u7387\u3002 \u4f7f\u7528 Scoop \u53ef\u4ee5\u907f\u514d\u624b\u52a8\u4e0b\u8f7d\u3001\u5b89\u88c5\u548c\u66f4\u65b0\u8f6f\u4ef6\u7684\u7e41\u7410\u8fc7\u7a0b\uff0c\u56e0\u4e3a Scoop \u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u8f6f\u4ef6\u5305\u7684\u4e0b\u8f7d\u3001\u5b89\u88c5\u548c\u914d\u7f6e\u3002Scoop \u4e5f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u7ba1\u7406\u4e0d\u540c\u7248\u672c\u7684\u8f6f\u4ef6\uff0c\u56e0\u4e3a Scoop \u53ef\u4ee5\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u7248\u672c\u7684\u540c\u4e00\u4e2a\u8f6f\u4ef6\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e9b Scoop \u7684\u4e3b\u8981\u7279\u70b9\uff1a \u547d\u4ee4\u884c\u754c\u9762\uff1aScoop \u4f7f\u7528\u547d\u4ee4\u884c\u754c\u9762\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6765\u7ba1\u7406\u8f6f\u4ef6\u5305\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528 GUI \u754c\u9762\u3002 \u5feb\u901f\u5b89\u88c5\uff1aScoop \u7684\u5b89\u88c5\u8fc7\u7a0b\u975e\u5e38\u5feb\u901f\u548c\u7b80\u5355\uff0c\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u5b8c\u6210\u3002 \u81ea\u52a8\u66f4\u65b0\uff1aScoop \u53ef\u4ee5\u81ea\u52a8\u66f4\u65b0\u8f6f\u4ef6\u5305\uff0c\u4f7f\u7528\u6237\u59cb\u7ec8\u62e5\u6709\u6700\u65b0\u7684\u7248\u672c\u3002 \u8f7b\u91cf\u7ea7\uff1aScoop \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u7a0b\u5e8f\u5305\u7ba1\u7406\u5668\uff0c\u5b83\u4e0d\u4f1a\u5360\u7528\u592a\u591a\u7cfb\u7edf\u8d44\u6e90\u3002 \u5f00\u6e90\u514d\u8d39\uff1aScoop \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u8f6f\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u3002 \u603b\u4e4b\uff0cScoop \u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u548c\u9ad8\u6548\u7684\u7a0b\u5e8f\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9 Windows \u7528\u6237\u8f7b\u677e\u5730\u7ba1\u7406\u4ed6\u4eec\u7684\u8f6f\u4ef6\u5b89\u88c5\u548c\u66f4\u65b0\u3002\u5982\u679c\u60a8\u662f Windows \u7528\u6237\uff0c\u4f7f\u7528 Scoop \u53ef\u4ee5\u63d0\u9ad8\u60a8\u7684\u5de5\u4f5c\u6548\u7387\u548c\u751f\u4ea7\u529b\u3002 Scoop\u5b98\u7f51\uff1a https://scoop.sh/ \u63a5\u4e0b\u6765\uff0c\u5c06\u7ed9\u51fa\u5b83\u7684\u5b89\u88c5\u548c\u4f7f\u7528\u65b9\u6cd5 Scoop\u662f\u4e00\u79cdWindows\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u5b89\u88c5\u548c\u7ba1\u7406\u5404\u79cd\u8f6f\u4ef6\u548c\u5de5\u5177\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u548c\u4f7f\u7528Scoop\uff0c\u4ee5\u53ca\u63d0\u4f9b\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u793a\u4f8b\u3002","title":"Scoop"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-learn/#\u5b89\u88c5scoop","text":"\u5728\u5b89\u88c5Scoop\u4e4b\u524d\uff0c\u9700\u8981\u786e\u4fdd\u4f60\u7684Windows\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u4e86PowerShell 5\u4ee5\u4e0a\u7248\u672c\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5b89\u88c5Scoop\uff1a \u6253\u5f00PowerShell\u7ec8\u7aef\u3002 \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5e76\u6267\u884c\uff1a > Set-ExecutionPolicy RemoteSigned -Scope CurrentUser # Optional: Needed to run a remote script the first time > irm get . scoop . sh | iex \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u5373\u53ef\u3002","title":"\u5b89\u88c5Scoop"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-learn/#\u4f7f\u7528scoop","text":"\u5b89\u88c5Scoop\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u8f6f\u4ef6\u548c\u5de5\u5177\uff1a \u5b89\u88c5\u8f6f\u4ef6 scoop install <software_name> \u4f8b\u5982\uff0c\u8981\u5b89\u88c5Git\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop install git \u5378\u8f7d\u8f6f\u4ef6 scoop uninstall <software_name> \u4f8b\u5982\uff0c\u8981\u5378\u8f7dGit\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop uninstall git \u66f4\u65b0\u8f6f\u4ef6 scoop update <software_name> \u4f8b\u5982\uff0c\u8981\u66f4\u65b0Git\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop update git \u67e5\u627e\u8f6f\u4ef6 scoop search <keyword> \u4f8b\u5982\uff0c\u8981\u67e5\u627e\u540d\u4e3aFirefox\u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a scoop search firefox \u5e38\u89c1\u64cd\u4f5c\u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u793a\u4f8b\uff1a \u5b89\u88c5Python scoop install python \u5b89\u88c5Node.js scoop install nodejs \u5b89\u88c5Visual Studio Code scoop install vscode \u5b89\u88c57-Zip scoop install 7zip \u67e5\u627e\u540d\u4e3aFirefox\u7684\u8f6f\u4ef6 scoop search firefox \u66f4\u65b0Git scoop update git \u603b\u4e4b\uff0cScoop\u662f\u4e00\u79cd\u65b9\u4fbf\u7684Windows\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u5b89\u88c5\u548c\u7ba1\u7406\u5404\u79cd\u8f6f\u4ef6\u548c\u5de5\u5177\u3002\u901a\u8fc7\u4ee5\u4e0a\u7684\u4ecb\u7ecd\uff0c\u76f8\u4fe1\u8bfb\u8005\u5df2\u7ecf\u638c\u63e1\u4e86Scoop\u7684\u57fa\u672c\u7528\u6cd5\u548c\u5e38\u89c1\u64cd\u4f5c\u793a\u4f8b\u3002","title":"\u4f7f\u7528Scoop"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E5%AD%A6/math/","text":"\u8ba1\u7b97\u673a\u6570\u5b66 # \u9ad8\u7b49\u6570\u5b66 # \u7ebf\u6027\u4ee3\u6570 # \u79bb\u6563\u6570\u5b66 #","title":"\u8ba1\u7b97\u673a\u6570\u5b66"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E5%AD%A6/math/#\u8ba1\u7b97\u673a\u6570\u5b66","text":"","title":"\u8ba1\u7b97\u673a\u6570\u5b66"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E5%AD%A6/math/#\u9ad8\u7b49\u6570\u5b66","text":"","title":"\u9ad8\u7b49\u6570\u5b66"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E5%AD%A6/math/#\u7ebf\u6027\u4ee3\u6570","text":"","title":"\u7ebf\u6027\u4ee3\u6570"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E5%AD%A6/math/#\u79bb\u6563\u6570\u5b66","text":"","title":"\u79bb\u6563\u6570\u5b66"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/algorithm-learn/","text":"\u7b97\u6cd5\u5b66\u4e60 # acwing \u2b50\u4ee3\u7801\u968f\u60f3\u5f55","title":"\u7b97\u6cd5\u5b66\u4e60"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/algorithm-learn/#\u7b97\u6cd5\u5b66\u4e60","text":"acwing \u2b50\u4ee3\u7801\u968f\u60f3\u5f55","title":"\u7b97\u6cd5\u5b66\u4e60"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/datastructure-learn/","text":"\u6570\u636e\u7ed3\u6784\u5b66\u4e60 # https://visualgo.net/zh/ https://the-algorithms.com/category/datastructures","title":"\u6570\u636e\u7ed3\u6784\u5b66\u4e60"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/datastructure-learn/#\u6570\u636e\u7ed3\u6784\u5b66\u4e60","text":"https://visualgo.net/zh/ https://the-algorithms.com/category/datastructures","title":"\u6570\u636e\u7ed3\u6784\u5b66\u4e60"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%8B%B1%E8%AF%AD/","text":"\u5982\u4f55\u5b66\u4e60\u82f1\u8bed # https://www.oxfordlearnersdictionaries.com/definition/english/ \u4e0a\u9762\u662f\u725b\u6d25\u8bcd\u5178\uff0c\u7f51\u9875\u4e0a\u53ef\u4ee5\u7528\uff0c\u80fd\u76f4\u63a5\u770b\u82f1\u8bed \u63a8\u8350\u6709\u57fa\u7840\u7684\u76f4\u63a5\u7528\u82f1\u8bed\u5b66\u4e60\u82f1\u8bed\uff0c\u867d\u7136\u5f00\u59cb\u96be\u5ea6\u4f1a\u6709\u70b9\u513f\u5927\uff0c\u4f46\u6162\u6162\u5c31\u4f1a\u4e60\u60ef https://www.britannica.com/dictionary/speculate","title":"\u5982\u4f55\u5b66\u4e60\u82f1\u8bed"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%8B%B1%E8%AF%AD/#\u5982\u4f55\u5b66\u4e60\u82f1\u8bed","text":"https://www.oxfordlearnersdictionaries.com/definition/english/ \u4e0a\u9762\u662f\u725b\u6d25\u8bcd\u5178\uff0c\u7f51\u9875\u4e0a\u53ef\u4ee5\u7528\uff0c\u80fd\u76f4\u63a5\u770b\u82f1\u8bed \u63a8\u8350\u6709\u57fa\u7840\u7684\u76f4\u63a5\u7528\u82f1\u8bed\u5b66\u4e60\u82f1\u8bed\uff0c\u867d\u7136\u5f00\u59cb\u96be\u5ea6\u4f1a\u6709\u70b9\u513f\u5927\uff0c\u4f46\u6162\u6162\u5c31\u4f1a\u4e60\u60ef https://www.britannica.com/dictionary/speculate","title":"\u5982\u4f55\u5b66\u4e60\u82f1\u8bed"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/","text":"\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807 # \u4e00.\u8ba1\u7b97\u673a\u7684\u4e3b\u8981\u6027\u80fd\u6307\u6807 # \u5b57\u957f # \u5b57\u957f\u662f\u6307\u8ba1\u7b97\u673a\u8fdb\u884c\u4e00\u6b21\u6574\u6570\u8fd0\u7b97\uff08\u5373\u5b9a\u70b9\u6574\u6570\u8fd0\u7b97\uff09\u6240\u80fd\u5904\u7406\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u4f4d\u6570\uff0c \u901a\u5e38\u4e0e CPU \u7684\u5bc4\u5b58\u5668\u4f4d\u6570\u3001\u52a0\u6cd5\u5668\u6709\u5173\u3002\u56e0\u6b64\uff0c\u5b57\u957f\u4e00\u822c\u7b49\u4e8e\u5185\u90e8\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\uff0c\u5b57\u957f\u8d8a \u957f\uff0c\u6570\u7684\u8868\u793a\u8303\u56f4\u8d8a\u5927\uff0c\u8ba1\u7b97\u7cbe\u5ea6\u8d8a\u9ad8\u3002\u8ba1\u7b97\u673a\u5b57\u957f\u901a\u5e38\u9009\u5b9a\u4e3a\u5b57\u8282\uff088 \u4f4d\uff09\u7684\u6574\u6570\u500d\u3002 \u5728\u901a\u5e38\u6240\u8bf4\u7684\u201c\u67d0 16 \u4f4d\u6216 32 \u4f4d\u673a\u5668\u201d\u4e2d\uff0c16\u300132 \u6307\u7684\u662f\u5b57\u957f\uff0c\u4e5f\u79f0\u673a\u5668\u5b57\u957f\u3002 \u6307\u4ee4\u5b57\u957f\uff1a\u4e00\u4e2a\u6307\u4ee4\u5b57\u4e2d\u5305\u542b\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u4f4d\u6570\u3002 \u5b58\u50a8\u5b57\u957f\uff1a\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u957f\u5ea6\u3002\u5b83\u4eec\u90fd\u5fc5\u987b\u662f\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 \u6307\u4ee4\u5b57\u957f\u4e00\u822c\u53d6\u5b58\u50a8\u5b57\u957f\u7684\u6574\u6570\u500d\uff0c\u82e5\u6307\u4ee4\u5b57\u957f\u7b49\u4e8e\u5b58\u50a8\u5b57\u957f\u7684 2 \u500d\uff0c\u5219\u9700\u8981 2 \u4e2a\u8bbf\u5b58\u5468\u671f\u6765\u53d6\u51fa\u4e00\u6761\u6307\u4ee4\uff1b\u82e5\u6307\u4ee4\u5b57\u957f\u7b49\u4e8e\u5b58\u50a8\u5b57\u957f\uff0c\u5219**\u53d6\u6307\u5468\u671f\u7b49\u4e8e\u673a\u5668\u5468\u671f**\u3002\u65e9\u671f\u7684\u5b58\u50a8\u5b57\u957f\u4e00\u822c\u4e0e\u6307\u4ee4\u5b57\u957f\u3001\u5b57\u957f\u76f8\u7b49\uff0c\u56e0\u6b64\u8bbf\u95ee\u4e00\u6b21\u4e3b\u5b58\u4fbf\u53ef\u53d6\u51fa\u4e00\u6761\u6307\u4ee4\u6216\u4e00\u4e2a\u6570\u636e\u3002\u968f\u7740\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\uff0c\u6307\u4ee4\u5b57\u957f\u3001\u5b57\u957f\u90fd\u53ef\u53d8\uff0c\u4f46\u5fc5\u987b\u90fd\u662f\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 \u6570\u636e\u901a\u8def\u5e26\u5bbd # \u6570\u636e\u901a\u8def\u5e26\u5bbd\u662f\u6307\u6570\u636e\u603b\u7ebf\u4e00\u6b21\u6240\u80fd\u5e76\u884c\u4f20\u9001\u4fe1\u606f\u7684\u4f4d\u6570 \u3002\u6570\u636e\u901a\u8def\u5bbd\u5ea6\u662f\u6307\u5916\u90e8\u6570 \u636e\u603b\u7ebf\u7684\u5bbd\u5ea6\uff0c\u5b83\u4e0e CPU \u5185\u90e8\u7684\u6570\u636e\u603b\u7ebf\u5bbd\u5ea6\uff08\u5185\u90e8\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\uff09\u6709\u53ef\u80fd\u4e0d\u540c\u3002\u6ce8\u610f\uff1a \u5404\u4e2a\u5b50\u7cfb\u7edf\u901a\u8fc7\u6570\u636e\u603b\u7ebf\u8fde\u63a5\u5f62\u6210\u7684\u6570\u636e\u4f20\u9001\u8def\u5f84\u79f0\u4e3a\u6570\u636e\u901a\u8def \u4e3b\u5b58\u5bb9\u91cf # \u4e3b\u5b58\u5bb9\u91cf\u662f\u6307\u4e3b\u5b58\u50a8\u5668\u6240\u80fd\u5b58\u50a8\u4fe1\u606f\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u901a\u5e38\u4ee5\u5b57\u8282\u6765\u8861\u91cf\uff0c\u4e5f\u53ef\u7528\u5b57\u6570 x \u5b57\u957f\uff08\u5982 512K\u00d716 \u4f4d\uff09\u6765\u8868\u793a\u5b58\u50a8\u5bb9\u91cf\u3002 \u5176\u4e2d\uff0cMAR \u7684\u4f4d\u6570\u53cd\u6620\u5b58\u50a8\u5355\u5143\u7684\u4e2a\u6570\uff0cMAR \u7684\u4f4d\u6570\u53cd\u6620\u53ef\u5bfb\u5740\u8303\u56f4\u7684\u6700\u5927\u503c\uff08\u800c\u4e0d\u4e00\u5b9a\u662f\u5b9e\u9645\u5b58\u50a8\u5668\u7684\u5b58\u50a8\u5bb9\u91cf\uff09\u3002\u4f8b\u5982\uff0cMAR \u4e3a 16 \u4f4d\uff0c\u8868\u793a2 ^16=65536\uff0c\u5373\u6b64\u5b58\u50a8\u4f53\u5185\u6709 65536 \u4e2a\u5b58\u50a8\u5355\u5143\uff08\u53ef\u79f0\u4e3a 64K \u5185\u5b58\uff0c1K=1024\uff09\uff0c\u82e5 MDR\u4e3a 32 \u4f4d\uff0c\u8868\u793a\u5b58\u50a8\u5bb9\u91cf\u4e3a 64K\u00d732 \u4f4d\u3002 \u8fd0\u7b97\u901f\u5ea6 # 1.\u541e\u5410\u91cf \u6307\u7cfb\u7edf\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5904\u7406\u8bf7\u6c42\u7684\u6570\u91cf\uff0c \u541e\u5410\u91cf\u662f\u6307\u4fe1\u606f\u6d41\u5165\u3001\u5904\u7406\u548c\u6d41\u51fa\u7cfb\u7edf\u7684\u901f\u7387 \u3002\u5b83\u53d6\u51b3\u4e8e CPU \u80fd\u591f\u591a\u5feb\u5730\u83b7\u53d6\u6307\u4ee4\uff0c\u6570\u636e\u80fd\u591f\u591a\u5feb\u5730\u4ece\u5185\u5b58\u53d6\u51fa\u6216\u5b58\u5165\uff0c\u4ee5\u53ca\u6240\u5f97\u7ed3\u679c\u80fd\u80fd\u591a\u5feb\u5730\u4ece\u5185\u5b58\u9001\u5230\u8f93\u51fa\u8bbe\u5907\u3002\u8fd9\u4e9b\u51b3\u5b9a\u56e0\u7d20\u4e2d\u7684\u4efb\u4e00\u6b65\u9aa4\u90fd\u4e0e\u4e3b\u5b58\u7d27\u5bc6\u76f8\u5173\uff0c\u56e0\u6b64**\u541e\u5410\u91cf\u4e3b\u8981\u53d6\u51b3\u5b50\u4e3b\u5b58\u7684\u5b58\u53d6\u5468\u671f\u3002** 2.\u54cd\u5e94\u65f6\u95f4 \u54cd\u5e94\u65f6\u95f4\u662f\u6307 \u4ece\u63d0\u4ea4\u4f5c\u4e1a\u5230\u8be5\u4f5c\u4e1a\u5f97\u5230 CPU \u54cd\u5e94\u6240\u7ecf\u5386\u7684\u65f6\u95f4 \u3002**\u54cd\u5e94\u65f6\u95f4\u8d8a\u77ed\uff0c\u541e\u5410\u91cf\u8d8a\u5927\u3002**\u901a\u5e38\u5305\u62ec CPU \u65f6\u95f4\uff08\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff09\u4e0e\u7b49\u5f85\u65f6\u95f4\uff08\u7528\u4e8e\u78c1\u76d8\u8bbf\u95ee\u3001 \u5b58\u50a8\u5668\u8bbf\u95ee\u3001I/O \u64cd\u4f5c\u3001\u64cd\u4f5c\u7cfb\u7edf\u5f00\u9500\u7b49\u7684\u65f6\u95f4 3.\u4e3b\u9891 \u673a\u5668\u5185\u90e8\u4e3b\u65f6\u949f\u7684\u9891\u7387\uff0c\u662f\u8861\u91cf\u673a\u5668\u901f\u5ea6\u7684\u91cd\u8981\u53c2\u6570\uff0c \u4e3b\u9891\u8d8a\u9ad8\uff0c\u5b8c\u6210\u6307\u4ee4\u7684\u4e00\u4e2a\u6267\u884c\u6b65\u9aa4\u6240\u7528\u7684\u65f6\u95f4\u8d8a\u77ed \uff0c\u5176\u5e38\u7528\u5355\u4f4d\u4e3a Hz\u3001MHz \u7b49\u3002 \u5982\u679c\u4e3b\u9891\u4e3a 4MHz\uff0c\u5219\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65f6\u949f\u5468\u671f\u4e3a \u00bc\u00d7(10^(\u22126)) s=0.25\u03bcs\uff08\u5373\u6bcf\u79d2\u6709 4M \u4e2a\u65f6\u949f\u5468\u671f\uff09\u3002 4.CPU \u5468\u671f CPU \u5468\u671f\u53c8\u79f0\u4e3a\u673a\u5668\u5468\u671f\uff0c\u901a\u5e38**\u5b9a\u4e49\u4e3a \u4ece\u5185\u5b58\u8bfb\u53d6\u4e00\u6761\u6307\u4ee4\u5b57\u7684\u6700\u77ed\u65f6\u95f4 **\u3002\u4e00\u4e2a\u6307\u4ee4\u5468\u671f\u5e38\u7531\u591a\u4e2a CPU \u5468\u671f\u6784\u6210 5.CPU \u65f6\u949f\u5468\u671f \u4e3b\u9891\u7684\u5012\u6570 \uff0c\u662f CPU \u4e2d\u6700\u5c0f\u7684\u65f6\u95f4\u5355\u4f4d\uff0c\u6267\u884c\u6307\u4ee4\u7684\u6bcf\u4e2a\u52a8\u4f5c\u81f3\u5c11\u9700\u8981 1 \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u901a\u5e38\u4e3a\u8282\u62cd\u8109\u51b2\u6216 T \u5468\u671f 6.CPI\uff08Cycles Per Instruction\uff0c\u6bcf\u6307\u4ee4\u5468\u671f\u6570\uff09 CPI: \u6bcf\u6761\u6307\u4ee4\u7684\u65f6\u949f\u5468\u671f\u6570\u3002 CPU \u65f6\u949f\u5468\u671f\u6570\uff1d\u7a0b\u5e8f\u7684\u6307\u4ee4\u6570*\u6bcf\u6761\u6307\u4ee4\u7684\u5e73\u5747\u65f6\u949f\u5468\u671f\u6570=CPI*\u6307\u4ee4\u6570 \u4e0d\u540c\u6307\u4ee4\u7684\u65f6\u949f\u5468\u671f\u6570\u53ef\u80fd\u4e0d\u540c\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u7a0b\u5e8f\u6216\u4e00\u53f0\u673a\u5668\u6765\u8bf4\uff0c\u5176 CPI \u6307**\u8be5\u7a0b\u5e8f\u6216\u8be5\u673a\u5668\u6307\u4ee4\u96c6\u4e2d\u7684\u6240\u6709\u6307\u4ee4\u6267\u884c\u6240\u9700\u7684 \u5e73\u5747\u65f6\u949f\u5468\u671f\u6570 **\uff0c\u6b64\u65f6 CPI \u662f\u4e00\u4e2a\u5e73\u5747\u503c\u3002 \u6765\u81ea\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1\uff1a\u786c\u4ef6\u8f6f\u4ef6\u63a5\u53e3\uff08\u539f\u4e66\u7b2c5\u7248\uff09 (\u6234\u7ef4 A.\u5e15\u7279\u68ee (David A.Patterson) etc.) (Z-Library) IPC\uff08Instructions Per Cycle\uff0c\u6bcf\u5468\u671f\u6307\u4ee4\u6570\uff09 IPC = 1/CPI 8.CPU \u6267\u884c\u65f6\u95f4 CPU \u6267\u884c\u65f6\u95f4\u6307 CPU \u5bf9\u67d0\u7279\u5b9a\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4 \uff0c \u4f8b\u5982\uff0c\u5bf9\u4e8e\u7a0b\u5e8f A\uff0cCPU \u6267\u884c\u7a0b\u5e8f A \u4f7f\u7528\u4e86 3s\uff0c\u5219\u5bf9\u4e8e\u7a0b\u5e8f A \u800c\u8a00\uff0cCPU \u6267\u884c\u65f6\u95f4\u5206\u522b\u662f 3s\u3002 \u4e00\u4e2a\u7a0b\u5e8f\u7684CPU \u6267\u884c\u65f6\u95f4 =\u65f6\u949f\u5468\u671f\u6570*\u65f6\u949f\u5468\u671f\u65f6\u95f4 CPU \u6267\u884c\u65f6\u95f4=CPU \u65f6\u949f\u5468\u671f\u6570/\u4e3b\u9891=\uff08\u6307\u4ee4\u6570\u00d7CPI\uff09/\u4e3b\u9891 \uff0c\u7531\u6b64\u4e3b\u9891\u3001CPI \u548c\u6307\u4ee4 \u6761\u6570\u662f\u76f8\u4e92\u5236\u7ea6\u7684\u3002\u4f8b\u5982\uff0c\u66f4\u6539\u6307\u4ee4\u96c6\u53ef\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u6240\u542b\u6307\u4ee4\u7684\u6761\u6570\uff0c\u4f46\u540c\u65f6\u53ef\u80fd\u5f15\u8d77 CPU \u7ed3\u6784\u7684\u8c03\u6574\uff0c\u4ece\u800c\u53ef\u80fd\u4f1a\u589e\u52a0\u65f6\u949f\u5468\u671f\u7684\u5bbd\u5ea6\uff08\u964d\u4f4e\u4e3b\u9891\uff09\u3002CPU \u7684\u6027\u80fd\u4e3b\u8981\u53d6\u51b3\u4e8e\u8fd9\u4e09\u4e2a \u8981\u7d20 8.MIPS MIPS\uff08Million Instructions Per Second\uff09\u6307\u7684\u662f\u6bcf\u79d2\u6267\u884c\u591a\u5c11\u767e\u4e07\u6761\u6307\u4ee4\u3002 MIPS=\u6307\u4ee4\u6761\u6570/\uff08\u6267\u884c\u65f6\u95f4\u00d710^6\uff09 = \u4e3b\u9891/\uff08CPI \u00d7 10 6\uff09\uff0c\u5982\u67d0\u673a\u5668\u6bcf\u79d2\u53ef\u4ee5\u6267\u884c 500 \u4e07\u6761\u6307\u4ee4\uff0c\u5219\u8bb0\u4f5c 5MIPS\u3002","title":"\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/#\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807","text":"","title":"\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/#\u4e00\u8ba1\u7b97\u673a\u7684\u4e3b\u8981\u6027\u80fd\u6307\u6807","text":"","title":"\u4e00.\u8ba1\u7b97\u673a\u7684\u4e3b\u8981\u6027\u80fd\u6307\u6807"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/#\u5b57\u957f","text":"\u5b57\u957f\u662f\u6307\u8ba1\u7b97\u673a\u8fdb\u884c\u4e00\u6b21\u6574\u6570\u8fd0\u7b97\uff08\u5373\u5b9a\u70b9\u6574\u6570\u8fd0\u7b97\uff09\u6240\u80fd\u5904\u7406\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u4f4d\u6570\uff0c \u901a\u5e38\u4e0e CPU \u7684\u5bc4\u5b58\u5668\u4f4d\u6570\u3001\u52a0\u6cd5\u5668\u6709\u5173\u3002\u56e0\u6b64\uff0c\u5b57\u957f\u4e00\u822c\u7b49\u4e8e\u5185\u90e8\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\uff0c\u5b57\u957f\u8d8a \u957f\uff0c\u6570\u7684\u8868\u793a\u8303\u56f4\u8d8a\u5927\uff0c\u8ba1\u7b97\u7cbe\u5ea6\u8d8a\u9ad8\u3002\u8ba1\u7b97\u673a\u5b57\u957f\u901a\u5e38\u9009\u5b9a\u4e3a\u5b57\u8282\uff088 \u4f4d\uff09\u7684\u6574\u6570\u500d\u3002 \u5728\u901a\u5e38\u6240\u8bf4\u7684\u201c\u67d0 16 \u4f4d\u6216 32 \u4f4d\u673a\u5668\u201d\u4e2d\uff0c16\u300132 \u6307\u7684\u662f\u5b57\u957f\uff0c\u4e5f\u79f0\u673a\u5668\u5b57\u957f\u3002 \u6307\u4ee4\u5b57\u957f\uff1a\u4e00\u4e2a\u6307\u4ee4\u5b57\u4e2d\u5305\u542b\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u4f4d\u6570\u3002 \u5b58\u50a8\u5b57\u957f\uff1a\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u957f\u5ea6\u3002\u5b83\u4eec\u90fd\u5fc5\u987b\u662f\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 \u6307\u4ee4\u5b57\u957f\u4e00\u822c\u53d6\u5b58\u50a8\u5b57\u957f\u7684\u6574\u6570\u500d\uff0c\u82e5\u6307\u4ee4\u5b57\u957f\u7b49\u4e8e\u5b58\u50a8\u5b57\u957f\u7684 2 \u500d\uff0c\u5219\u9700\u8981 2 \u4e2a\u8bbf\u5b58\u5468\u671f\u6765\u53d6\u51fa\u4e00\u6761\u6307\u4ee4\uff1b\u82e5\u6307\u4ee4\u5b57\u957f\u7b49\u4e8e\u5b58\u50a8\u5b57\u957f\uff0c\u5219**\u53d6\u6307\u5468\u671f\u7b49\u4e8e\u673a\u5668\u5468\u671f**\u3002\u65e9\u671f\u7684\u5b58\u50a8\u5b57\u957f\u4e00\u822c\u4e0e\u6307\u4ee4\u5b57\u957f\u3001\u5b57\u957f\u76f8\u7b49\uff0c\u56e0\u6b64\u8bbf\u95ee\u4e00\u6b21\u4e3b\u5b58\u4fbf\u53ef\u53d6\u51fa\u4e00\u6761\u6307\u4ee4\u6216\u4e00\u4e2a\u6570\u636e\u3002\u968f\u7740\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\uff0c\u6307\u4ee4\u5b57\u957f\u3001\u5b57\u957f\u90fd\u53ef\u53d8\uff0c\u4f46\u5fc5\u987b\u90fd\u662f\u5b57\u8282\u7684\u6574\u6570\u500d\u3002","title":"\u5b57\u957f"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/#\u6570\u636e\u901a\u8def\u5e26\u5bbd","text":"\u6570\u636e\u901a\u8def\u5e26\u5bbd\u662f\u6307\u6570\u636e\u603b\u7ebf\u4e00\u6b21\u6240\u80fd\u5e76\u884c\u4f20\u9001\u4fe1\u606f\u7684\u4f4d\u6570 \u3002\u6570\u636e\u901a\u8def\u5bbd\u5ea6\u662f\u6307\u5916\u90e8\u6570 \u636e\u603b\u7ebf\u7684\u5bbd\u5ea6\uff0c\u5b83\u4e0e CPU \u5185\u90e8\u7684\u6570\u636e\u603b\u7ebf\u5bbd\u5ea6\uff08\u5185\u90e8\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\uff09\u6709\u53ef\u80fd\u4e0d\u540c\u3002\u6ce8\u610f\uff1a \u5404\u4e2a\u5b50\u7cfb\u7edf\u901a\u8fc7\u6570\u636e\u603b\u7ebf\u8fde\u63a5\u5f62\u6210\u7684\u6570\u636e\u4f20\u9001\u8def\u5f84\u79f0\u4e3a\u6570\u636e\u901a\u8def","title":"\u6570\u636e\u901a\u8def\u5e26\u5bbd"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/#\u4e3b\u5b58\u5bb9\u91cf","text":"\u4e3b\u5b58\u5bb9\u91cf\u662f\u6307\u4e3b\u5b58\u50a8\u5668\u6240\u80fd\u5b58\u50a8\u4fe1\u606f\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u901a\u5e38\u4ee5\u5b57\u8282\u6765\u8861\u91cf\uff0c\u4e5f\u53ef\u7528\u5b57\u6570 x \u5b57\u957f\uff08\u5982 512K\u00d716 \u4f4d\uff09\u6765\u8868\u793a\u5b58\u50a8\u5bb9\u91cf\u3002 \u5176\u4e2d\uff0cMAR \u7684\u4f4d\u6570\u53cd\u6620\u5b58\u50a8\u5355\u5143\u7684\u4e2a\u6570\uff0cMAR \u7684\u4f4d\u6570\u53cd\u6620\u53ef\u5bfb\u5740\u8303\u56f4\u7684\u6700\u5927\u503c\uff08\u800c\u4e0d\u4e00\u5b9a\u662f\u5b9e\u9645\u5b58\u50a8\u5668\u7684\u5b58\u50a8\u5bb9\u91cf\uff09\u3002\u4f8b\u5982\uff0cMAR \u4e3a 16 \u4f4d\uff0c\u8868\u793a2 ^16=65536\uff0c\u5373\u6b64\u5b58\u50a8\u4f53\u5185\u6709 65536 \u4e2a\u5b58\u50a8\u5355\u5143\uff08\u53ef\u79f0\u4e3a 64K \u5185\u5b58\uff0c1K=1024\uff09\uff0c\u82e5 MDR\u4e3a 32 \u4f4d\uff0c\u8868\u793a\u5b58\u50a8\u5bb9\u91cf\u4e3a 64K\u00d732 \u4f4d\u3002","title":"\u4e3b\u5b58\u5bb9\u91cf"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/#\u8fd0\u7b97\u901f\u5ea6","text":"1.\u541e\u5410\u91cf \u6307\u7cfb\u7edf\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u5904\u7406\u8bf7\u6c42\u7684\u6570\u91cf\uff0c \u541e\u5410\u91cf\u662f\u6307\u4fe1\u606f\u6d41\u5165\u3001\u5904\u7406\u548c\u6d41\u51fa\u7cfb\u7edf\u7684\u901f\u7387 \u3002\u5b83\u53d6\u51b3\u4e8e CPU \u80fd\u591f\u591a\u5feb\u5730\u83b7\u53d6\u6307\u4ee4\uff0c\u6570\u636e\u80fd\u591f\u591a\u5feb\u5730\u4ece\u5185\u5b58\u53d6\u51fa\u6216\u5b58\u5165\uff0c\u4ee5\u53ca\u6240\u5f97\u7ed3\u679c\u80fd\u80fd\u591a\u5feb\u5730\u4ece\u5185\u5b58\u9001\u5230\u8f93\u51fa\u8bbe\u5907\u3002\u8fd9\u4e9b\u51b3\u5b9a\u56e0\u7d20\u4e2d\u7684\u4efb\u4e00\u6b65\u9aa4\u90fd\u4e0e\u4e3b\u5b58\u7d27\u5bc6\u76f8\u5173\uff0c\u56e0\u6b64**\u541e\u5410\u91cf\u4e3b\u8981\u53d6\u51b3\u5b50\u4e3b\u5b58\u7684\u5b58\u53d6\u5468\u671f\u3002** 2.\u54cd\u5e94\u65f6\u95f4 \u54cd\u5e94\u65f6\u95f4\u662f\u6307 \u4ece\u63d0\u4ea4\u4f5c\u4e1a\u5230\u8be5\u4f5c\u4e1a\u5f97\u5230 CPU \u54cd\u5e94\u6240\u7ecf\u5386\u7684\u65f6\u95f4 \u3002**\u54cd\u5e94\u65f6\u95f4\u8d8a\u77ed\uff0c\u541e\u5410\u91cf\u8d8a\u5927\u3002**\u901a\u5e38\u5305\u62ec CPU \u65f6\u95f4\uff08\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff09\u4e0e\u7b49\u5f85\u65f6\u95f4\uff08\u7528\u4e8e\u78c1\u76d8\u8bbf\u95ee\u3001 \u5b58\u50a8\u5668\u8bbf\u95ee\u3001I/O \u64cd\u4f5c\u3001\u64cd\u4f5c\u7cfb\u7edf\u5f00\u9500\u7b49\u7684\u65f6\u95f4 3.\u4e3b\u9891 \u673a\u5668\u5185\u90e8\u4e3b\u65f6\u949f\u7684\u9891\u7387\uff0c\u662f\u8861\u91cf\u673a\u5668\u901f\u5ea6\u7684\u91cd\u8981\u53c2\u6570\uff0c \u4e3b\u9891\u8d8a\u9ad8\uff0c\u5b8c\u6210\u6307\u4ee4\u7684\u4e00\u4e2a\u6267\u884c\u6b65\u9aa4\u6240\u7528\u7684\u65f6\u95f4\u8d8a\u77ed \uff0c\u5176\u5e38\u7528\u5355\u4f4d\u4e3a Hz\u3001MHz \u7b49\u3002 \u5982\u679c\u4e3b\u9891\u4e3a 4MHz\uff0c\u5219\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65f6\u949f\u5468\u671f\u4e3a \u00bc\u00d7(10^(\u22126)) s=0.25\u03bcs\uff08\u5373\u6bcf\u79d2\u6709 4M \u4e2a\u65f6\u949f\u5468\u671f\uff09\u3002 4.CPU \u5468\u671f CPU \u5468\u671f\u53c8\u79f0\u4e3a\u673a\u5668\u5468\u671f\uff0c\u901a\u5e38**\u5b9a\u4e49\u4e3a \u4ece\u5185\u5b58\u8bfb\u53d6\u4e00\u6761\u6307\u4ee4\u5b57\u7684\u6700\u77ed\u65f6\u95f4 **\u3002\u4e00\u4e2a\u6307\u4ee4\u5468\u671f\u5e38\u7531\u591a\u4e2a CPU \u5468\u671f\u6784\u6210 5.CPU \u65f6\u949f\u5468\u671f \u4e3b\u9891\u7684\u5012\u6570 \uff0c\u662f CPU \u4e2d\u6700\u5c0f\u7684\u65f6\u95f4\u5355\u4f4d\uff0c\u6267\u884c\u6307\u4ee4\u7684\u6bcf\u4e2a\u52a8\u4f5c\u81f3\u5c11\u9700\u8981 1 \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u901a\u5e38\u4e3a\u8282\u62cd\u8109\u51b2\u6216 T \u5468\u671f 6.CPI\uff08Cycles Per Instruction\uff0c\u6bcf\u6307\u4ee4\u5468\u671f\u6570\uff09 CPI: \u6bcf\u6761\u6307\u4ee4\u7684\u65f6\u949f\u5468\u671f\u6570\u3002 CPU \u65f6\u949f\u5468\u671f\u6570\uff1d\u7a0b\u5e8f\u7684\u6307\u4ee4\u6570*\u6bcf\u6761\u6307\u4ee4\u7684\u5e73\u5747\u65f6\u949f\u5468\u671f\u6570=CPI*\u6307\u4ee4\u6570 \u4e0d\u540c\u6307\u4ee4\u7684\u65f6\u949f\u5468\u671f\u6570\u53ef\u80fd\u4e0d\u540c\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u7a0b\u5e8f\u6216\u4e00\u53f0\u673a\u5668\u6765\u8bf4\uff0c\u5176 CPI \u6307**\u8be5\u7a0b\u5e8f\u6216\u8be5\u673a\u5668\u6307\u4ee4\u96c6\u4e2d\u7684\u6240\u6709\u6307\u4ee4\u6267\u884c\u6240\u9700\u7684 \u5e73\u5747\u65f6\u949f\u5468\u671f\u6570 **\uff0c\u6b64\u65f6 CPI \u662f\u4e00\u4e2a\u5e73\u5747\u503c\u3002 \u6765\u81ea\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1\uff1a\u786c\u4ef6\u8f6f\u4ef6\u63a5\u53e3\uff08\u539f\u4e66\u7b2c5\u7248\uff09 (\u6234\u7ef4 A.\u5e15\u7279\u68ee (David A.Patterson) etc.) (Z-Library) IPC\uff08Instructions Per Cycle\uff0c\u6bcf\u5468\u671f\u6307\u4ee4\u6570\uff09 IPC = 1/CPI 8.CPU \u6267\u884c\u65f6\u95f4 CPU \u6267\u884c\u65f6\u95f4\u6307 CPU \u5bf9\u67d0\u7279\u5b9a\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4 \uff0c \u4f8b\u5982\uff0c\u5bf9\u4e8e\u7a0b\u5e8f A\uff0cCPU \u6267\u884c\u7a0b\u5e8f A \u4f7f\u7528\u4e86 3s\uff0c\u5219\u5bf9\u4e8e\u7a0b\u5e8f A \u800c\u8a00\uff0cCPU \u6267\u884c\u65f6\u95f4\u5206\u522b\u662f 3s\u3002 \u4e00\u4e2a\u7a0b\u5e8f\u7684CPU \u6267\u884c\u65f6\u95f4 =\u65f6\u949f\u5468\u671f\u6570*\u65f6\u949f\u5468\u671f\u65f6\u95f4 CPU \u6267\u884c\u65f6\u95f4=CPU \u65f6\u949f\u5468\u671f\u6570/\u4e3b\u9891=\uff08\u6307\u4ee4\u6570\u00d7CPI\uff09/\u4e3b\u9891 \uff0c\u7531\u6b64\u4e3b\u9891\u3001CPI \u548c\u6307\u4ee4 \u6761\u6570\u662f\u76f8\u4e92\u5236\u7ea6\u7684\u3002\u4f8b\u5982\uff0c\u66f4\u6539\u6307\u4ee4\u96c6\u53ef\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u6240\u542b\u6307\u4ee4\u7684\u6761\u6570\uff0c\u4f46\u540c\u65f6\u53ef\u80fd\u5f15\u8d77 CPU \u7ed3\u6784\u7684\u8c03\u6574\uff0c\u4ece\u800c\u53ef\u80fd\u4f1a\u589e\u52a0\u65f6\u949f\u5468\u671f\u7684\u5bbd\u5ea6\uff08\u964d\u4f4e\u4e3b\u9891\uff09\u3002CPU \u7684\u6027\u80fd\u4e3b\u8981\u53d6\u51b3\u4e8e\u8fd9\u4e09\u4e2a \u8981\u7d20 8.MIPS MIPS\uff08Million Instructions Per Second\uff09\u6307\u7684\u662f\u6bcf\u79d2\u6267\u884c\u591a\u5c11\u767e\u4e07\u6761\u6307\u4ee4\u3002 MIPS=\u6307\u4ee4\u6761\u6570/\uff08\u6267\u884c\u65f6\u95f4\u00d710^6\uff09 = \u4e3b\u9891/\uff08CPI \u00d7 10 6\uff09\uff0c\u5982\u67d0\u673a\u5668\u6bcf\u79d2\u53ef\u4ee5\u6267\u884c 500 \u4e07\u6761\u6307\u4ee4\uff0c\u5219\u8bb0\u4f5c 5MIPS\u3002","title":"\u8fd0\u7b97\u901f\u5ea6"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/","text":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784 # \u4e00.\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210 # \u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7cfb\u7edf\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf \u4e8c.\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u57fa\u672c\u7ed3\u6784 # \u8ba1\u7b97\u673a\u786c\u4ef6\u4e3b\u8981\u7531 \u5b58\u50a8\u5668\uff0c\u8fd0\u7b97\u5668\uff0c\u63a7\u5236\u5668\uff0c\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7ec4\u6210 \u51af\u8bfa\u4f9d\u66fc\u8ba1\u7b97\u673a\u7684\u7279\u70b9\uff1a \u8ba1\u7b97\u673a\u786c\u4ef6\u7cfb\u7edf\u7531\u8fd0\u7b97\u5668\uff0c\u5b58\u50a8\u5668\uff0c\u63a7\u5236\u5668\uff0c\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7ec4\u6210 \u6307\u4ee4\u548c\u6570\u636e\u4ee5\u540c\u7b49\u5730\u4f4d\u5b58\u50a8\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u800c\u4e14\u53ef\u4ee5\u6309\u5730\u5740\u5bfb\u8bbf \u6307\u4ee4\u548c\u6570\u636e\u5747\u4f7f\u7528\u4e8c\u8fdb\u5236\u4ee3\u7801\u8868\u793a \u6307\u4ee4\u7531\u64cd\u4f5c\u7801\u548c\u5730\u5740\u7801\u7ec4\u6210\uff0c\u64cd\u4f5c\u7801\u6307\u51fa\u5177\u4f53\u7684\u6570\u636e\u64cd\u4f5c\u65b9\u5f0f\uff0c\u6bd4\u5982\u52a0\u6cd5\u51cf\u6cd5\uff0c\u5730\u5740\u5417\u5219\u662f\u652f\u6301\u8981\u88ab\u64cd\u4f5c\u7684\u6570\u636e\u64cd\u4f5c\u6570\u7684\u5730\u5740 \u6307\u4ee4\u5728\u5b58\u50a8\u5668\u5185\u6309\u987a\u5e8f\u5b58\u653e\u3002\u901a\u5e38\u5b58\u50a8\u7684\u6307\u4ee4\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\uff0c\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u80fd\u6839\u636e\u8fd0\u7b97\u7ed3\u679c\u6216\u8005\u6839\u636e\u8bbe\u5b9a\u7684\u6761\u4ef6\u6539\u53d8\u6267\u884c\u987a\u5e8f \u65e9\u671f\u7684\u51af\u8bfa\u4f9d\u66fc\u673a\u4ee5\u8fd0\u7b97\u5668\u4e3a\u4e2d\u5fc3\uff0c\u8f93\u51fa\u8f93\u51fa\u8bbe\u5907\u901a\u8fc7\u8fd0\u7b97\u5668\u548c\u5b58\u50a8\u5668\u4f20\u9001\u6570\u636e \u73b0\u4ee3\u8ba1\u7b97\u673a\u662f\u4ee5\u5b58\u50a8\u5668\u4e3a\u6838\u5fc3\uff0c\u4f7f\u5f97IO\u64cd\u4f5c\u5c3d\u53ef\u80fd\u5730\u76f4\u63a5\u5728IO\u8bbe\u5907\u548c\u5b58\u50a8\u5668\u4e4b\u95f4\u5b8c\u6210\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u6574\u4f53\u8fd0\u884c\u6548\u7387 \u76ee\u524d\u7edd\u5927\u591a\u6570\u73b0\u4ee3\u8ba1\u7b97\u673a\u4ecd\u9075\u5faa\u51af\u00b7\u8bfa\u4f9d\u66fc\u7684\u5b58\u50a8\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u601d\u60f3 \u8f93\u5165\u8bbe\u5907 # \u5c31\u662f\u952e\u76d8\u6216\u8005\u9f20\u6807\u4e4b\u7c7b\u7684\u786c\u4ef6\u8bbe\u5907 \u5b58\u50a8\u5668 # \u4e3b\u5b58\uff1a\u4e3b\u5b58\u50a8\u5668\uff0c\u5185\u5b58\u50a8\u5668\u2192 CPU\u80fd\u76f4\u63a5\u8bbf\u95ee \u8f85\u5b58\uff1a\u5916\u5b58\u50a8\u5668 --->\u4fe1\u606f\u5fc5\u987b\u5148\u8c03\u5165\u4e3b\u5b58\u540e\uff0c\u624d\u80fd\u88abCPU\u8bbf\u95ee \u4e3b\u5b58\u50a8\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a \u6309\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\u8fdb\u884c\u5b58\u53d6\uff0c\u6bcf\u4e2a\u5730\u5740\u5bf9\u5e94\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u8fd9\u79cd\u5b58\u53d6\u65b9\u5f0f\u53eb\u505a\u6309\u5730\u5740\u5b58\u53d6\u65b9\u5f0f \u5b58\u50a8\u4f53\u5b58\u653e\u4e8c\u8fdb\u5236\u4fe1\u606f\uff0c\u5730\u5740\u5bc4\u5b58\u5668\uff08MAR\uff09\u5b58\u653e\u8bbf\u5b58\u5730\u5740\uff0c\u7ecf\u8fc7\u5730\u5740\u8bd1\u7801\u540e\u627e\u5230\u6240\u9009\u7684\u5b58\u50a8\u5355\u5143\u3002\u6570\u636e\u5bc4\u5b58\u5668\uff08MDR\uff09\u7528\u4e8e\u6682\u5b58\u8981\u4ece\u5b58\u50a8\u5668\u4e2d\u8bfb\u6216\u5199\u7684\u4fe1\u606f\u3002 \u5b58\u50a8\u4f53\u7531\u5f88\u591a\u5b58\u50a8\u5355\u5143\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u90fd\u5305\u542b\u591a\u4e2a\u5b58\u50a8\u5143\uff0c\u6bcf\u4e2a\u5b58\u50a8\u5143\u4ef6\u5b58\u50a8\u4e00\u4f4d\u4e8c\u8fdb\u5236\u4ee3\u7801\u201c0\u201d\u6216\u8005\u201c1\u201d\u3002 \u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e32\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u8fd9\u4e32\u4ee3\u7801\u6210\u4e3a\u5b58\u50a8\u5b57\uff0c\u8fd9\u4e32\u4ee3\u7801\u7684\u4f4d\u6570\u53eb\u505a\u5b58\u50a8\u5b57\u957f\uff0c\u5b58\u50a8\u5b57\u957f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u82821B\uff0c\u6216\u8005\u662f\u5b57\u8282\u7684\u5076\u6570\u500d \u76f8\u5173\u6982\u5ff5\uff1a \u5b58\u50a8\u5143\uff1a \u53ef\u79f0\u4e3a\u5b58\u50a8\u5143\u4ef6\u548c\u5b58\u50a8\u57fa\u5143\uff0c\u7528\u6765\u5b58\u653e\u4e00\u4f4d\u4e8c\u8fdb\u5236\u4fe1\u606f \u5b58\u50a8\u5355\u5143\uff1a \u591a\u4e2a\u5b58\u50a8\u5143\u7ec4\u6210\uff0c\u53ef\u4ee5\u5b58\u653e\u591a\u4f4d\u4e8c\u8fdb\u5236\u4fe1\u606f\uff0c \u5b58\u50a8\u5355\u5143\u7684\u6570\u91cf\u7b49\u4e8e2\u7684MAR\u4f4d\u6570\u7684\u6b21\u65b9 \u3002MAR\u662f\u5730\u5740\u5bc4\u5b58\u5668\uff0c\u5982\u679cMAR\u4e3a10\u4f4d\uff0c\u90a3\u4e48\u5b58\u50a8\u5355\u5143\u7684\u6570\u91cf\u5c31\u662f2\u7684\u5341\u6b21\u65b9\uff0c\u4e5f\u5c31\u662f1024\u4e2a\uff0c\u8bb0\u4e3a1K \u5b58\u50a8\u4f53\uff1a\u8bb8\u591a\u5b58\u50a8\u5355\u5143\u7ec4\u6210\u5b58\u50a8\u4f53 \u5b58\u50a8\u5b57\uff1a\u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u4e2d\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u7ec4\u5408\u5c31\u662f\u5b58\u50a8\u5b57\uff0c\u5b83\u53ef\u4ee5\u4ee3\u8868\u6570\u503c\uff0c\u6307\u4ee4\uff0c\u5730\u5740\u7b49\u4fe1\u606f \u5b58\u50a8\u5b57\u957f\uff1a \u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u4e2d\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u4f4d\u6570\u5c31\u662f\u5b58\u50a8\u5b57\u957f\uff0c MDR\u7684\u4f4d\u6570\u8868\u793a\u5b58\u50a8\u5b57\u957f \u3002MDR\u4e3a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5982\u679cMDR\u4e3a10\u4f4d\uff0c\u90a3\u4e48\u5b58\u50a8\u5b57\u957f\u5c31\u662f10\uff0c\u4e5f\u8868\u793a\u4e00\u4e2a\u5b57\u4e3a10bit \u5b57\uff08word\uff09\uff1a\u4e00\u4e2a\u5b57\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u673a\u5668\uff0c\u5e94\u533a\u522b\u4e8e\u5b57\u8282\uff1b \u5b57\u8282\uff08Byte\uff09\uff1a\u4e00\u4e2a\u5b57\u8282\u7b49\u4e8e 8 \u4e2a bit\u3002 \u8fd0\u7b97\u5668 # \u8fd0\u7b97\u5668\u7528\u4e8e\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97\uff0c\u662f\u8ba1\u7b97\u673a\u7684\u6267\u884c\u90e8\u4ef6\uff0c\u6838\u5fc3\u662f\u7b97\u6570\u903b\u8f91\u5355\u5143\uff08ALU\uff09 \u63a7\u5236\u5668 # \u63a7\u5236\u5668\u662f\u8ba1\u7b97\u673a\u7684\u6307\u6325\u4e2d\u5fc3\uff0c\u5b83\u6765\u201c\u6307\u6325\u201d\u5404\u90e8\u4ef6\u81ea\u52a8\u534f\u8c03\u5730\u8fdb\u884c\u5de5\u4f5c\u3002 \u63a7\u5236\u5668\u7531\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u3001\u6307\u4ee4\u5bc4\u5b58\u5668\uff08IR\uff09\u548c\u63a7\u5236\u5355\u5143\uff08CU\uff09\u7ec4\u6210\u3002PC \u7528\u6765\u5b58\u653e\u5f53\u524d\u9884\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u81ea\u52a8\u52a0 1 \u6765\u5f62\u6210\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c\u5b83\u4e0e\u4e3b\u5b58\u7684 MAR \u4e4b\u95f4\u4e00\u6761\u76f4\u63a5\u901a\u8def\u3002IR \u7528\u6765\u5b58\u653e\u5f53\u524d\u7684\u6307\u4ee4\uff0c\u5176\u5185\u5bb9\u6765\u81ea\u4e3b\u5b58\u7684 MDR\u3002\u6307\u4ee4\u4e2d\u7684\u64cd\u4f5c\u7801 OP\uff08IR\uff09\u9001\u81f3 CU\uff0c\u7528\u4ee5\u5206\u6790\u6307\u4ee4\u5e76\u53d1\u51fa\u5404\u79cd\u5fae\u64cd\u4f5c\u547d\u4ee4\u5e8f\u5217\uff1b\u800c\u6307\u4ee4\u4e2d\u7684\u5730\u5740\u7801\u5b57\u6bb5 Ad\uff08IR\uff09\u9001\u5f80MAR \u7528\u4ee5\u53d6\u64cd\u4f5c\u6570 CPU \u548c\u4e3b\u5b58\u4e4b\u95f4\u901a\u8fc7\u4e00\u7ec4\u603b\u7ebf\u76f8\u8fde\uff0c\u603b\u7ebf\u4e2d\u6709\u5730\u5740\u3001\u63a7\u5236\u548c\u6570\u636e 3 \u7ec4\u4fe1\u53f7\u7ebf\u3002MAR \u4e2d\u7684 \u5730\u5740\u4fe1\u606f\u4f1a\u76f4\u63a5\u9001\u5230\u5730\u5740\u7ebf\u4e0a\uff0c\u7528\u4e8e\u6307\u5411\u8bfb/\u5199\u64cd\u4f5c\u7684\u4e3b\u5b58\u5b58\u50a8\u5355\u5143\uff1b\u63a7\u5236\u7ebf\u4e2d\u6709\u8bfb/\u5199\u4fe1 \u53f7\u7ebf\uff0c\u6307\u51fa\u6570\u636e\u662f\u4ece CPU \u5199\u5165\u4e3b\u5b58\u8fd8\u662f\u4ece\u4e3b\u5b58\u8bfb\u51fa\u5230 CPU\uff0c\u6839\u636e\u662f\u8bfb\u64cd\u4f5c\u8fd8\u662f\u5199\u64cd\u4f5c\u6765\u63a7 \u5236\u5c06 MDR \u4e2d\u7684\u6570\u636e\u662f\u76f4\u63a5\u9001\u5230\u6570\u636e\u7ebf\u4e0a\u8fd8\u662f\u5c06\u6570\u636e\u7ebf\u4e0a\u7684\u6570\u636e\u63a5\u6536\u5230 MDR \u4e2d\u3002 \u8f93\u51fa\u8bbe\u5907 # \u8f93\u51fa\u8bbe\u5907\u7684\u4efb\u52a1\u662f\u5c06\u8ba1\u7b97\u673a\u5904\u7406\u7684\u7ed3\u679c\u7528\u4eba\u4eec\u53ef\u4ee5\u63a5\u53d7\u6216\u8bc6\u522b\u7684\u5f62\u5f0f\u6216\u5176\u4ed6\u7cfb\u7edf\u6240\u8981 \u6c42\u7684\u4fe1\u606f\u5f62\u5f0f\u8f93\u51fa\u3002\u6700\u5e38\u7528\u3001\u6700\u57fa\u672c\u7684\u8f93\u51fa\u8bbe\u5907\u662f\u663e\u793a\u5668\u3001\u6253\u5370\u673a \u4e09.\u8ba1\u7b97\u673a\u8f6f\u4ef6 # \u8ba1\u7b97\u673a\u7684\u8f6f\u4ef6\u6309\u7167\u529f\u80fd\u901a\u5e38\u5206\u4e3a\u4e24\u5927\u7c7b\uff0c\u7cfb\u7edf\u8f6f\u4ef6\u548c\u5e94\u7528\u8f6f\u4ef6\u3002 \u7cfb\u7edf\u8f6f\u4ef6 # \u7cfb\u7edf\u8f6f\u4ef6\u53c8\u79f0\u4e3a\u7cfb\u7edf\u7a0b\u5e8f\uff0c\u662f\u4fdd\u8bc1\u8ba1\u7b97\u673a\u9ad8\u6548\u6b63\u786e\u8fd0\u884c\u7684\u57fa\u7840\u8f6f\u4ef6\uff0c\u4e3b\u8981\u7528\u6765\u7ba1\u7406\u6574 \u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\uff0c\u4f7f\u7cfb\u7edf\u8d44\u6e90\u5f97\u5230\u5408\u7406\u7684\u8c03\u5ea6\uff0c\u9ad8\u6548\u8fd0\u884c\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u8bd1\u7a0b\u5e8f\u3001\u6587\u4ef6 \u7cfb\u7edf\u3001\u5206\u5e03\u5f0f\u8f6f\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u8f6f\u4ef6\u7cfb\u7edf\u53ca\u6807\u51c6\u5e93\u7a0b\u5e8f\u3001\u670d\u52a1\u6027\u7a0b\u5e8f\u7b49\u90fd\u662f\u7cfb\u7edf\u8f6f\u4ef6 \u5e94\u7528\u8f6f\u4ef6 # \u5e94\u7528\u8f6f\u4ef6\u53c8\u79f0\u4e3a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u662f\u7528\u6237\u4e3a\u89e3\u51b3\u67d0\u4e2a\u5e94\u7528\u9886\u57df\u4e2d\u7684\u5404\u7c7b\u95ee\u9898\u6240\u7f16\u5199\u7684\u5404\u79cd \u7a0b\u5e8f\uff0c\u5982\u5fae\u4fe1\u6216\u5404\u7c7b\u5de5\u4e1a\u8f6f\u4ef6\u7b49\u90fd\u662f\u5e94\u7528\u8f6f\u4ef6 \u8ba1\u7b97\u673a\u8bed\u8a00 # \u8ba1\u7b97\u673a\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u7ea7\u522b\uff0c\u673a\u5668\u8bed\u8a00\u3001\u6c47\u7f16\u8bed\u8a00\u548c\u9ad8\u7ea7\u8bed\u8a00 \u56db.\u8ba1\u7b97\u673a\u7cfb\u7edf\u591a\u5c42\u6b21\u673a\u6784 # \u8ba1\u7b97\u673a\u901a\u5e38\u7531 5 \u4e2a\u4e0d\u540c\u7684\u5c42\u6b21\u7ec4\u6210\uff0c\u5728\u6bcf\u4e00\u5c42\u4e0a\u90fd\u80fd\u591f\u8fdb\u884c\u7a0b\u5e8f\u8bbe\u8ba1 \u4e94.\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b # \u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u4e0d\u65ad\u5730\u4ece\u5b58\u50a8\u5668\u4e2d\u9010\u6761\u53d6\u51fa\u6307\u4ee4\uff0c\u7136\u540e\u9001\u81f3\u63a7\u5236\u5668\uff0c\u7ecf\u5206 \u6790\u540e\u7531 CPU \u53d1\u51fa\u5404\u79cd\u64cd\u4f5c\u547d\u4ee4\uff0c\u6307\u6325\u5404\u90e8\u4ef6\u5b8c\u6210\u5404\u79cd\u64cd\u4f5c\uff0c\u76f4\u81f3\u7a0b\u5e8f\u4e2d\u5168\u90e8\u6307\u4ee4\u6267\u884c\u7ed3\u675f\u3002 \u5b58\u50a8\u7a0b\u5e8f # \u7a0b\u5e8f\u6267\u884c\u524d\uff0c\u9700\u8981\u5c06\u7a0b\u5e8f\u6240\u542b\u7684\u6307\u4ee4\u548c\u6570\u636e\u9001\u5165\u4e3b\u5b58\uff0c\u4e00\u65e6\u7a0b\u5e8f\u88ab\u542f\u52a8\u6267\u884c\uff0c\u5c31\u65e0\u987b\u64cd\u4f5c\u4eba\u5458\u7684\u5e72\u9884\uff0c\u81ea\u52a8\u9010\u6761\u5b8c\u6210\u6307\u4ee4\u7684\u53d6\u51fa\u548c\u6267\u884c\u4efb\u52a1 \u6bcf\u6761\u6307\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u5305\u62ec\uff1a \u4ece\u4e3b\u5b58\u53d6\u6307\u4ee4\u3001\u5bf9\u6307\u4ee4\u8fdb\u884c\u8bd1\u7801\u3001\u8ba1\u7b97\u4e0b\u6761\u6307\u4ee4\u5730\u5740\u3001\u53d6\u64cd\u4f5c\u6570\u5e76\u6267\u884c\u3001\u5c06\u7ed3\u679c\u9001\u56de\u5b58\u50a8\u5668\u3002 \u7a0b\u5e8f\u6267\u884c\u524d\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u4e8b\u5148\u5b58\u653e\u5728 PC \u4e2d\uff0c\u53d6\u6307\u4ee4\u65f6\uff0c\u5c06 PC \u7684\u5185\u5bb9\u4f5c\u4e3a\u5730\u5740 \u8bbf\u95ee\u4e3b\u5b58\u3002\u5728\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u9700\u8981\u8ba1\u7b97\u4e0b\u6761\u5c06\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740\uff0c\u5e76\u5b58\u50a8\u5728 PC\u3002\u5728 \u6b64\u6761\u6307\u4ee4\u6267\u884c\u5b8c\u540e\uff0c\u518d\u6839\u636e PC \u5b58\u50a8\u7684\u503c\u4ece\u4e3b\u5b58\u4e2d\u53d6\u51fa\u4e0b\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\uff0c\u8ba1\u7b97\u673a\u5de5\u4f5c\u65b9\u5f0f \u5c31\u662f\u5faa\u73af\u5f80\u590d\u7684\u81ea\u52a8\u83b7\u53d6\u5e76\u6267\u884c\u987a\u5e8f\u7684\u6307\u4ee4\u96c6 \u8f6f\u4ef6\u7684\u5de5\u4f5c\u65b9\u5f0f # \u4e3a 4 \u4e2a\u9636\u6bb5\uff1a \u9884\u5904\u7406\u9636\u6bb5 \u7f16\u8bd1\u9636\u6bb5 \u6c47\u7f16\u9636\u6bb5 \u94fe\u63a5\u9636\u6bb5 \u8be6\u60c5\u89c1 CompileC - \u8ba1\u7b97\u673a\u5b66\u4e60\u6307\u5357","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u8ba1\u7b97\u673a\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784","text":"","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u4e00\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210","text":"\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7cfb\u7edf\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf","title":"\u4e00.\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u4e8c\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u57fa\u672c\u7ed3\u6784","text":"\u8ba1\u7b97\u673a\u786c\u4ef6\u4e3b\u8981\u7531 \u5b58\u50a8\u5668\uff0c\u8fd0\u7b97\u5668\uff0c\u63a7\u5236\u5668\uff0c\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7ec4\u6210 \u51af\u8bfa\u4f9d\u66fc\u8ba1\u7b97\u673a\u7684\u7279\u70b9\uff1a \u8ba1\u7b97\u673a\u786c\u4ef6\u7cfb\u7edf\u7531\u8fd0\u7b97\u5668\uff0c\u5b58\u50a8\u5668\uff0c\u63a7\u5236\u5668\uff0c\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7ec4\u6210 \u6307\u4ee4\u548c\u6570\u636e\u4ee5\u540c\u7b49\u5730\u4f4d\u5b58\u50a8\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u800c\u4e14\u53ef\u4ee5\u6309\u5730\u5740\u5bfb\u8bbf \u6307\u4ee4\u548c\u6570\u636e\u5747\u4f7f\u7528\u4e8c\u8fdb\u5236\u4ee3\u7801\u8868\u793a \u6307\u4ee4\u7531\u64cd\u4f5c\u7801\u548c\u5730\u5740\u7801\u7ec4\u6210\uff0c\u64cd\u4f5c\u7801\u6307\u51fa\u5177\u4f53\u7684\u6570\u636e\u64cd\u4f5c\u65b9\u5f0f\uff0c\u6bd4\u5982\u52a0\u6cd5\u51cf\u6cd5\uff0c\u5730\u5740\u5417\u5219\u662f\u652f\u6301\u8981\u88ab\u64cd\u4f5c\u7684\u6570\u636e\u64cd\u4f5c\u6570\u7684\u5730\u5740 \u6307\u4ee4\u5728\u5b58\u50a8\u5668\u5185\u6309\u987a\u5e8f\u5b58\u653e\u3002\u901a\u5e38\u5b58\u50a8\u7684\u6307\u4ee4\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\uff0c\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u80fd\u6839\u636e\u8fd0\u7b97\u7ed3\u679c\u6216\u8005\u6839\u636e\u8bbe\u5b9a\u7684\u6761\u4ef6\u6539\u53d8\u6267\u884c\u987a\u5e8f \u65e9\u671f\u7684\u51af\u8bfa\u4f9d\u66fc\u673a\u4ee5\u8fd0\u7b97\u5668\u4e3a\u4e2d\u5fc3\uff0c\u8f93\u51fa\u8f93\u51fa\u8bbe\u5907\u901a\u8fc7\u8fd0\u7b97\u5668\u548c\u5b58\u50a8\u5668\u4f20\u9001\u6570\u636e \u73b0\u4ee3\u8ba1\u7b97\u673a\u662f\u4ee5\u5b58\u50a8\u5668\u4e3a\u6838\u5fc3\uff0c\u4f7f\u5f97IO\u64cd\u4f5c\u5c3d\u53ef\u80fd\u5730\u76f4\u63a5\u5728IO\u8bbe\u5907\u548c\u5b58\u50a8\u5668\u4e4b\u95f4\u5b8c\u6210\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u6574\u4f53\u8fd0\u884c\u6548\u7387 \u76ee\u524d\u7edd\u5927\u591a\u6570\u73b0\u4ee3\u8ba1\u7b97\u673a\u4ecd\u9075\u5faa\u51af\u00b7\u8bfa\u4f9d\u66fc\u7684\u5b58\u50a8\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u601d\u60f3","title":"\u4e8c.\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u57fa\u672c\u7ed3\u6784"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u8f93\u5165\u8bbe\u5907","text":"\u5c31\u662f\u952e\u76d8\u6216\u8005\u9f20\u6807\u4e4b\u7c7b\u7684\u786c\u4ef6\u8bbe\u5907","title":"\u8f93\u5165\u8bbe\u5907"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u5b58\u50a8\u5668","text":"\u4e3b\u5b58\uff1a\u4e3b\u5b58\u50a8\u5668\uff0c\u5185\u5b58\u50a8\u5668\u2192 CPU\u80fd\u76f4\u63a5\u8bbf\u95ee \u8f85\u5b58\uff1a\u5916\u5b58\u50a8\u5668 --->\u4fe1\u606f\u5fc5\u987b\u5148\u8c03\u5165\u4e3b\u5b58\u540e\uff0c\u624d\u80fd\u88abCPU\u8bbf\u95ee \u4e3b\u5b58\u50a8\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\uff1a \u6309\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\u8fdb\u884c\u5b58\u53d6\uff0c\u6bcf\u4e2a\u5730\u5740\u5bf9\u5e94\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u8fd9\u79cd\u5b58\u53d6\u65b9\u5f0f\u53eb\u505a\u6309\u5730\u5740\u5b58\u53d6\u65b9\u5f0f \u5b58\u50a8\u4f53\u5b58\u653e\u4e8c\u8fdb\u5236\u4fe1\u606f\uff0c\u5730\u5740\u5bc4\u5b58\u5668\uff08MAR\uff09\u5b58\u653e\u8bbf\u5b58\u5730\u5740\uff0c\u7ecf\u8fc7\u5730\u5740\u8bd1\u7801\u540e\u627e\u5230\u6240\u9009\u7684\u5b58\u50a8\u5355\u5143\u3002\u6570\u636e\u5bc4\u5b58\u5668\uff08MDR\uff09\u7528\u4e8e\u6682\u5b58\u8981\u4ece\u5b58\u50a8\u5668\u4e2d\u8bfb\u6216\u5199\u7684\u4fe1\u606f\u3002 \u5b58\u50a8\u4f53\u7531\u5f88\u591a\u5b58\u50a8\u5355\u5143\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u90fd\u5305\u542b\u591a\u4e2a\u5b58\u50a8\u5143\uff0c\u6bcf\u4e2a\u5b58\u50a8\u5143\u4ef6\u5b58\u50a8\u4e00\u4f4d\u4e8c\u8fdb\u5236\u4ee3\u7801\u201c0\u201d\u6216\u8005\u201c1\u201d\u3002 \u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e32\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u8fd9\u4e32\u4ee3\u7801\u6210\u4e3a\u5b58\u50a8\u5b57\uff0c\u8fd9\u4e32\u4ee3\u7801\u7684\u4f4d\u6570\u53eb\u505a\u5b58\u50a8\u5b57\u957f\uff0c\u5b58\u50a8\u5b57\u957f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u82821B\uff0c\u6216\u8005\u662f\u5b57\u8282\u7684\u5076\u6570\u500d \u76f8\u5173\u6982\u5ff5\uff1a \u5b58\u50a8\u5143\uff1a \u53ef\u79f0\u4e3a\u5b58\u50a8\u5143\u4ef6\u548c\u5b58\u50a8\u57fa\u5143\uff0c\u7528\u6765\u5b58\u653e\u4e00\u4f4d\u4e8c\u8fdb\u5236\u4fe1\u606f \u5b58\u50a8\u5355\u5143\uff1a \u591a\u4e2a\u5b58\u50a8\u5143\u7ec4\u6210\uff0c\u53ef\u4ee5\u5b58\u653e\u591a\u4f4d\u4e8c\u8fdb\u5236\u4fe1\u606f\uff0c \u5b58\u50a8\u5355\u5143\u7684\u6570\u91cf\u7b49\u4e8e2\u7684MAR\u4f4d\u6570\u7684\u6b21\u65b9 \u3002MAR\u662f\u5730\u5740\u5bc4\u5b58\u5668\uff0c\u5982\u679cMAR\u4e3a10\u4f4d\uff0c\u90a3\u4e48\u5b58\u50a8\u5355\u5143\u7684\u6570\u91cf\u5c31\u662f2\u7684\u5341\u6b21\u65b9\uff0c\u4e5f\u5c31\u662f1024\u4e2a\uff0c\u8bb0\u4e3a1K \u5b58\u50a8\u4f53\uff1a\u8bb8\u591a\u5b58\u50a8\u5355\u5143\u7ec4\u6210\u5b58\u50a8\u4f53 \u5b58\u50a8\u5b57\uff1a\u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u4e2d\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u7ec4\u5408\u5c31\u662f\u5b58\u50a8\u5b57\uff0c\u5b83\u53ef\u4ee5\u4ee3\u8868\u6570\u503c\uff0c\u6307\u4ee4\uff0c\u5730\u5740\u7b49\u4fe1\u606f \u5b58\u50a8\u5b57\u957f\uff1a \u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u4e2d\u4e8c\u8fdb\u5236\u4ee3\u7801\u7684\u4f4d\u6570\u5c31\u662f\u5b58\u50a8\u5b57\u957f\uff0c MDR\u7684\u4f4d\u6570\u8868\u793a\u5b58\u50a8\u5b57\u957f \u3002MDR\u4e3a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5982\u679cMDR\u4e3a10\u4f4d\uff0c\u90a3\u4e48\u5b58\u50a8\u5b57\u957f\u5c31\u662f10\uff0c\u4e5f\u8868\u793a\u4e00\u4e2a\u5b57\u4e3a10bit \u5b57\uff08word\uff09\uff1a\u4e00\u4e2a\u5b57\u7684\u5927\u5c0f\u53d6\u51b3\u4e8e\u673a\u5668\uff0c\u5e94\u533a\u522b\u4e8e\u5b57\u8282\uff1b \u5b57\u8282\uff08Byte\uff09\uff1a\u4e00\u4e2a\u5b57\u8282\u7b49\u4e8e 8 \u4e2a bit\u3002","title":"\u5b58\u50a8\u5668"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u8fd0\u7b97\u5668","text":"\u8fd0\u7b97\u5668\u7528\u4e8e\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97\uff0c\u662f\u8ba1\u7b97\u673a\u7684\u6267\u884c\u90e8\u4ef6\uff0c\u6838\u5fc3\u662f\u7b97\u6570\u903b\u8f91\u5355\u5143\uff08ALU\uff09","title":"\u8fd0\u7b97\u5668"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u63a7\u5236\u5668","text":"\u63a7\u5236\u5668\u662f\u8ba1\u7b97\u673a\u7684\u6307\u6325\u4e2d\u5fc3\uff0c\u5b83\u6765\u201c\u6307\u6325\u201d\u5404\u90e8\u4ef6\u81ea\u52a8\u534f\u8c03\u5730\u8fdb\u884c\u5de5\u4f5c\u3002 \u63a7\u5236\u5668\u7531\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u3001\u6307\u4ee4\u5bc4\u5b58\u5668\uff08IR\uff09\u548c\u63a7\u5236\u5355\u5143\uff08CU\uff09\u7ec4\u6210\u3002PC \u7528\u6765\u5b58\u653e\u5f53\u524d\u9884\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u81ea\u52a8\u52a0 1 \u6765\u5f62\u6210\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c\u5b83\u4e0e\u4e3b\u5b58\u7684 MAR \u4e4b\u95f4\u4e00\u6761\u76f4\u63a5\u901a\u8def\u3002IR \u7528\u6765\u5b58\u653e\u5f53\u524d\u7684\u6307\u4ee4\uff0c\u5176\u5185\u5bb9\u6765\u81ea\u4e3b\u5b58\u7684 MDR\u3002\u6307\u4ee4\u4e2d\u7684\u64cd\u4f5c\u7801 OP\uff08IR\uff09\u9001\u81f3 CU\uff0c\u7528\u4ee5\u5206\u6790\u6307\u4ee4\u5e76\u53d1\u51fa\u5404\u79cd\u5fae\u64cd\u4f5c\u547d\u4ee4\u5e8f\u5217\uff1b\u800c\u6307\u4ee4\u4e2d\u7684\u5730\u5740\u7801\u5b57\u6bb5 Ad\uff08IR\uff09\u9001\u5f80MAR \u7528\u4ee5\u53d6\u64cd\u4f5c\u6570 CPU \u548c\u4e3b\u5b58\u4e4b\u95f4\u901a\u8fc7\u4e00\u7ec4\u603b\u7ebf\u76f8\u8fde\uff0c\u603b\u7ebf\u4e2d\u6709\u5730\u5740\u3001\u63a7\u5236\u548c\u6570\u636e 3 \u7ec4\u4fe1\u53f7\u7ebf\u3002MAR \u4e2d\u7684 \u5730\u5740\u4fe1\u606f\u4f1a\u76f4\u63a5\u9001\u5230\u5730\u5740\u7ebf\u4e0a\uff0c\u7528\u4e8e\u6307\u5411\u8bfb/\u5199\u64cd\u4f5c\u7684\u4e3b\u5b58\u5b58\u50a8\u5355\u5143\uff1b\u63a7\u5236\u7ebf\u4e2d\u6709\u8bfb/\u5199\u4fe1 \u53f7\u7ebf\uff0c\u6307\u51fa\u6570\u636e\u662f\u4ece CPU \u5199\u5165\u4e3b\u5b58\u8fd8\u662f\u4ece\u4e3b\u5b58\u8bfb\u51fa\u5230 CPU\uff0c\u6839\u636e\u662f\u8bfb\u64cd\u4f5c\u8fd8\u662f\u5199\u64cd\u4f5c\u6765\u63a7 \u5236\u5c06 MDR \u4e2d\u7684\u6570\u636e\u662f\u76f4\u63a5\u9001\u5230\u6570\u636e\u7ebf\u4e0a\u8fd8\u662f\u5c06\u6570\u636e\u7ebf\u4e0a\u7684\u6570\u636e\u63a5\u6536\u5230 MDR \u4e2d\u3002","title":"\u63a7\u5236\u5668"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u8f93\u51fa\u8bbe\u5907","text":"\u8f93\u51fa\u8bbe\u5907\u7684\u4efb\u52a1\u662f\u5c06\u8ba1\u7b97\u673a\u5904\u7406\u7684\u7ed3\u679c\u7528\u4eba\u4eec\u53ef\u4ee5\u63a5\u53d7\u6216\u8bc6\u522b\u7684\u5f62\u5f0f\u6216\u5176\u4ed6\u7cfb\u7edf\u6240\u8981 \u6c42\u7684\u4fe1\u606f\u5f62\u5f0f\u8f93\u51fa\u3002\u6700\u5e38\u7528\u3001\u6700\u57fa\u672c\u7684\u8f93\u51fa\u8bbe\u5907\u662f\u663e\u793a\u5668\u3001\u6253\u5370\u673a","title":"\u8f93\u51fa\u8bbe\u5907"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u4e09\u8ba1\u7b97\u673a\u8f6f\u4ef6","text":"\u8ba1\u7b97\u673a\u7684\u8f6f\u4ef6\u6309\u7167\u529f\u80fd\u901a\u5e38\u5206\u4e3a\u4e24\u5927\u7c7b\uff0c\u7cfb\u7edf\u8f6f\u4ef6\u548c\u5e94\u7528\u8f6f\u4ef6\u3002","title":"\u4e09.\u8ba1\u7b97\u673a\u8f6f\u4ef6"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u7cfb\u7edf\u8f6f\u4ef6","text":"\u7cfb\u7edf\u8f6f\u4ef6\u53c8\u79f0\u4e3a\u7cfb\u7edf\u7a0b\u5e8f\uff0c\u662f\u4fdd\u8bc1\u8ba1\u7b97\u673a\u9ad8\u6548\u6b63\u786e\u8fd0\u884c\u7684\u57fa\u7840\u8f6f\u4ef6\uff0c\u4e3b\u8981\u7528\u6765\u7ba1\u7406\u6574 \u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\uff0c\u4f7f\u7cfb\u7edf\u8d44\u6e90\u5f97\u5230\u5408\u7406\u7684\u8c03\u5ea6\uff0c\u9ad8\u6548\u8fd0\u884c\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u8bd1\u7a0b\u5e8f\u3001\u6587\u4ef6 \u7cfb\u7edf\u3001\u5206\u5e03\u5f0f\u8f6f\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u8f6f\u4ef6\u7cfb\u7edf\u53ca\u6807\u51c6\u5e93\u7a0b\u5e8f\u3001\u670d\u52a1\u6027\u7a0b\u5e8f\u7b49\u90fd\u662f\u7cfb\u7edf\u8f6f\u4ef6","title":"\u7cfb\u7edf\u8f6f\u4ef6"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u5e94\u7528\u8f6f\u4ef6","text":"\u5e94\u7528\u8f6f\u4ef6\u53c8\u79f0\u4e3a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u662f\u7528\u6237\u4e3a\u89e3\u51b3\u67d0\u4e2a\u5e94\u7528\u9886\u57df\u4e2d\u7684\u5404\u7c7b\u95ee\u9898\u6240\u7f16\u5199\u7684\u5404\u79cd \u7a0b\u5e8f\uff0c\u5982\u5fae\u4fe1\u6216\u5404\u7c7b\u5de5\u4e1a\u8f6f\u4ef6\u7b49\u90fd\u662f\u5e94\u7528\u8f6f\u4ef6","title":"\u5e94\u7528\u8f6f\u4ef6"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u8ba1\u7b97\u673a\u8bed\u8a00","text":"\u8ba1\u7b97\u673a\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u7ea7\u522b\uff0c\u673a\u5668\u8bed\u8a00\u3001\u6c47\u7f16\u8bed\u8a00\u548c\u9ad8\u7ea7\u8bed\u8a00","title":"\u8ba1\u7b97\u673a\u8bed\u8a00"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u56db\u8ba1\u7b97\u673a\u7cfb\u7edf\u591a\u5c42\u6b21\u673a\u6784","text":"\u8ba1\u7b97\u673a\u901a\u5e38\u7531 5 \u4e2a\u4e0d\u540c\u7684\u5c42\u6b21\u7ec4\u6210\uff0c\u5728\u6bcf\u4e00\u5c42\u4e0a\u90fd\u80fd\u591f\u8fdb\u884c\u7a0b\u5e8f\u8bbe\u8ba1","title":"\u56db.\u8ba1\u7b97\u673a\u7cfb\u7edf\u591a\u5c42\u6b21\u673a\u6784"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u4e94\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b","text":"\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u4e0d\u65ad\u5730\u4ece\u5b58\u50a8\u5668\u4e2d\u9010\u6761\u53d6\u51fa\u6307\u4ee4\uff0c\u7136\u540e\u9001\u81f3\u63a7\u5236\u5668\uff0c\u7ecf\u5206 \u6790\u540e\u7531 CPU \u53d1\u51fa\u5404\u79cd\u64cd\u4f5c\u547d\u4ee4\uff0c\u6307\u6325\u5404\u90e8\u4ef6\u5b8c\u6210\u5404\u79cd\u64cd\u4f5c\uff0c\u76f4\u81f3\u7a0b\u5e8f\u4e2d\u5168\u90e8\u6307\u4ee4\u6267\u884c\u7ed3\u675f\u3002","title":"\u4e94.\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u5b58\u50a8\u7a0b\u5e8f","text":"\u7a0b\u5e8f\u6267\u884c\u524d\uff0c\u9700\u8981\u5c06\u7a0b\u5e8f\u6240\u542b\u7684\u6307\u4ee4\u548c\u6570\u636e\u9001\u5165\u4e3b\u5b58\uff0c\u4e00\u65e6\u7a0b\u5e8f\u88ab\u542f\u52a8\u6267\u884c\uff0c\u5c31\u65e0\u987b\u64cd\u4f5c\u4eba\u5458\u7684\u5e72\u9884\uff0c\u81ea\u52a8\u9010\u6761\u5b8c\u6210\u6307\u4ee4\u7684\u53d6\u51fa\u548c\u6267\u884c\u4efb\u52a1 \u6bcf\u6761\u6307\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u5305\u62ec\uff1a \u4ece\u4e3b\u5b58\u53d6\u6307\u4ee4\u3001\u5bf9\u6307\u4ee4\u8fdb\u884c\u8bd1\u7801\u3001\u8ba1\u7b97\u4e0b\u6761\u6307\u4ee4\u5730\u5740\u3001\u53d6\u64cd\u4f5c\u6570\u5e76\u6267\u884c\u3001\u5c06\u7ed3\u679c\u9001\u56de\u5b58\u50a8\u5668\u3002 \u7a0b\u5e8f\u6267\u884c\u524d\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u4e8b\u5148\u5b58\u653e\u5728 PC \u4e2d\uff0c\u53d6\u6307\u4ee4\u65f6\uff0c\u5c06 PC \u7684\u5185\u5bb9\u4f5c\u4e3a\u5730\u5740 \u8bbf\u95ee\u4e3b\u5b58\u3002\u5728\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u9700\u8981\u8ba1\u7b97\u4e0b\u6761\u5c06\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740\uff0c\u5e76\u5b58\u50a8\u5728 PC\u3002\u5728 \u6b64\u6761\u6307\u4ee4\u6267\u884c\u5b8c\u540e\uff0c\u518d\u6839\u636e PC \u5b58\u50a8\u7684\u503c\u4ece\u4e3b\u5b58\u4e2d\u53d6\u51fa\u4e0b\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\uff0c\u8ba1\u7b97\u673a\u5de5\u4f5c\u65b9\u5f0f \u5c31\u662f\u5faa\u73af\u5f80\u590d\u7684\u81ea\u52a8\u83b7\u53d6\u5e76\u6267\u884c\u987a\u5e8f\u7684\u6307\u4ee4\u96c6","title":"\u5b58\u50a8\u7a0b\u5e8f"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/#\u8f6f\u4ef6\u7684\u5de5\u4f5c\u65b9\u5f0f","text":"\u4e3a 4 \u4e2a\u9636\u6bb5\uff1a \u9884\u5904\u7406\u9636\u6bb5 \u7f16\u8bd1\u9636\u6bb5 \u6c47\u7f16\u9636\u6bb5 \u94fe\u63a5\u9636\u6bb5 \u8be6\u60c5\u89c1 CompileC - \u8ba1\u7b97\u673a\u5b66\u4e60\u6307\u5357","title":"\u8f6f\u4ef6\u7684\u5de5\u4f5c\u65b9\u5f0f"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AF%BE%E7%A8%8B/","text":"","title":"\u8bfe\u7a0b"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%9F%BA%E6%9C%AC%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/","text":"\u57fa\u672c\u7f51\u7edc\u534f\u8bae #","title":"\u57fa\u672c\u7f51\u7edc\u534f\u8bae"},{"location":"%E5%9F%BA%E6%9C%AC%E5%8A%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%9F%BA%E6%9C%AC%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/#\u57fa\u672c\u7f51\u7edc\u534f\u8bae","text":"","title":"\u57fa\u672c\u7f51\u7edc\u534f\u8bae"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84js%E5%BA%93/","text":"\u597d\u73a9\u7684js\u5e93 # rough.js # https://roughjs.com/ D3.js # https://juejin.cn/post/6982089492991574047","title":"\u597d\u73a9\u7684js\u5e93"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84js%E5%BA%93/#\u597d\u73a9\u7684js\u5e93","text":"","title":"\u597d\u73a9\u7684js\u5e93"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84js%E5%BA%93/#roughjs","text":"https://roughjs.com/","title":"rough.js"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84js%E5%BA%93/#d3js","text":"https://juejin.cn/post/6982089492991574047","title":"D3.js"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%BD%91%E7%AB%99/","text":"\u597d\u73a9\u7684\u7f51\u7ad9 # \u753b\u56fe # https://excalidraw.com/ \u7a0b\u5e8f\u7c7b # https://unbug.github.io/codelf/ \u53d8\u91cf\u8d77\u540d\u7f51\u7ad9","title":"\u597d\u73a9\u7684\u7f51\u7ad9"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%BD%91%E7%AB%99/#\u597d\u73a9\u7684\u7f51\u7ad9","text":"","title":"\u597d\u73a9\u7684\u7f51\u7ad9"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%BD%91%E7%AB%99/#\u753b\u56fe","text":"https://excalidraw.com/","title":"\u753b\u56fe"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%BD%91%E7%AB%99/#\u7a0b\u5e8f\u7c7b","text":"https://unbug.github.io/codelf/ \u53d8\u91cf\u8d77\u540d\u7f51\u7ad9","title":"\u7a0b\u5e8f\u7c7b"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E6%96%87%E6%A1%A3%E6%89%98%E7%AE%A1%E7%BD%91%E7%AB%99/","text":"\u6587\u6863\u6258\u7ba1\u7f51\u7ad9 # github.com https://readthedocs.org/ vercel","title":"\u6587\u6863\u6258\u7ba1\u7f51\u7ad9"},{"location":"%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%B0%8F%E5%B7%A5%E5%85%B7%28%E8%BD%AF%E4%BB%B6%29/%E6%96%87%E6%A1%A3%E6%89%98%E7%AE%A1%E7%BD%91%E7%AB%99/#\u6587\u6863\u6258\u7ba1\u7f51\u7ad9","text":"github.com https://readthedocs.org/ vercel","title":"\u6587\u6863\u6258\u7ba1\u7f51\u7ad9"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/Browser-use/","text":"\u5982\u4f55\u4f7f\u7528\u6d4f\u89c8\u5668 #","title":"\u5982\u4f55\u4f7f\u7528\u6d4f\u89c8\u5668"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/Browser-use/#\u5982\u4f55\u4f7f\u7528\u6d4f\u89c8\u5668","text":"","title":"\u5982\u4f55\u4f7f\u7528\u6d4f\u89c8\u5668"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/","text":"\u642d\u5efa\u81ea\u5df1\u7684\u535a\u5ba2 # \ud83d\ude0a\u4f60\u597d\u5440\uff0c\u6b22\u8fce\u6765\u770b\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5728\u8fd9\u4e2a\u6587\u7ae0\u4e2d\uff0c\u4f60\u5c06\u4f1a\u5b66\u4f1a\u81ea\u5df1\u642d\u5efa\u535a\u5ba2\uff0c\u7136\u540e\u628a\u54b1\u4eec\u5e73\u65f6\u5b66\u4e60\u7684\u7b14\u8bb0\u653e\u5728\u81ea\u5df1\u7684\u535a\u5ba2\u4e2d\uff0c\u4e0d\u4ec5\u5728\u4e4b\u540e\u81ea\u5df1\u590d\u4e60\u7684\u65f6\u5019\u65b9\u4fbf\uff0c\u8fd8\u80fd\u5e2e\u52a9\u5230\u5f88\u591a\u5f88\u591a\u5c0f\u4f19\u4f34\u54e6\uff01 \u9996\u5148\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\uff0c https://meowrain.cn \u5728\u5b66\u4e60\u5b8c\u4e0b\u9762\u7684\u6559\u7a0b\u4e4b\u540e\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u7f51\u7ad9\u7684\u53cb\u94fe\u4fe1\u606f\u6dfb\u52a0\u5728\u6211\u7684\u535a\u5ba2\u53cb\u60c5\u94fe\u63a5\u7533\u8bf7\u9875\u9762\u4e0b Meowrain's Blog-\u53cb\u94fe\u7533\u8bf7 \u51c6\u5907 # \u4e00\u4e2a\u57df\u540d\uff0c\u53ef\u4ee5\u5728\u963f\u91cc\u4e91\u6216\u8005\u817e\u8baf\u4e91\u7b49\u670d\u52a1\u5668\u5382\u5546\u8fdb\u884c\u8d2d\u4e70 \u4e00\u53f0\u670d\u52a1\u5668(\u53ef\u4ee5\u6ca1\u6709) \u4e00\u9897\u4e50\u4e8e\u5206\u4eab\u7684\u5fc3\u2764\ufe0f \u9759\u6001\u535a\u5ba2\u548c\u52a8\u6001\u535a\u5ba2 # \u9759\u6001\u535a\u5ba2\u548c\u52a8\u6001\u535a\u5ba2\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u533a\u522b: 1. \u751f\u6210\u5185\u5bb9\u65b9\u5f0f: \u9759\u6001\u535a\u5ba2:\u5185\u5bb9\u662f\u7531\u4f5c\u8005\u9884\u5148\u5199\u597d\u7684,\u53d1\u5e03\u65f6\u76f4\u63a5\u751f\u6210HTML\u9875\u9762\u3002\u5185\u5bb9\u53d1\u8868\u540ebasic\u4e0d\u518d\u53d8\u5316\u3002 \u52a8\u6001\u535a\u5ba2:\u5185\u5bb9\u662f\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d,\u53d1\u5e03\u65f6\u52a8\u6001\u751f\u6210HTML\u9875\u9762\u3002\u5185\u5bb9\u53ef\u4ee5\u5b9e\u65f6\u66f4\u65b0,\u8bc4\u8bba\u4e5f\u53ef\u4ee5\u5b9e\u65f6\u663e\u793a\u3002 2. \u4e92\u52a8\u6027: \u9759\u6001\u535a\u5ba2:\u7531\u4e8e\u5185\u5bb9\u662f\u9884\u5148\u751f\u6210\u7684,\u6240\u4ee5\u57fa\u672c\u6ca1\u6709\u4e92\u52a8\u6027\u548c\u8bc4\u8bba\u529f\u80fd\u3002 \u52a8\u6001\u535a\u5ba2:\u5185\u5bb9\u53ef\u4ee5\u5b9e\u65f6\u66f4\u65b0\u548c\u8bc4\u8bba,\u8bfb\u8005\u53ef\u4ee5\u8bc4\u8bba\u548c\u4ea4\u6d41,\u6709\u8f83\u5f3a\u7684\u4e92\u52a8\u6027\u3002 3. \u6280\u672f\u5b9e\u73b0: \u9759\u6001\u535a\u5ba2:\u4e00\u822c\u4f7f\u7528\u751f\u6210\u9759\u6001\u9875\u9762\u7684\u5de5\u5177\u751f\u6210HTML\u9875\u9762,\u6bd4\u8f83\u7b80\u5355\u3002 \u52a8\u6001\u535a\u5ba2:\u9700\u8981Web\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u5e94\u7528\u7a0b\u5e8f\u7b49\u6280\u672f\u5b9e\u73b0,\u6bd4\u8f83\u590d\u6742\u3002 4. \u9875\u9762\u52a0\u8f7d\u901f\u5ea6: \u9759\u6001\u535a\u5ba2:\u9875\u9762\u662f\u9884\u5148\u751f\u6210\u7684HTML,\u52a0\u8f7d\u901f\u5ea6\u6bd4\u8f83\u5feb\u3002 \u52a8\u6001\u535a\u5ba2:\u9875\u9762\u9700\u8981\u5b9e\u65f6\u52a8\u6001\u751f\u6210,\u52a0\u8f7d\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\u3002 5. \u7ef4\u62a4\u96be\u6613\u5ea6: \u9759\u6001\u535a\u5ba2:\u6bd4\u8f83\u7b80\u5355,\u4e3b\u8981\u662f\u66f4\u65b0\u5185\u5bb9\u548c\u91cd\u65b0\u751f\u6210HTML\u9875\u9762\u3002 \u52a8\u6001\u535a\u5ba2:\u8f83\u590d\u6742,\u9700\u8981\u7ef4\u62a4Web\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u5e94\u7528\u7a0b\u5e8f\u7b49\u3002 \u603b\u4e4b,\u9759\u6001\u535a\u5ba2\u6bd4\u8f83\u7b80\u5355,\u52a0\u8f7d\u901f\u5ea6\u5feb,\u4f46\u4e92\u52a8\u6027\u5dee;\u52a8\u6001\u535a\u5ba2\u6709\u8f83\u5f3a\u7684\u4e92\u52a8\u6027,\u4f46\u6280\u672f\u590d\u6742\u5ea6\u9ad8,\u52a0\u8f7d\u901f\u5ea6\u76f8\u5bf9\u6162\u3002\u4e24\u4e2a\u90fd\u6709\u5404\u81ea\u7684\u4f18\u7f3a\u70b9,\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u9009\u62e9 HEXO \u9759\u6001\u535a\u5ba2 # \ud83d\ude0a\u6ca1\u6709\u4e70\u670d\u52a1\u5668\u7684\u540c\u5b66\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528hexo\uff0c\u5b83\u7684\u4e3b\u9898\u548c\u63d2\u4ef6\u5341\u5206\u4e30\u5bcc \u6587\u6863 # hexo\u5b98\u65b9\u6587\u6863 \u89c6\u9891 # hexo \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2\u8d85\u7b80\u5355\u6548\u679c\u8d85\u597d\u7684\u4e2a\u4eba\u7f51\u7ad9\u535a\u5ba2\u642d\u5efa\u5bf9\u5c0f\u767d\u5f88\u53cb\u597d Halo\u52a8\u6001\u535a\u5ba2 # \ud83d\ude0a\u63a8\u8350\u6709\u670d\u52a1\u5668\u7684\u540c\u5b66\u4f7f\u7528 \u6587\u6863 # halo\u5b98\u65b9\u6587\u6863 \u89c6\u9891 # 2023\u5e74halo\u535a\u5ba22.0\u642d\u5efa+\u4e3b\u9898+\u63d2\u4ef6 Typecho\u52a8\u6001\u535a\u5ba2 # https://www.bilibili.com/video/BV1EY411R7Jt/?spm_id_from=333.337.search-card.all.click&vd_source=f7d0ce024b059d57a0319d78217fa104","title":"\u642d\u5efa\u81ea\u5df1\u7684\u535a\u5ba2"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u642d\u5efa\u81ea\u5df1\u7684\u535a\u5ba2","text":"\ud83d\ude0a\u4f60\u597d\u5440\uff0c\u6b22\u8fce\u6765\u770b\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5728\u8fd9\u4e2a\u6587\u7ae0\u4e2d\uff0c\u4f60\u5c06\u4f1a\u5b66\u4f1a\u81ea\u5df1\u642d\u5efa\u535a\u5ba2\uff0c\u7136\u540e\u628a\u54b1\u4eec\u5e73\u65f6\u5b66\u4e60\u7684\u7b14\u8bb0\u653e\u5728\u81ea\u5df1\u7684\u535a\u5ba2\u4e2d\uff0c\u4e0d\u4ec5\u5728\u4e4b\u540e\u81ea\u5df1\u590d\u4e60\u7684\u65f6\u5019\u65b9\u4fbf\uff0c\u8fd8\u80fd\u5e2e\u52a9\u5230\u5f88\u591a\u5f88\u591a\u5c0f\u4f19\u4f34\u54e6\uff01 \u9996\u5148\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2\uff0c https://meowrain.cn \u5728\u5b66\u4e60\u5b8c\u4e0b\u9762\u7684\u6559\u7a0b\u4e4b\u540e\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u628a\u81ea\u5df1\u7684\u7f51\u7ad9\u7684\u53cb\u94fe\u4fe1\u606f\u6dfb\u52a0\u5728\u6211\u7684\u535a\u5ba2\u53cb\u60c5\u94fe\u63a5\u7533\u8bf7\u9875\u9762\u4e0b Meowrain's Blog-\u53cb\u94fe\u7533\u8bf7","title":"\u642d\u5efa\u81ea\u5df1\u7684\u535a\u5ba2"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u51c6\u5907","text":"\u4e00\u4e2a\u57df\u540d\uff0c\u53ef\u4ee5\u5728\u963f\u91cc\u4e91\u6216\u8005\u817e\u8baf\u4e91\u7b49\u670d\u52a1\u5668\u5382\u5546\u8fdb\u884c\u8d2d\u4e70 \u4e00\u53f0\u670d\u52a1\u5668(\u53ef\u4ee5\u6ca1\u6709) \u4e00\u9897\u4e50\u4e8e\u5206\u4eab\u7684\u5fc3\u2764\ufe0f","title":"\u51c6\u5907"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u9759\u6001\u535a\u5ba2\u548c\u52a8\u6001\u535a\u5ba2","text":"\u9759\u6001\u535a\u5ba2\u548c\u52a8\u6001\u535a\u5ba2\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u533a\u522b: 1. \u751f\u6210\u5185\u5bb9\u65b9\u5f0f: \u9759\u6001\u535a\u5ba2:\u5185\u5bb9\u662f\u7531\u4f5c\u8005\u9884\u5148\u5199\u597d\u7684,\u53d1\u5e03\u65f6\u76f4\u63a5\u751f\u6210HTML\u9875\u9762\u3002\u5185\u5bb9\u53d1\u8868\u540ebasic\u4e0d\u518d\u53d8\u5316\u3002 \u52a8\u6001\u535a\u5ba2:\u5185\u5bb9\u662f\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d,\u53d1\u5e03\u65f6\u52a8\u6001\u751f\u6210HTML\u9875\u9762\u3002\u5185\u5bb9\u53ef\u4ee5\u5b9e\u65f6\u66f4\u65b0,\u8bc4\u8bba\u4e5f\u53ef\u4ee5\u5b9e\u65f6\u663e\u793a\u3002 2. \u4e92\u52a8\u6027: \u9759\u6001\u535a\u5ba2:\u7531\u4e8e\u5185\u5bb9\u662f\u9884\u5148\u751f\u6210\u7684,\u6240\u4ee5\u57fa\u672c\u6ca1\u6709\u4e92\u52a8\u6027\u548c\u8bc4\u8bba\u529f\u80fd\u3002 \u52a8\u6001\u535a\u5ba2:\u5185\u5bb9\u53ef\u4ee5\u5b9e\u65f6\u66f4\u65b0\u548c\u8bc4\u8bba,\u8bfb\u8005\u53ef\u4ee5\u8bc4\u8bba\u548c\u4ea4\u6d41,\u6709\u8f83\u5f3a\u7684\u4e92\u52a8\u6027\u3002 3. \u6280\u672f\u5b9e\u73b0: \u9759\u6001\u535a\u5ba2:\u4e00\u822c\u4f7f\u7528\u751f\u6210\u9759\u6001\u9875\u9762\u7684\u5de5\u5177\u751f\u6210HTML\u9875\u9762,\u6bd4\u8f83\u7b80\u5355\u3002 \u52a8\u6001\u535a\u5ba2:\u9700\u8981Web\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u5e94\u7528\u7a0b\u5e8f\u7b49\u6280\u672f\u5b9e\u73b0,\u6bd4\u8f83\u590d\u6742\u3002 4. \u9875\u9762\u52a0\u8f7d\u901f\u5ea6: \u9759\u6001\u535a\u5ba2:\u9875\u9762\u662f\u9884\u5148\u751f\u6210\u7684HTML,\u52a0\u8f7d\u901f\u5ea6\u6bd4\u8f83\u5feb\u3002 \u52a8\u6001\u535a\u5ba2:\u9875\u9762\u9700\u8981\u5b9e\u65f6\u52a8\u6001\u751f\u6210,\u52a0\u8f7d\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\u3002 5. \u7ef4\u62a4\u96be\u6613\u5ea6: \u9759\u6001\u535a\u5ba2:\u6bd4\u8f83\u7b80\u5355,\u4e3b\u8981\u662f\u66f4\u65b0\u5185\u5bb9\u548c\u91cd\u65b0\u751f\u6210HTML\u9875\u9762\u3002 \u52a8\u6001\u535a\u5ba2:\u8f83\u590d\u6742,\u9700\u8981\u7ef4\u62a4Web\u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u5e94\u7528\u7a0b\u5e8f\u7b49\u3002 \u603b\u4e4b,\u9759\u6001\u535a\u5ba2\u6bd4\u8f83\u7b80\u5355,\u52a0\u8f7d\u901f\u5ea6\u5feb,\u4f46\u4e92\u52a8\u6027\u5dee;\u52a8\u6001\u535a\u5ba2\u6709\u8f83\u5f3a\u7684\u4e92\u52a8\u6027,\u4f46\u6280\u672f\u590d\u6742\u5ea6\u9ad8,\u52a0\u8f7d\u901f\u5ea6\u76f8\u5bf9\u6162\u3002\u4e24\u4e2a\u90fd\u6709\u5404\u81ea\u7684\u4f18\u7f3a\u70b9,\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u9009\u62e9","title":"\u9759\u6001\u535a\u5ba2\u548c\u52a8\u6001\u535a\u5ba2"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#hexo-\u9759\u6001\u535a\u5ba2","text":"\ud83d\ude0a\u6ca1\u6709\u4e70\u670d\u52a1\u5668\u7684\u540c\u5b66\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528hexo\uff0c\u5b83\u7684\u4e3b\u9898\u548c\u63d2\u4ef6\u5341\u5206\u4e30\u5bcc","title":"HEXO \u9759\u6001\u535a\u5ba2"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u6587\u6863","text":"hexo\u5b98\u65b9\u6587\u6863","title":"\u6587\u6863"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u89c6\u9891","text":"hexo \u642d\u5efa\u4e2a\u4eba\u535a\u5ba2\u8d85\u7b80\u5355\u6548\u679c\u8d85\u597d\u7684\u4e2a\u4eba\u7f51\u7ad9\u535a\u5ba2\u642d\u5efa\u5bf9\u5c0f\u767d\u5f88\u53cb\u597d","title":"\u89c6\u9891"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#halo\u52a8\u6001\u535a\u5ba2","text":"\ud83d\ude0a\u63a8\u8350\u6709\u670d\u52a1\u5668\u7684\u540c\u5b66\u4f7f\u7528","title":"Halo\u52a8\u6001\u535a\u5ba2"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u6587\u6863_1","text":"halo\u5b98\u65b9\u6587\u6863","title":"\u6587\u6863"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#\u89c6\u9891_1","text":"2023\u5e74halo\u535a\u5ba22.0\u642d\u5efa+\u4e3b\u9898+\u63d2\u4ef6","title":"\u89c6\u9891"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/blog-create/#typecho\u52a8\u6001\u535a\u5ba2","text":"https://www.bilibili.com/video/BV1EY411R7Jt/?spm_id_from=333.337.search-card.all.click&vd_source=f7d0ce024b059d57a0319d78217fa104","title":"Typecho\u52a8\u6001\u535a\u5ba2"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/calculate_c_excute_time/","text":"\u8ba1\u7b97c/c++\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4 # C\u8bed\u8a00\u7a0b\u5e8f # #include <stdio.h> #include <time.h> int main () { clock_t start_time , end_time ; double cpu_time_used ; start_time = clock (); // \u5728\u8fd9\u91cc\u6267\u884c\u4f60\u7684\u7a0b\u5e8f\u903b\u8f91 // ... end_time = clock (); cpu_time_used = (( double ) ( end_time - start_time )) / CLOCKS_PER_SEC ; printf ( \"\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4: %f \u79d2 \\n \" , cpu_time_used ); return 0 ; } C++\u7a0b\u5e8f # #include <iostream> #include <chrono> int main () { // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9 auto start_time = std :: chrono :: high_resolution_clock :: now (); // \u5728\u8fd9\u91cc\u6267\u884c\u4f60\u7684\u7a0b\u5e8f\u903b\u8f91 // ... // \u83b7\u53d6\u7ed3\u675f\u65f6\u95f4\u70b9 auto end_time = std :: chrono :: high_resolution_clock :: now (); // \u8ba1\u7b97\u65f6\u95f4\u5dee auto duration = std :: chrono :: duration_cast < std :: chrono :: microseconds > ( end_time - start_time ); // \u8f93\u51fa\u8fd0\u884c\u65f6\u95f4 std :: cout << \"\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4: \" << duration . count () / 1e6 << \" \u79d2\" << std :: endl ; return 0 ; } Linux time\u547d\u4ee4 # \u4f7f\u7528time\u547d\u4ee4 time ./your_program \u4f8b\u5982\uff0c\u7f16\u8bd1\u4e86\u4e00\u4e2ac++\u7a0b\u5e8f\uff0c\u53ebmain \u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u6267\u884c time ./main \u6765\u5f97\u5230\u7a0b\u5e8f\u8fd0\u884c\u65f6\u957f","title":"\u8ba1\u7b97c/c++\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/calculate_c_excute_time/#\u8ba1\u7b97cc\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4","text":"","title":"\u8ba1\u7b97c/c++\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/calculate_c_excute_time/#c\u8bed\u8a00\u7a0b\u5e8f","text":"#include <stdio.h> #include <time.h> int main () { clock_t start_time , end_time ; double cpu_time_used ; start_time = clock (); // \u5728\u8fd9\u91cc\u6267\u884c\u4f60\u7684\u7a0b\u5e8f\u903b\u8f91 // ... end_time = clock (); cpu_time_used = (( double ) ( end_time - start_time )) / CLOCKS_PER_SEC ; printf ( \"\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4: %f \u79d2 \\n \" , cpu_time_used ); return 0 ; }","title":"C\u8bed\u8a00\u7a0b\u5e8f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/calculate_c_excute_time/#c\u7a0b\u5e8f","text":"#include <iostream> #include <chrono> int main () { // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9 auto start_time = std :: chrono :: high_resolution_clock :: now (); // \u5728\u8fd9\u91cc\u6267\u884c\u4f60\u7684\u7a0b\u5e8f\u903b\u8f91 // ... // \u83b7\u53d6\u7ed3\u675f\u65f6\u95f4\u70b9 auto end_time = std :: chrono :: high_resolution_clock :: now (); // \u8ba1\u7b97\u65f6\u95f4\u5dee auto duration = std :: chrono :: duration_cast < std :: chrono :: microseconds > ( end_time - start_time ); // \u8f93\u51fa\u8fd0\u884c\u65f6\u95f4 std :: cout << \"\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4: \" << duration . count () / 1e6 << \" \u79d2\" << std :: endl ; return 0 ; }","title":"C++\u7a0b\u5e8f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/calculate_c_excute_time/#linux-time\u547d\u4ee4","text":"\u4f7f\u7528time\u547d\u4ee4 time ./your_program \u4f8b\u5982\uff0c\u7f16\u8bd1\u4e86\u4e00\u4e2ac++\u7a0b\u5e8f\uff0c\u53ebmain \u90a3\u4e48\u6211\u5c31\u53ef\u4ee5\u6267\u884c time ./main \u6765\u5f97\u5230\u7a0b\u5e8f\u8fd0\u884c\u65f6\u957f","title":"Linux time\u547d\u4ee4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-env-config/","text":"Git\u914d\u7f6e\u4ee3\u7406 # \u9996\u5148\u914d\u7f6ehttp\u548chttps\u4ee3\u7406 git config --global http.proxy 127.0.0.1:7890 git config --global https.proxy 127.0.0.1:7890 \u7136\u540e\u662fssh\u4ee3\u7406 \u5230\u4f60\u7684User\u76ee\u5f55\u4e0b Host github.com HostName ssh.github.com User git Port 443 ProxyCommand connect -S 127.0.0.1:7890 %h %p \u7136\u540e\u628a\u8fd9\u6bb5\u7c98\u8d34\u8fdb\u53bb\uff0c\u8fd9\u6837\u4e0a\u4f20\u4e0b\u8f7d\u4ed3\u5e93\u80af\u5b9a\u5c31\u6ca1\u95ee\u9898\u4e86 \u4e0a\u9762\u7684\u7aef\u53e3\u4e0d\u662fv2\u7684\u662fclash\u7684\uff0cv2\u7684\u81ea\u5df1\u6539\u4e00\u4e0b","title":"Git\u914d\u7f6e\u4ee3\u7406"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-env-config/#git\u914d\u7f6e\u4ee3\u7406","text":"\u9996\u5148\u914d\u7f6ehttp\u548chttps\u4ee3\u7406 git config --global http.proxy 127.0.0.1:7890 git config --global https.proxy 127.0.0.1:7890 \u7136\u540e\u662fssh\u4ee3\u7406 \u5230\u4f60\u7684User\u76ee\u5f55\u4e0b Host github.com HostName ssh.github.com User git Port 443 ProxyCommand connect -S 127.0.0.1:7890 %h %p \u7136\u540e\u628a\u8fd9\u6bb5\u7c98\u8d34\u8fdb\u53bb\uff0c\u8fd9\u6837\u4e0a\u4f20\u4e0b\u8f7d\u4ed3\u5e93\u80af\u5b9a\u5c31\u6ca1\u95ee\u9898\u4e86 \u4e0a\u9762\u7684\u7aef\u53e3\u4e0d\u662fv2\u7684\u662fclash\u7684\uff0cv2\u7684\u81ea\u5df1\u6539\u4e00\u4e0b","title":"Git\u914d\u7f6e\u4ee3\u7406"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/","text":"\u5b66\u4e60 GIT # Git\u548cGithub\u7684\u533a\u522b # Git\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7528\u4e8e\u7ba1\u7406\u4ee3\u7801\u6216\u6587\u672c\u6587\u4ef6\u7684\u7248\u672c\u63a7\u5236\u3002\u4f7f\u7528Git\uff0c\u60a8\u53ef\u4ee5\u8ddf\u8e2a\u60a8\u6216\u60a8\u7684\u56e2\u961f\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6240\u505a\u7684\u66f4\u6539\uff0c\u5e76\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u56de\u6eaf\u5230\u4ee5\u524d\u7684\u7248\u672c\u3002Git\u8fd8\u5141\u8bb8\u591a\u4e2a\u5f00\u53d1\u8005\u534f\u540c\u5de5\u4f5c\uff0c\u5e76\u5728\u540c\u4e00\u65f6\u95f4\u8fdb\u884c\u66f4\u6539\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u66f4\u6539\u5408\u5e76\u5230\u4e00\u4e2a\u4e3b\u5206\u652f\u4e2d\u3002 Github\u662f\u4e00\u4e2a\u57fa\u4e8eWeb\u7684Git\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5171\u4eab\u548c\u534f\u4f5c\u5f00\u53d1\u9879\u76ee\u3002Github\u7684\u57fa\u672c\u529f\u80fd\u5305\u62ec\u4ee3\u7801\u6258\u7ba1\u3001\u7248\u672c\u63a7\u5236\u3001\u95ee\u9898\u8ddf\u8e2a\u548c\u534f\u4f5c\u5de5\u5177\u7b49\u3002Github\u4e0a\u7684\u5f00\u6e90\u9879\u76ee\u975e\u5e38\u591a\uff0c\u8fd9\u4e9b\u9879\u76ee\u90fd\u662f\u7531\u5f00\u53d1\u8005\u5171\u4eab\u7684\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u67e5\u770b\u5e76\u53c2\u4e0e\u8fdb\u6765\u3002\u6b64\u5916\uff0cGithub\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u96c6\u6210\u3001\u6d4b\u8bd5\u3001\u6784\u5efa\u548c\u90e8\u7f72\u8f6f\u4ef6\u7684\u5de5\u5177\u548c\u670d\u52a1\uff0c\u8fd9\u4e9b\u5de5\u5177\u548c\u670d\u52a1\u53ef\u4ee5\u52a0\u5feb\u8f6f\u4ef6\u5f00\u53d1\u548c\u4ea4\u4ed8\u8fc7\u7a0b\u3002 \u4f7f\u7528\u56fe\u5f62\u5316 Git # GitKraken GitKraken \u662f\u4e00\u6b3e\u70ab\u9177\u4e14\u53cb\u597d\u7684 Git \u5ba2\u6237\u7aef\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002 Sourcetree Sourcetree \u662f\u4e00\u6b3e\u514d\u8d39\u7684 Git \u548c Mercurial \u5ba2\u6237\u7aef\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002 TortoiseGit TortoiseGit \u662f\u4e00\u6b3e\u514d\u8d39\u7684 Git \u5ba2\u6237\u7aef\uff0c\u53ea\u652f\u6301 Windows \u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\u548c Windows \u8d44\u6e90\u7ba1\u7406\u5668\u7684\u96c6\u6210\uff0c\u9002\u5408\u521d\u5b66\u8005\u4f7f\u7528\u3002 GitHub Desktop GitHub Desktop \u662f\u4e00\u6b3e\u514d\u8d39\u7684 Git \u5ba2\u6237\u7aef\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\u548c GitHub \u5e73\u53f0\u7684\u96c6\u6210\uff0c\u9002\u5408 GitHub \u7528\u6237\u4f7f\u7528\u3002 Git GUI\uff08\u5b89\u88c5 Git \u540e\u81ea\u5e26\uff09 Git GUI \u662f Git \u81ea\u5e26\u7684\u53ef\u89c6\u5316\u64cd\u4f5c\u754c\u9762\uff0c\u53ea\u652f\u6301\u547d\u4ee4\u884c\u65b9\u5f0f\u4f7f\u7528\uff0c\u9002\u5408\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002 \u5b66\u4e60 Git \u547d\u4ee4 # Git \u6587\u6863\uff1a - \u5b98\u65b9\u6587\u6863: https://git-scm.com/docs - \u83dc\u9e1f\u6559\u7a0b\uff1a https:/www.runoob.com/git/git-tutorial.html - \u7334\u5b50\u90fd\u80fd\u61c2\u7684 Git \u5165\u95e8\uff1a https:/backlog.com/git-tutorial/cn/ - \u5ed6\u96ea\u5cf0\u7684\u6587\u6863\uff1a https:/www.liaoxuefeng.com/wiki/896043488029600/ - Git\u547d\u4ee4\u5927\u5168\uff1a https:l/backlog.com/git-tutorial/,cn/reference/ \u8fd9\u91cc\u5217\u51fa\u4e86\u4e00\u4e9b\u4f18\u79c0\u7684\u5728\u7ebf Git \u6559\u7a0b\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002\u5176\u4e2d\uff0c\u7334\u5b50\u90fd\u80fd\u61c2\u7684 Git \u5165\u95e8\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5165\u95e8\u6559\u7a0b\uff0c\u5b83\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u5b9e\u4f8b\u548c\u52a8\u753b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u4e0a\u624b Git\u3002\u83dc\u9e1f\u6559\u7a0b\u548c\u5ed6\u96ea\u5cf0\u7684\u6559\u7a0b\u4e5f\u662f\u975e\u5e38\u4f18\u79c0\u7684\u6559\u7a0b\uff0c\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u8bb2\u89e3\u548c\u5b9e\u4f8b\uff0c\u9002\u5408\u6df1\u5165\u5b66\u4e60 Git\u3002Git \u7b80\u660e\u6307\u5357\u5219\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6559\u7a0b\uff0c\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u770b\u5b8c\uff0c\u5e76\u7528\u6765\u590d\u4e60 Git\u3002\u65e0\u8bba\u60a8\u662f\u521d\u5b66\u8005\u8fd8\u662f\u9ad8\u7ea7\u7528\u6237\uff0c\u8fd9\u4e9b\u5728\u7ebf Git \u6559\u7a0b\u90fd\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5b66\u4e60 Git \u7684\u57fa\u672c\u77e5\u8bc6\u548c\u6280\u80fd\u3002 \u6253\u4e0d\u5f00 github ? # \u56e0\u4e3a\u4e00\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0cgithub \u5728\u56fd\u5185\u7ecf\u5e38\u4e0a\u4e0d\u53bb\uff0c\u5c31\u8fde clone \u4ee3\u7801\u90fd\u6709\u65f6\u5019\u4f1a\u56e0\u4e3a\u7f51\u7edc\u539f\u56e0\u53d1\u751f\u9519\u8bef \u70ed\u70b9\u6cd5 # \u5927\u5bb6\u53ef\u4ee5\u6253\u5f00\u624b\u673a\u70ed\u70b9\uff0c\u7528\u7535\u8111\u8fde\u63a5\u624b\u673a\u70ed\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019 github \u5927\u591a\u6570\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u53bb\u4e86\uff0c\u5982\u679c\u4f7f\u7528 wifi \u5c31\u4f1a\u51fa\u73b0\u4e00\u4f1a\u513f\u80fd\u7528\uff0c\u4e00\u4f1a\u513f\u4e0d\u80fd\u7528\u7684\u60c5\u51b5 \u66f4\u6362 Hosts # \u4ec0\u4e48\u662f Hosts? Hosts \u6587\u4ef6\u662f\u4e00\u4e2a\u6ca1\u6709\u6269\u5c55\u540d\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\uff0c\u4ee5\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u4e86\u4e3b\u673a\u540d\u548c IP \u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb[1]\u3002Hosts \u53c8\u79f0 host table\uff0c\u8bd1\u4e3a\u201c\u4e3b\u673a\u8868\u201d\u3002\u73b0\u4ee3\u7cfb\u7edf\u4e2d\uff0c\u867d\u7136 DNS \u53d6\u4ee3\u4e86\u4e3b\u673a\u8868\uff0c\u4f46\u4e3b\u673a\u8868\u7684\u5e94\u7528\u4f9d\u65e7\u5f88\u5e7f[1]\u3002\u548c DNS \u4e0d\u540c\u7684\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5bf9 Hosts \u6587\u4ef6\u8fdb\u884c\u63a7\u5236\u3002 \u90a3\u4e48\u600e\u4e48\u66f4\u6362 hosts \u5462\uff1f \u5b89\u88c5 SwitchHosts \u5927\u5bb6\u770b\u4e0a\u9762\u7684\u8fd9\u4e2a\u6587\u6863\u770b\u5b8c\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\uff0c\u50bb\u74dc\u5f0f\u5b89\u88c5\uff0c\u6211\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u4e86\u3002\u6211\u4e3b\u8981\u8bf4\u4e00\u4e0b\u914d\u7f6e\u8fd9\u4e2a\u4e1c\u897f \u914d\u7f6e SwitchHosts # \u8fd9\u662f\u66f4\u65b0 url: https://code.meowrain.cn/https://github.com/521xueweihan/GitHub520/blob/main/hosts \u76f4\u63a5\u586b\u8fdb\u53bb\u786e\u5b9a\u5c31\u884c\u4e86 \u7136\u540e\u5237\u65b0\u672c\u5730 dns \u7f13\u5b58\u3002 \u6253\u5f00\u63a7\u5236\u53f0\uff0c Windows + R \uff0c\u8f93\u5165 powershell \u56de\u8f66\u6253\u5f00\uff0c\u8f93\u5165\u547d\u4ee4 ipconfig /flushdns \u5f00\u59cb\u4f7f\u7528 Github # \u5728\u5f00\u59cb\u4f7f\u7528 github \u4e4b\u524d\uff0c\u4f60\u5e94\u5f53\u4e86\u89e3\u5e76\u5b66\u4e60\u8fc7 Git Github \u5b98\u65b9\u6587\u6863\uff1a https://docs.github.com/zh/get-started/quickstart/set-up-git OSChina \u5f00\u6e90\u6307\u5317: https://oschina.gitee.io/opensource-guide/ \u770b\u4e0a\u9762\u7684\u8fd9\u4e2a\u5c31\u884c\u4e86\uff0c\u76f8\u4fe1\u4f60\u4f1a\u53d7\u76ca\u532a\u6d45 \u53c2\u4e0e\u5f00\u6e90\u9879\u76ee # \u60f3\u5728 github \u53c2\u4e0e\u522b\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u6216\u8005\u53c2\u4e0e\u8fd9\u4e2a\u6587\u6863\uff1f \u6765\u770b\u4e0b\u9762\u7684\u6587\u7ae0\uff1a https://github.com/firstcontributions/first-contributions/blob/main/translations/README.zh-cn.md \u60f3\u8981\u4e66\u5199\u9177\u9177\u7684github\u4e2a\u4eba\u4e3b\u9875\uff1f # 1.\u5efa\u4ed3 # \u5728 GitHub \u4e2d\u521b\u5efa\u4e00\u4e2a\u4e0e GitHub ID \u540c\u540d\u7684\u4ed3\u5e93\uff0c\u4f8b\u5982\u6211\u7684 GitHub ID \u4e3a lcekold\uff0c\u56e0\u6b64\u521b\u5efa\u7684\u4ed3\u5e93\u540d\u4e5f\u4e3a lcekold\u3002\uff1a \u7531\u4e8e\u6211\u5df2\u521b\u5efa\u4e86\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u6240\u4ee5 GitHub \u4f1a\u5728\u4e0b\u65b9\u63d0\u793a\u6211\u5df2\u7ecf\u521b\u5efa\u8fc7\u540c\u540d\u7684\u4ed3\u5e93\u4e86\u3002 \u521b\u5efa\u65f6\u8bb0\u5f97\u52fe\u9009\u4ece\u4e0b\u65b9\u7684\u300cAdd a README file\u300d\uff0c\u5728\u4ed3\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e2a README \u7684 Markdown \u6587\u4ef6\uff0c\u7b49\u4f1a\u6211\u4eec\u5c31\u662f\u8981\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u521b\u5efa\u6211\u4eec\u6700\u7ec8\u60f3\u8981\u7684\u4e2a\u4eba\u4e3b\u9875\u6837\u5f0f\u3002 \u521b\u5efa\u4ed3\u5e93\u4e4b\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u4e2a\u4eba\u5934\u50cf\uff0c\u9009\u62e9\u300cYour profile\u300d\u56de\u5230\u4f60\u7684 GitHub \u4e3b\u9875\uff0c\u4f60\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230 Hi there \u7684\u6587\u672c\u5185\u5bb9\u3002 \u70b9\u51fb\u53f3\u4fa7\u7684\u7f16\u8f91\u6309\u94ae\uff0c\u8fdb\u5165 REMDME \u6587\u4ef6\u7684\u7f16\u8f91\u72b6\u6001\u3002 \u8fdb\u5165\u7f16\u8f91\u72b6\u6001\uff0c\u8fd9\u4e2a\u6587\u6863\u662f\u4f7f\u7528 Markdown \u8bed\u6cd5\u6765\u7f16\u8f91\u7684\uff0c\u5982\u679c\u4f60\u4e4b\u524d\u7528\u8fc7 Markdown \u7684\u8bdd\uff0c\u7f16\u8f91\u8d77\u6765\u5e94\u8be5\u975e\u5e38\u7b80\u5355\uff0c\u5982\u679c\u4f60\u6ca1\u63a5\u89e6\u8fc7\uff0c\u60f3\u5b66\u7684\u8bdd\u5341\u5206\u949f\u4e5f\u53ef\u4ee5\u5165\u95e8\u3002 \u53ea\u9700\u8981\u8bb0\u4f4f\u4e00\u70b9\uff0c\u4e0a\u4e00\u884c\u7ed3\u675f\u65f6\uff0c\u8981\u5728\u6700\u672b\u5c3e\u52a0\u591a\u81f3\u5c11\u4e24\u4e2a\u7a7a\u683c\uff0c\u624d\u80fd\u5b9e\u73b0\u6362\u884c\uff0c\u5426\u5219\u672c\u6765\u60f3\u5206\u884c\u7684\u4e24\u884c\u5185\u5bb9\u4f1a\u8fde\u5728\u4e00\u8d77\u3002 \u7f16\u8f91\u7684\u8fc7\u7a0b\u4e2d\uff0c\u70b9\u51fb\u4e0a\u65b9\u7684\u300cPreview changes\u300d\u9009\u9879\u5361\uff0c\u67e5\u770b Markdown \u6e32\u67d3\u540e\u7684\u6548\u679c \u4e0a\u9762\u7684\u6587\u7ae0\u8be6\u7ec6\u8bf4\u660e\u4e86\u5982\u4f55 pull requests \u5982\u679c\u6709\u5389\u5bb3\u7684\u5b66\u5f1f\u5b66\u59b9\uff0c\u6b22\u8fce\u5927\u5bb6\u6765\u8865\u5145\u8fd9\u4e2a\u6587\u6863\uff01","title":"\u5b66\u4e60 GIT"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u5b66\u4e60-git","text":"","title":"\u5b66\u4e60 GIT"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#git\u548cgithub\u7684\u533a\u522b","text":"Git\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7528\u4e8e\u7ba1\u7406\u4ee3\u7801\u6216\u6587\u672c\u6587\u4ef6\u7684\u7248\u672c\u63a7\u5236\u3002\u4f7f\u7528Git\uff0c\u60a8\u53ef\u4ee5\u8ddf\u8e2a\u60a8\u6216\u60a8\u7684\u56e2\u961f\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6240\u505a\u7684\u66f4\u6539\uff0c\u5e76\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u56de\u6eaf\u5230\u4ee5\u524d\u7684\u7248\u672c\u3002Git\u8fd8\u5141\u8bb8\u591a\u4e2a\u5f00\u53d1\u8005\u534f\u540c\u5de5\u4f5c\uff0c\u5e76\u5728\u540c\u4e00\u65f6\u95f4\u8fdb\u884c\u66f4\u6539\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u66f4\u6539\u5408\u5e76\u5230\u4e00\u4e2a\u4e3b\u5206\u652f\u4e2d\u3002 Github\u662f\u4e00\u4e2a\u57fa\u4e8eWeb\u7684Git\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5171\u4eab\u548c\u534f\u4f5c\u5f00\u53d1\u9879\u76ee\u3002Github\u7684\u57fa\u672c\u529f\u80fd\u5305\u62ec\u4ee3\u7801\u6258\u7ba1\u3001\u7248\u672c\u63a7\u5236\u3001\u95ee\u9898\u8ddf\u8e2a\u548c\u534f\u4f5c\u5de5\u5177\u7b49\u3002Github\u4e0a\u7684\u5f00\u6e90\u9879\u76ee\u975e\u5e38\u591a\uff0c\u8fd9\u4e9b\u9879\u76ee\u90fd\u662f\u7531\u5f00\u53d1\u8005\u5171\u4eab\u7684\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u67e5\u770b\u5e76\u53c2\u4e0e\u8fdb\u6765\u3002\u6b64\u5916\uff0cGithub\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u7528\u4e8e\u96c6\u6210\u3001\u6d4b\u8bd5\u3001\u6784\u5efa\u548c\u90e8\u7f72\u8f6f\u4ef6\u7684\u5de5\u5177\u548c\u670d\u52a1\uff0c\u8fd9\u4e9b\u5de5\u5177\u548c\u670d\u52a1\u53ef\u4ee5\u52a0\u5feb\u8f6f\u4ef6\u5f00\u53d1\u548c\u4ea4\u4ed8\u8fc7\u7a0b\u3002","title":"Git\u548cGithub\u7684\u533a\u522b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u4f7f\u7528\u56fe\u5f62\u5316-git","text":"GitKraken GitKraken \u662f\u4e00\u6b3e\u70ab\u9177\u4e14\u53cb\u597d\u7684 Git \u5ba2\u6237\u7aef\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002 Sourcetree Sourcetree \u662f\u4e00\u6b3e\u514d\u8d39\u7684 Git \u548c Mercurial \u5ba2\u6237\u7aef\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002 TortoiseGit TortoiseGit \u662f\u4e00\u6b3e\u514d\u8d39\u7684 Git \u5ba2\u6237\u7aef\uff0c\u53ea\u652f\u6301 Windows \u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\u548c Windows \u8d44\u6e90\u7ba1\u7406\u5668\u7684\u96c6\u6210\uff0c\u9002\u5408\u521d\u5b66\u8005\u4f7f\u7528\u3002 GitHub Desktop GitHub Desktop \u662f\u4e00\u6b3e\u514d\u8d39\u7684 Git \u5ba2\u6237\u7aef\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u7684\u64cd\u4f5c\u754c\u9762\u548c GitHub \u5e73\u53f0\u7684\u96c6\u6210\uff0c\u9002\u5408 GitHub \u7528\u6237\u4f7f\u7528\u3002 Git GUI\uff08\u5b89\u88c5 Git \u540e\u81ea\u5e26\uff09 Git GUI \u662f Git \u81ea\u5e26\u7684\u53ef\u89c6\u5316\u64cd\u4f5c\u754c\u9762\uff0c\u53ea\u652f\u6301\u547d\u4ee4\u884c\u65b9\u5f0f\u4f7f\u7528\uff0c\u9002\u5408\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002","title":"\u4f7f\u7528\u56fe\u5f62\u5316 Git"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u5b66\u4e60-git-\u547d\u4ee4","text":"Git \u6587\u6863\uff1a - \u5b98\u65b9\u6587\u6863: https://git-scm.com/docs - \u83dc\u9e1f\u6559\u7a0b\uff1a https:/www.runoob.com/git/git-tutorial.html - \u7334\u5b50\u90fd\u80fd\u61c2\u7684 Git \u5165\u95e8\uff1a https:/backlog.com/git-tutorial/cn/ - \u5ed6\u96ea\u5cf0\u7684\u6587\u6863\uff1a https:/www.liaoxuefeng.com/wiki/896043488029600/ - Git\u547d\u4ee4\u5927\u5168\uff1a https:l/backlog.com/git-tutorial/,cn/reference/ \u8fd9\u91cc\u5217\u51fa\u4e86\u4e00\u4e9b\u4f18\u79c0\u7684\u5728\u7ebf Git \u6559\u7a0b\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u9ad8\u7ea7\u7528\u6237\u4f7f\u7528\u3002\u5176\u4e2d\uff0c\u7334\u5b50\u90fd\u80fd\u61c2\u7684 Git \u5165\u95e8\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5165\u95e8\u6559\u7a0b\uff0c\u5b83\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u5b9e\u4f8b\u548c\u52a8\u753b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5feb\u901f\u4e0a\u624b Git\u3002\u83dc\u9e1f\u6559\u7a0b\u548c\u5ed6\u96ea\u5cf0\u7684\u6559\u7a0b\u4e5f\u662f\u975e\u5e38\u4f18\u79c0\u7684\u6559\u7a0b\uff0c\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u8bb2\u89e3\u548c\u5b9e\u4f8b\uff0c\u9002\u5408\u6df1\u5165\u5b66\u4e60 Git\u3002Git \u7b80\u660e\u6307\u5357\u5219\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6559\u7a0b\uff0c\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u770b\u5b8c\uff0c\u5e76\u7528\u6765\u590d\u4e60 Git\u3002\u65e0\u8bba\u60a8\u662f\u521d\u5b66\u8005\u8fd8\u662f\u9ad8\u7ea7\u7528\u6237\uff0c\u8fd9\u4e9b\u5728\u7ebf Git \u6559\u7a0b\u90fd\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5b66\u4e60 Git \u7684\u57fa\u672c\u77e5\u8bc6\u548c\u6280\u80fd\u3002","title":"\u5b66\u4e60 Git \u547d\u4ee4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u6253\u4e0d\u5f00-github-","text":"\u56e0\u4e3a\u4e00\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0cgithub \u5728\u56fd\u5185\u7ecf\u5e38\u4e0a\u4e0d\u53bb\uff0c\u5c31\u8fde clone \u4ee3\u7801\u90fd\u6709\u65f6\u5019\u4f1a\u56e0\u4e3a\u7f51\u7edc\u539f\u56e0\u53d1\u751f\u9519\u8bef","title":"\u6253\u4e0d\u5f00 github ?"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u70ed\u70b9\u6cd5","text":"\u5927\u5bb6\u53ef\u4ee5\u6253\u5f00\u624b\u673a\u70ed\u70b9\uff0c\u7528\u7535\u8111\u8fde\u63a5\u624b\u673a\u70ed\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019 github \u5927\u591a\u6570\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u53bb\u4e86\uff0c\u5982\u679c\u4f7f\u7528 wifi \u5c31\u4f1a\u51fa\u73b0\u4e00\u4f1a\u513f\u80fd\u7528\uff0c\u4e00\u4f1a\u513f\u4e0d\u80fd\u7528\u7684\u60c5\u51b5","title":"\u70ed\u70b9\u6cd5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u66f4\u6362-hosts","text":"\u4ec0\u4e48\u662f Hosts? Hosts \u6587\u4ef6\u662f\u4e00\u4e2a\u6ca1\u6709\u6269\u5c55\u540d\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\uff0c\u4ee5\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u4e86\u4e3b\u673a\u540d\u548c IP \u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb[1]\u3002Hosts \u53c8\u79f0 host table\uff0c\u8bd1\u4e3a\u201c\u4e3b\u673a\u8868\u201d\u3002\u73b0\u4ee3\u7cfb\u7edf\u4e2d\uff0c\u867d\u7136 DNS \u53d6\u4ee3\u4e86\u4e3b\u673a\u8868\uff0c\u4f46\u4e3b\u673a\u8868\u7684\u5e94\u7528\u4f9d\u65e7\u5f88\u5e7f[1]\u3002\u548c DNS \u4e0d\u540c\u7684\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5bf9 Hosts \u6587\u4ef6\u8fdb\u884c\u63a7\u5236\u3002 \u90a3\u4e48\u600e\u4e48\u66f4\u6362 hosts \u5462\uff1f \u5b89\u88c5 SwitchHosts \u5927\u5bb6\u770b\u4e0a\u9762\u7684\u8fd9\u4e2a\u6587\u6863\u770b\u5b8c\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\uff0c\u50bb\u74dc\u5f0f\u5b89\u88c5\uff0c\u6211\u5c31\u4e0d\u8be6\u7ec6\u8bf4\u4e86\u3002\u6211\u4e3b\u8981\u8bf4\u4e00\u4e0b\u914d\u7f6e\u8fd9\u4e2a\u4e1c\u897f","title":"\u66f4\u6362 Hosts"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u914d\u7f6e-switchhosts","text":"\u8fd9\u662f\u66f4\u65b0 url: https://code.meowrain.cn/https://github.com/521xueweihan/GitHub520/blob/main/hosts \u76f4\u63a5\u586b\u8fdb\u53bb\u786e\u5b9a\u5c31\u884c\u4e86 \u7136\u540e\u5237\u65b0\u672c\u5730 dns \u7f13\u5b58\u3002 \u6253\u5f00\u63a7\u5236\u53f0\uff0c Windows + R \uff0c\u8f93\u5165 powershell \u56de\u8f66\u6253\u5f00\uff0c\u8f93\u5165\u547d\u4ee4 ipconfig /flushdns","title":"\u914d\u7f6e SwitchHosts"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u5f00\u59cb\u4f7f\u7528-github","text":"\u5728\u5f00\u59cb\u4f7f\u7528 github \u4e4b\u524d\uff0c\u4f60\u5e94\u5f53\u4e86\u89e3\u5e76\u5b66\u4e60\u8fc7 Git Github \u5b98\u65b9\u6587\u6863\uff1a https://docs.github.com/zh/get-started/quickstart/set-up-git OSChina \u5f00\u6e90\u6307\u5317: https://oschina.gitee.io/opensource-guide/ \u770b\u4e0a\u9762\u7684\u8fd9\u4e2a\u5c31\u884c\u4e86\uff0c\u76f8\u4fe1\u4f60\u4f1a\u53d7\u76ca\u532a\u6d45","title":"\u5f00\u59cb\u4f7f\u7528 Github"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee","text":"\u60f3\u5728 github \u53c2\u4e0e\u522b\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u6216\u8005\u53c2\u4e0e\u8fd9\u4e2a\u6587\u6863\uff1f \u6765\u770b\u4e0b\u9762\u7684\u6587\u7ae0\uff1a https://github.com/firstcontributions/first-contributions/blob/main/translations/README.zh-cn.md","title":"\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#\u60f3\u8981\u4e66\u5199\u9177\u9177\u7684github\u4e2a\u4eba\u4e3b\u9875","text":"","title":"\u60f3\u8981\u4e66\u5199\u9177\u9177\u7684github\u4e2a\u4eba\u4e3b\u9875\uff1f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/git-learn/#1\u5efa\u4ed3","text":"\u5728 GitHub \u4e2d\u521b\u5efa\u4e00\u4e2a\u4e0e GitHub ID \u540c\u540d\u7684\u4ed3\u5e93\uff0c\u4f8b\u5982\u6211\u7684 GitHub ID \u4e3a lcekold\uff0c\u56e0\u6b64\u521b\u5efa\u7684\u4ed3\u5e93\u540d\u4e5f\u4e3a lcekold\u3002\uff1a \u7531\u4e8e\u6211\u5df2\u521b\u5efa\u4e86\u8fd9\u4e2a\u4ed3\u5e93\uff0c\u6240\u4ee5 GitHub \u4f1a\u5728\u4e0b\u65b9\u63d0\u793a\u6211\u5df2\u7ecf\u521b\u5efa\u8fc7\u540c\u540d\u7684\u4ed3\u5e93\u4e86\u3002 \u521b\u5efa\u65f6\u8bb0\u5f97\u52fe\u9009\u4ece\u4e0b\u65b9\u7684\u300cAdd a README file\u300d\uff0c\u5728\u4ed3\u5e93\u4e2d\u6dfb\u52a0\u4e00\u4e2a README \u7684 Markdown \u6587\u4ef6\uff0c\u7b49\u4f1a\u6211\u4eec\u5c31\u662f\u8981\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u521b\u5efa\u6211\u4eec\u6700\u7ec8\u60f3\u8981\u7684\u4e2a\u4eba\u4e3b\u9875\u6837\u5f0f\u3002 \u521b\u5efa\u4ed3\u5e93\u4e4b\u540e\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u4e2a\u4eba\u5934\u50cf\uff0c\u9009\u62e9\u300cYour profile\u300d\u56de\u5230\u4f60\u7684 GitHub \u4e3b\u9875\uff0c\u4f60\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230 Hi there \u7684\u6587\u672c\u5185\u5bb9\u3002 \u70b9\u51fb\u53f3\u4fa7\u7684\u7f16\u8f91\u6309\u94ae\uff0c\u8fdb\u5165 REMDME \u6587\u4ef6\u7684\u7f16\u8f91\u72b6\u6001\u3002 \u8fdb\u5165\u7f16\u8f91\u72b6\u6001\uff0c\u8fd9\u4e2a\u6587\u6863\u662f\u4f7f\u7528 Markdown \u8bed\u6cd5\u6765\u7f16\u8f91\u7684\uff0c\u5982\u679c\u4f60\u4e4b\u524d\u7528\u8fc7 Markdown \u7684\u8bdd\uff0c\u7f16\u8f91\u8d77\u6765\u5e94\u8be5\u975e\u5e38\u7b80\u5355\uff0c\u5982\u679c\u4f60\u6ca1\u63a5\u89e6\u8fc7\uff0c\u60f3\u5b66\u7684\u8bdd\u5341\u5206\u949f\u4e5f\u53ef\u4ee5\u5165\u95e8\u3002 \u53ea\u9700\u8981\u8bb0\u4f4f\u4e00\u70b9\uff0c\u4e0a\u4e00\u884c\u7ed3\u675f\u65f6\uff0c\u8981\u5728\u6700\u672b\u5c3e\u52a0\u591a\u81f3\u5c11\u4e24\u4e2a\u7a7a\u683c\uff0c\u624d\u80fd\u5b9e\u73b0\u6362\u884c\uff0c\u5426\u5219\u672c\u6765\u60f3\u5206\u884c\u7684\u4e24\u884c\u5185\u5bb9\u4f1a\u8fde\u5728\u4e00\u8d77\u3002 \u7f16\u8f91\u7684\u8fc7\u7a0b\u4e2d\uff0c\u70b9\u51fb\u4e0a\u65b9\u7684\u300cPreview changes\u300d\u9009\u9879\u5361\uff0c\u67e5\u770b Markdown \u6e32\u67d3\u540e\u7684\u6548\u679c \u4e0a\u9762\u7684\u6587\u7ae0\u8be6\u7ec6\u8bf4\u660e\u4e86\u5982\u4f55 pull requests \u5982\u679c\u6709\u5389\u5bb3\u7684\u5b66\u5f1f\u5b66\u59b9\uff0c\u6b22\u8fce\u5927\u5bb6\u6765\u8865\u5145\u8fd9\u4e2a\u6587\u6863\uff01","title":"1.\u5efa\u4ed3"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/latex/","text":"Latex #","title":"Latex"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/latex/#latex","text":"","title":"Latex"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/markdown-use/","text":"\u5b66\u4f1a\u4f7f\u7528markdown # Markdown\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6807\u8bb0\u8bed\u8a00\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u6587\u672c\u683c\u5f0f\u6765\u521b\u5efa\u683c\u5f0f\u5316\u6587\u6863\u3002\u5b83\u6700\u521d\u7531\u7ea6\u7ff0\u00b7\u683c\u9c81\u4f2f\uff08John Gruber\uff09\u548c\u4e9a\u4f26\u00b7\u65af\u6c83\u8328\uff08Aaron Swartz\uff09\u57282004\u5e74\u521b\u5efa\uff0c\u65e8\u5728\u4e3a\u5199\u4f5c\u8005\u63d0\u4f9b\u4e00\u79cd\u6613\u4e8e\u9605\u8bfb\u3001\u6613\u4e8e\u7f16\u5199\u7684\u6587\u672c\u683c\u5f0f\u3002 Markdown\u4f7f\u7528\u7b80\u5355\u7684\u6807\u8bb0\u8bed\u6cd5\u6765\u5b9a\u4e49\u6587\u672c\u4e2d\u7684\u683c\u5f0f\uff0c\u4f8b\u5982\u6807\u9898\u3001\u6bb5\u843d\u3001\u5217\u8868\u3001\u94fe\u63a5\u3001\u56fe\u7247\u7b49\u7b49\u3002\u8fd9\u4e9b\u6807\u8bb0\u901a\u5e38\u4ee5\u7eaf\u6587\u672c\u65b9\u5f0f\u7f16\u5199\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528HTML\u6216\u5176\u4ed6\u590d\u6742\u7684\u6807\u8bb0\u8bed\u8a00\u3002 \u56e0\u6b64\u5b66\u4f1a\u4f7f\u7528markdown\u662f\u6709\u5fc5\u8981\u7684\uff0c\u4f60\u53ef\u4ee5\u7528markdown\u6765\u7f16\u5199\u4f60\u7684\u7b14\u8bb0 \u7f16\u8f91\u5668 # \u8fd9\u91cc\u63a8\u8350\u4e24\u6b3e\u7f16\u8f91\u5668\uff1a - vscode(\u529b\u8350\uff0c\u514d\u8d39\u800c\u4e14\u5f00\u6e90\uff0c\u63d2\u4ef6\u5e93\u4e30\u5bcc) - Typora(\u73b0\u5728\u5df2\u7ecf\u662f\u6536\u8d39\u8f6f\u4ef6\u4e86\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u4e0b\u8f7d\u4e4b\u524d\u7684\u514d\u8d39\u7248\u672c\u7ee7\u7eed\u4f7f\u7528) Markdown\u8bed\u6cd5\u5b66\u4e60 # Markdown\u8bed\u6cd5\u6307\u5357 \u770b\u4e0a\u9762\u7684\u5c31\u591f\u4e86\uff0c\u8bb0\u4f4f\u8fb9\u5199\u8fb9\u7ec3","title":"\u5b66\u4f1a\u4f7f\u7528markdown"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/markdown-use/#\u5b66\u4f1a\u4f7f\u7528markdown","text":"Markdown\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6807\u8bb0\u8bed\u8a00\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u6587\u672c\u683c\u5f0f\u6765\u521b\u5efa\u683c\u5f0f\u5316\u6587\u6863\u3002\u5b83\u6700\u521d\u7531\u7ea6\u7ff0\u00b7\u683c\u9c81\u4f2f\uff08John Gruber\uff09\u548c\u4e9a\u4f26\u00b7\u65af\u6c83\u8328\uff08Aaron Swartz\uff09\u57282004\u5e74\u521b\u5efa\uff0c\u65e8\u5728\u4e3a\u5199\u4f5c\u8005\u63d0\u4f9b\u4e00\u79cd\u6613\u4e8e\u9605\u8bfb\u3001\u6613\u4e8e\u7f16\u5199\u7684\u6587\u672c\u683c\u5f0f\u3002 Markdown\u4f7f\u7528\u7b80\u5355\u7684\u6807\u8bb0\u8bed\u6cd5\u6765\u5b9a\u4e49\u6587\u672c\u4e2d\u7684\u683c\u5f0f\uff0c\u4f8b\u5982\u6807\u9898\u3001\u6bb5\u843d\u3001\u5217\u8868\u3001\u94fe\u63a5\u3001\u56fe\u7247\u7b49\u7b49\u3002\u8fd9\u4e9b\u6807\u8bb0\u901a\u5e38\u4ee5\u7eaf\u6587\u672c\u65b9\u5f0f\u7f16\u5199\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528HTML\u6216\u5176\u4ed6\u590d\u6742\u7684\u6807\u8bb0\u8bed\u8a00\u3002 \u56e0\u6b64\u5b66\u4f1a\u4f7f\u7528markdown\u662f\u6709\u5fc5\u8981\u7684\uff0c\u4f60\u53ef\u4ee5\u7528markdown\u6765\u7f16\u5199\u4f60\u7684\u7b14\u8bb0","title":"\u5b66\u4f1a\u4f7f\u7528markdown"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/markdown-use/#\u7f16\u8f91\u5668","text":"\u8fd9\u91cc\u63a8\u8350\u4e24\u6b3e\u7f16\u8f91\u5668\uff1a - vscode(\u529b\u8350\uff0c\u514d\u8d39\u800c\u4e14\u5f00\u6e90\uff0c\u63d2\u4ef6\u5e93\u4e30\u5bcc) - Typora(\u73b0\u5728\u5df2\u7ecf\u662f\u6536\u8d39\u8f6f\u4ef6\u4e86\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u4e0b\u8f7d\u4e4b\u524d\u7684\u514d\u8d39\u7248\u672c\u7ee7\u7eed\u4f7f\u7528)","title":"\u7f16\u8f91\u5668"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/markdown-use/#markdown\u8bed\u6cd5\u5b66\u4e60","text":"Markdown\u8bed\u6cd5\u6307\u5357 \u770b\u4e0a\u9762\u7684\u5c31\u591f\u4e86\uff0c\u8bb0\u4f4f\u8fb9\u5199\u8fb9\u7ec3","title":"Markdown\u8bed\u6cd5\u5b66\u4e60"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/","text":"\u6b63\u5219\u8868\u8fbe\u5f0f # \u6b63\u5219\u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\u4ecb\u7ecd \u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f \u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f \u7b14\u8bb0\u533a \u7ec3\u4e601 \u7ec3\u4e602 \u7ec3\u4e603 \u6b63\u5219\u8868\u8fbe\u5f0f\u4ecb\u7ecd # \u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular Expression\uff0c\u7b80\u79f0 regex \u6216 regexp\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7279\u5b9a\u6a21\u5f0f\u7684\u5de5\u5177\u3002\u5b83\u7531\u4e00\u7cfb\u5217\u5b57\u7b26\u548c\u7279\u6b8a\u7b26\u53f7\u7ec4\u6210\uff0c\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u590d\u6742\u7684\u6587\u672c\u6a21\u5f0f\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u5728\u6587\u672c\u5904\u7406\u3001\u6570\u636e\u9a8c\u8bc1\u548c\u641c\u7d22\u7b49\u9886\u57df\u90fd\u6709\u5e7f\u6cdb\u5e94\u7528\u3002\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982 Python\u3001JavaScript \u548c Java \u7b49\u3002 \u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f # Github \u4e0a\u4e00\u4e2a\u5f88\u68d2\u7684\u9879\u76ee\uff0c\u6709\u591a\u4e2a\u8bed\u79cd\u7684\u7ffb\u8bd1\uff0c\u5927\u5bb6\u53ef\u4ee5\u6765\u8fd9\u91cc\u5b66\u4e60\uff0c\u5728\u4e0b\u9762\u7684\u7f51\u7ad9\u4e2d\u7ec3\u4e60 \u2b50learn-regex \u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f # \u975e\u5e38\u68d2\u7684\u4e00\u4e2a\u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f51\u7ad9 \u2b50regex101 \u83dc\u9e1f\u6559\u7a0b\u63d0\u4f9b\u7684\u5728\u7ebf\u7ec3\u4e60\u7f51\u7ad9 \u7b14\u8bb0\u533a # \u6b63\u597d\u5728\u5b66\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u987a\u4fbf\u7b14\u8bb0\u5c31\u505a\u8fd9\u513f\u5427 \u7ec3\u4e601 # Check if a string contains the word word in it (case insensitive) /\\bword\\b/i \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u72ec\u7acb\u7684\u5355\u8bcd \"word\"\u3002 \\b \u662f\u4e00\u4e2a\u5355\u8bcd\u8fb9\u754c\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u5355\u8bcd\u7684\u5f00\u5934\u6216\u7ed3\u5c3e /i \u6807\u8bb0\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002 \u4f8b\u5982\uff0c\\bword\\b \u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 \"A word in a sentence\" \u4e2d\u7684 \"word\"\uff0c\u4f46\u4e0d\u4f1a\u5339\u914d \"swordfish\" \u4e2d\u7684 \"word\"\u3002 \u7ec3\u4e602 # Use substitution to replace every occurrence of the word i with the word I (uppercase, I as in me). E.g.: i'm replacing it. am i not? -> I'm replacing it. am I not?. A regex match is replaced with the text in the Substitution field when using substitution. \u7ffb\u8bd1\uff1a\u628a\u5355\u72ec\u7684 i \u6362\u6210 I\u3002 \u89e3\u9898\uff1a /\\bi\\b/g /\\bi\\b/g \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u7528\u4e8e\u5168\u5c40\u5339\u914d\u72ec\u7acb\u7684\u5355\u8bcd \"i\"\u3002\\b \u662f\u4e00\u4e2a\u5355\u8bcd\u8fb9\u754c\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u5355\u8bcd\u7684\u5f00\u5934\u6216\u7ed3\u5c3e\u3002g \u662f\u5168\u5c40\u5339\u914d\u6807\u5fd7\uff0c\u5b83\u8868\u793a\u5339\u914d\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b2c\u4e00\u4e2a\u3002 \u7ec3\u4e603 # With regex you can count the number of matches. Can you make it return the number of uppercase consonants (B,C,D,F,..,X,Y,Z) in a given string? E.g.: it should return 3 with the text ABcDeFO!. Note: Only ASCII. We consider Y to be a consonant! Example: the regex /./g will return 3 when run against the string abc. \u7ffb\u8bd1\uff1a\u627e\u5230\u6240\u6709\u7684\u5927\u5199\u8f85\u97f3\u5b57\u6bcd\uff1a BCDFGH...XYZ \u89e3\u9898\uff1a (?![AEIOU])[A-Z] (?![AEIOU])[A-Z] \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u5927\u5199\u8f85\u97f3\u5b57\u6bcd\u3002 [A-Z] \u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3002 (?![AEIOU]) \u662f\u4e00\u4e2a\u5426\u5b9a\u524d\u77bb\u65ad\u8a00\uff0c\u5b83\u8868\u793a\u540e\u9762\u7684\u5b57\u7b26\u4e0d\u80fd\u662f [AEIOU] \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5927\u5199\u8f85\u97f3\u5b57\u6bcd\uff0c\u4f8b\u5982 \"B\"\uff0c\"C\"\uff0c\"D\" \u7b49\uff0c\u4f46\u4e0d\u4f1a\u5339\u914d\u5927\u5199\u5143\u97f3\u5b57\u6bcd \"A\"\uff0c\"E\"\uff0c\"I\"\uff0c\"O\" \u6216 \"U\"\u3002 \u5426\u5b9a\u524d\u77bb\u65ad\u8a00\uff08Negative Lookahead Assertion\uff09\u662f\u4e00\u79cd\u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5\uff0c\u7528\u4e8e\u5339\u914d\u4e0d\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u6587\u672c\u3002\u5b83\u7684\u8bed\u6cd5\u5f62\u5f0f\u4e3a (?!pattern)\uff0c\u5176\u4e2d pattern \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5426\u5b9a\u524d\u77bb\u65ad\u8a00\u4f1a\u5728\u5f53\u524d\u4f4d\u7f6e\u5411\u524d\u67e5\u627e\uff0c\u68c0\u67e5\u662f\u5426\u4e0d\u6ee1\u8db3 pattern\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u5339\u914d\u6210\u529f\uff1b\u5426\u5219\uff0c\u5339\u914d\u5931\u8d25\u3002 \u4f8b\u5982\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f /\\d(?!00)/ \u53ef\u4ee5\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\uff0c\u4f46\u8fd9\u4e2a\u6570\u5b57\u540e\u9762\u4e0d\u80fd\u7d27\u8ddf\u7740\u4e24\u4e2a\u96f6\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 \"100\" \u4e2d\u7684\u7b2c\u4e00\u4e2a \"1\"\uff0c\u4f46\u4e0d\u4f1a\u5339\u914d\u5b57\u7b26\u4e32 \"1000\" \u4e2d\u7684\u7b2c\u4e00\u4e2a \"1\"\u3002 \u7136\u540e\u518d\u66f4\u65b0\u5427\u3002\u3002\u3002\u3002\u3002","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u6b63\u5219\u8868\u8fbe\u5f0f","text":"\u6b63\u5219\u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\u4ecb\u7ecd \u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f \u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f \u7b14\u8bb0\u533a \u7ec3\u4e601 \u7ec3\u4e602 \u7ec3\u4e603","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u6b63\u5219\u8868\u8fbe\u5f0f\u4ecb\u7ecd","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular Expression\uff0c\u7b80\u79f0 regex \u6216 regexp\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7279\u5b9a\u6a21\u5f0f\u7684\u5de5\u5177\u3002\u5b83\u7531\u4e00\u7cfb\u5217\u5b57\u7b26\u548c\u7279\u6b8a\u7b26\u53f7\u7ec4\u6210\uff0c\u53ef\u4ee5\u7528\u6765\u63cf\u8ff0\u590d\u6742\u7684\u6587\u672c\u6a21\u5f0f\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u5728\u6587\u672c\u5904\u7406\u3001\u6570\u636e\u9a8c\u8bc1\u548c\u641c\u7d22\u7b49\u9886\u57df\u90fd\u6709\u5e7f\u6cdb\u5e94\u7528\u3002\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982 Python\u3001JavaScript \u548c Java \u7b49\u3002","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u4ecb\u7ecd"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f","text":"Github \u4e0a\u4e00\u4e2a\u5f88\u68d2\u7684\u9879\u76ee\uff0c\u6709\u591a\u4e2a\u8bed\u79cd\u7684\u7ffb\u8bd1\uff0c\u5927\u5bb6\u53ef\u4ee5\u6765\u8fd9\u91cc\u5b66\u4e60\uff0c\u5728\u4e0b\u9762\u7684\u7f51\u7ad9\u4e2d\u7ec3\u4e60 \u2b50learn-regex","title":"\u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f","text":"\u975e\u5e38\u68d2\u7684\u4e00\u4e2a\u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f51\u7ad9 \u2b50regex101 \u83dc\u9e1f\u6559\u7a0b\u63d0\u4f9b\u7684\u5728\u7ebf\u7ec3\u4e60\u7f51\u7ad9","title":"\u7ec3\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u7b14\u8bb0\u533a","text":"\u6b63\u597d\u5728\u5b66\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u987a\u4fbf\u7b14\u8bb0\u5c31\u505a\u8fd9\u513f\u5427","title":"\u7b14\u8bb0\u533a"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u7ec3\u4e601","text":"Check if a string contains the word word in it (case insensitive) /\\bword\\b/i \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u72ec\u7acb\u7684\u5355\u8bcd \"word\"\u3002 \\b \u662f\u4e00\u4e2a\u5355\u8bcd\u8fb9\u754c\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u5355\u8bcd\u7684\u5f00\u5934\u6216\u7ed3\u5c3e /i \u6807\u8bb0\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002 \u4f8b\u5982\uff0c\\bword\\b \u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 \"A word in a sentence\" \u4e2d\u7684 \"word\"\uff0c\u4f46\u4e0d\u4f1a\u5339\u914d \"swordfish\" \u4e2d\u7684 \"word\"\u3002","title":"\u7ec3\u4e601"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u7ec3\u4e602","text":"Use substitution to replace every occurrence of the word i with the word I (uppercase, I as in me). E.g.: i'm replacing it. am i not? -> I'm replacing it. am I not?. A regex match is replaced with the text in the Substitution field when using substitution. \u7ffb\u8bd1\uff1a\u628a\u5355\u72ec\u7684 i \u6362\u6210 I\u3002 \u89e3\u9898\uff1a /\\bi\\b/g /\\bi\\b/g \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u7528\u4e8e\u5168\u5c40\u5339\u914d\u72ec\u7acb\u7684\u5355\u8bcd \"i\"\u3002\\b \u662f\u4e00\u4e2a\u5355\u8bcd\u8fb9\u754c\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u5355\u8bcd\u7684\u5f00\u5934\u6216\u7ed3\u5c3e\u3002g \u662f\u5168\u5c40\u5339\u914d\u6807\u5fd7\uff0c\u5b83\u8868\u793a\u5339\u914d\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b2c\u4e00\u4e2a\u3002","title":"\u7ec3\u4e602"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/regexp/#\u7ec3\u4e603","text":"With regex you can count the number of matches. Can you make it return the number of uppercase consonants (B,C,D,F,..,X,Y,Z) in a given string? E.g.: it should return 3 with the text ABcDeFO!. Note: Only ASCII. We consider Y to be a consonant! Example: the regex /./g will return 3 when run against the string abc. \u7ffb\u8bd1\uff1a\u627e\u5230\u6240\u6709\u7684\u5927\u5199\u8f85\u97f3\u5b57\u6bcd\uff1a BCDFGH...XYZ \u89e3\u9898\uff1a (?![AEIOU])[A-Z] (?![AEIOU])[A-Z] \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u7528\u4e8e\u5339\u914d\u5927\u5199\u8f85\u97f3\u5b57\u6bcd\u3002 [A-Z] \u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3002 (?![AEIOU]) \u662f\u4e00\u4e2a\u5426\u5b9a\u524d\u77bb\u65ad\u8a00\uff0c\u5b83\u8868\u793a\u540e\u9762\u7684\u5b57\u7b26\u4e0d\u80fd\u662f [AEIOU] \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5927\u5199\u8f85\u97f3\u5b57\u6bcd\uff0c\u4f8b\u5982 \"B\"\uff0c\"C\"\uff0c\"D\" \u7b49\uff0c\u4f46\u4e0d\u4f1a\u5339\u914d\u5927\u5199\u5143\u97f3\u5b57\u6bcd \"A\"\uff0c\"E\"\uff0c\"I\"\uff0c\"O\" \u6216 \"U\"\u3002 \u5426\u5b9a\u524d\u77bb\u65ad\u8a00\uff08Negative Lookahead Assertion\uff09\u662f\u4e00\u79cd\u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5\uff0c\u7528\u4e8e\u5339\u914d\u4e0d\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u6587\u672c\u3002\u5b83\u7684\u8bed\u6cd5\u5f62\u5f0f\u4e3a (?!pattern)\uff0c\u5176\u4e2d pattern \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5426\u5b9a\u524d\u77bb\u65ad\u8a00\u4f1a\u5728\u5f53\u524d\u4f4d\u7f6e\u5411\u524d\u67e5\u627e\uff0c\u68c0\u67e5\u662f\u5426\u4e0d\u6ee1\u8db3 pattern\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u5339\u914d\u6210\u529f\uff1b\u5426\u5219\uff0c\u5339\u914d\u5931\u8d25\u3002 \u4f8b\u5982\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f /\\d(?!00)/ \u53ef\u4ee5\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\uff0c\u4f46\u8fd9\u4e2a\u6570\u5b57\u540e\u9762\u4e0d\u80fd\u7d27\u8ddf\u7740\u4e24\u4e2a\u96f6\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32 \"100\" \u4e2d\u7684\u7b2c\u4e00\u4e2a \"1\"\uff0c\u4f46\u4e0d\u4f1a\u5339\u914d\u5b57\u7b26\u4e32 \"1000\" \u4e2d\u7684\u7b2c\u4e00\u4e2a \"1\"\u3002 \u7136\u540e\u518d\u66f4\u65b0\u5427\u3002\u3002\u3002\u3002\u3002","title":"\u7ec3\u4e603"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/","text":"\u5173\u4e8e\u622a\u56fe # \u6bd4\u8f83\u5e38\u7528\u7684\u4e24\u79cd\u622a\u56fe\u65b9\u5f0f QQ\u622a\u56fe # \u9ed8\u8ba4\u622a\u56fe\u65b9\u6cd5\u662f ctrl + alt +a \u5fae\u4fe1\u622a\u56fe # \u6309\u4e0b\u952e\u76d8\u4e0a\u7684 Alt + A \u5c31\u53ef\u4ee5\u5b9e\u73b0\u5fae\u4fe1\u622a\u56fe windows\u81ea\u5e26\u622a\u56fe # \u5168\u5c4f\u622a\u56fe # windows\u7684\u9ed8\u8ba4\u5168\u5c4f\u622a\u56fe\u662f\u952e\u76d8\u4e0a\u7684 PrtSc \u8fd9\u4e2a\u6309\u952e\uff0c\u6309\u4e0b\u8fd9\u4e2a\u952e\uff0c\u7136\u540e\u518d\u53bbQQ\u7fa4\u6216\u8005\u804a\u5929\u6846\u91cc\u7c98\u8d34\uff0c\u5c31\u80fd\u770b\u5230\u5168\u5c4f\u622a\u56fe \u53ef\u6846\u9009\u7684\u6d3b\u52a8\u622a\u56fe # Win+Shift+S \u6548\u679c\u5982\u4e0b\u56fe \u6211\u63a8\u8350\u7684 # \u4e0a\u9762\u7684\u65b9\u6cd5\uff0cqq\u548c\u5fae\u4fe1\u9700\u8981\u6253\u5f00\u8f6f\u4ef6\u624d\u80fd\u7528\uff0c\u800cwindows\u7684\u81ea\u5e26\u622a\u5c4f\uff0c\u662f\u6709\u5ef6\u8fdf\u7684\uff0c\u5982\u679c\u4f60\u60f3\u6293\u62cd\u67d0\u4e2a\u754c\u9762\uff0c\u90a3\u662f\u6ca1\u529e\u6cd5\u7528\u7684 \u8fd9\u65f6\u5019\u6211\u5c31\u8981\u63a8\u8350\u4e00\u4e0b**Snipaste**\u8fd9\u4e2a\u622a\u56fe\u8f6f\u4ef6\u4e86 \u5b98\u7f51\uff1a Snipaste \u4e0b\u8f7d \u56fe\uff1a \u81f3\u4e8e\u5b83\u6709\u591a\u597d\u7528\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u5c11\u6570\u6d3e\u7684\u8fd9\u7bc7\u6587\u7ae0 Windows \u4e0a\u6700\u597d\u7684\u514d\u8d39\u622a\u56fe\u6807\u6ce8\u5de5\u5177\uff1aSnipaste - \u5c11\u6570\u6d3e (sspai.com)","title":"\u5173\u4e8e\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#\u5173\u4e8e\u622a\u56fe","text":"\u6bd4\u8f83\u5e38\u7528\u7684\u4e24\u79cd\u622a\u56fe\u65b9\u5f0f","title":"\u5173\u4e8e\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#qq\u622a\u56fe","text":"\u9ed8\u8ba4\u622a\u56fe\u65b9\u6cd5\u662f ctrl + alt +a","title":"QQ\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#\u5fae\u4fe1\u622a\u56fe","text":"\u6309\u4e0b\u952e\u76d8\u4e0a\u7684 Alt + A \u5c31\u53ef\u4ee5\u5b9e\u73b0\u5fae\u4fe1\u622a\u56fe","title":"\u5fae\u4fe1\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#windows\u81ea\u5e26\u622a\u56fe","text":"","title":"windows\u81ea\u5e26\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#\u5168\u5c4f\u622a\u56fe","text":"windows\u7684\u9ed8\u8ba4\u5168\u5c4f\u622a\u56fe\u662f\u952e\u76d8\u4e0a\u7684 PrtSc \u8fd9\u4e2a\u6309\u952e\uff0c\u6309\u4e0b\u8fd9\u4e2a\u952e\uff0c\u7136\u540e\u518d\u53bbQQ\u7fa4\u6216\u8005\u804a\u5929\u6846\u91cc\u7c98\u8d34\uff0c\u5c31\u80fd\u770b\u5230\u5168\u5c4f\u622a\u56fe","title":"\u5168\u5c4f\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#\u53ef\u6846\u9009\u7684\u6d3b\u52a8\u622a\u56fe","text":"Win+Shift+S \u6548\u679c\u5982\u4e0b\u56fe","title":"\u53ef\u6846\u9009\u7684\u6d3b\u52a8\u622a\u56fe"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/screencapture-use/#\u6211\u63a8\u8350\u7684","text":"\u4e0a\u9762\u7684\u65b9\u6cd5\uff0cqq\u548c\u5fae\u4fe1\u9700\u8981\u6253\u5f00\u8f6f\u4ef6\u624d\u80fd\u7528\uff0c\u800cwindows\u7684\u81ea\u5e26\u622a\u5c4f\uff0c\u662f\u6709\u5ef6\u8fdf\u7684\uff0c\u5982\u679c\u4f60\u60f3\u6293\u62cd\u67d0\u4e2a\u754c\u9762\uff0c\u90a3\u662f\u6ca1\u529e\u6cd5\u7528\u7684 \u8fd9\u65f6\u5019\u6211\u5c31\u8981\u63a8\u8350\u4e00\u4e0b**Snipaste**\u8fd9\u4e2a\u622a\u56fe\u8f6f\u4ef6\u4e86 \u5b98\u7f51\uff1a Snipaste \u4e0b\u8f7d \u56fe\uff1a \u81f3\u4e8e\u5b83\u6709\u591a\u597d\u7528\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u5c11\u6570\u6d3e\u7684\u8fd9\u7bc7\u6587\u7ae0 Windows \u4e0a\u6700\u597d\u7684\u514d\u8d39\u622a\u56fe\u6807\u6ce8\u5de5\u5177\uff1aSnipaste - \u5c11\u6570\u6d3e (sspai.com)","title":"\u6211\u63a8\u8350\u7684"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/search-engine-use/","text":"\u5b66\u4e60\u4f7f\u7528\u641c\u7d22\u5f15\u64ce # \u5728\u5f53\u4eca\u8fd9\u4e2a\u4fe1\u606f\u5316\u65f6\u4ee3\uff0c\u4e0d\u4f1a\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u662f\u4e2a\u5f88\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002 \u8fd9\u610f\u5473\u7740\u5f53\u4f60\u9047\u5230\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5728\u4e0d\u6c42\u52a9\u4e8e\u8001\u5e08\u6216\u8005\u540c\u5b66\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u53bb\u89e3\u51b3\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u3002 \u4f7f\u7528\u641c\u7d22\u5f15\u64ce # \u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u6d77\u91cf\u4fe1\u606f\u4e2d\u5feb\u901f\u627e\u5230\u6240\u9700\u7684\u5185\u5bb9\uff0c\u4f46\u5982\u4f55\u6b63\u786e\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u5374\u662f\u4e00\u4e2a\u9700\u8981\u638c\u63e1\u7684\u6280\u80fd\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u7684\u6280\u5de7\uff1a \u4f7f\u7528\u5173\u952e\u8bcd\uff1a\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u76f8\u5173\u7684\u5173\u952e\u8bcd\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u641c\u7d22\u5230\u6240\u9700\u5185\u5bb9\u3002\u5173\u952e\u8bcd\u5e94\u8be5\u5c3d\u53ef\u80fd\u5177\u4f53\uff0c\u800c\u4e0d\u662f\u592a\u5bbd\u6cdb\u3002 \u4f7f\u7528\u5f15\u53f7\uff1a\u4f7f\u7528\u5f15\u53f7\u53ef\u4ee5\u5c06\u4e00\u4e2a\u77ed\u8bed\u4f5c\u4e3a\u6574\u4f53\u8fdb\u884c\u641c\u7d22\uff0c\u4ece\u800c\u66f4\u51c6\u786e\u5730\u627e\u5230\u6240\u9700\u5185\u5bb9\u3002 \u4f7f\u7528\u6392\u9664\u7b26\u53f7\uff1a\u5728\u5173\u952e\u8bcd\u524d\u52a0\u4e0a\u51cf\u53f7\u7b26\u53f7(-)\u53ef\u4ee5\u5c06\u4e0d\u76f8\u5173\u7684\u7ed3\u679c\u6392\u9664\u5728\u641c\u7d22\u8303\u56f4\u4e4b\u5916\u3002 \u4f7f\u7528\u7ad9\u5185\u641c\u7d22\uff1a\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165site:\u52a0\u4e0a\u8981\u641c\u7d22\u7684\u7f51\u7ad9\u57df\u540d\uff0c\u53ef\u4ee5\u53ea\u5728\u8be5\u7f51\u7ad9\u5185\u641c\u7d22\u76f8\u5173\u5185\u5bb9\u3002 \u4f7f\u7528\u9ad8\u7ea7\u641c\u7d22\u9009\u9879\uff1a\u641c\u7d22\u5f15\u64ce\u63d0\u4f9b\u7684\u9ad8\u7ea7\u641c\u7d22\u9009\u9879\u53ef\u4ee5\u66f4\u52a0\u7cbe\u786e\u5730\u641c\u7d22\u5230\u6240\u9700\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u9ad8\u7ea7\u641c\u7d22\u9009\u9879\u6307\u5b9a\u641c\u7d22\u65f6\u95f4\u8303\u56f4\u3001\u6587\u4ef6\u7c7b\u578b\u3001\u7f51\u7ad9\u57df\u540d\u7b49\u3002 \u9605\u8bfb\u641c\u7d22\u7ed3\u679c\u7684\u63cf\u8ff0\uff1a\u641c\u7d22\u7ed3\u679c\u7684\u63cf\u8ff0\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u4e86\u89e3\u6bcf\u4e2a\u7ed3\u679c\u7684\u5927\u81f4\u5185\u5bb9\uff0c\u4ece\u800c\u66f4\u597d\u5730\u9009\u62e9\u9700\u8981\u67e5\u770b\u7684\u7ed3\u679c\u3002 \u5c1d\u8bd5\u4e0d\u540c\u7684\u641c\u7d22\u8bcd\u7ec4\u5408\uff1a\u5982\u679c\u4e00\u6b21\u641c\u7d22\u6ca1\u6709\u627e\u5230\u6240\u9700\u5185\u5bb9\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u5173\u952e\u8bcd\u7ec4\u5408\u6216\u8c03\u6574\u641c\u7d22\u6761\u4ef6\u8fdb\u884c\u641c\u7d22\u3002 \u4f7f\u7528\u661f\u53f7\u901a\u914d\u7b26\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u661f\u53f7\uff08*\uff09\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u5b57\u7b26\u6216\u5355\u8bcd\uff0c\u7528\u4e8e\u6269\u5c55\u641c\u7d22\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"machine learning *\" \u53ef\u4ee5\u627e\u5230\u4e0e\"machine learning\"\u76f8\u5173\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u5305\u62ec\"machine learning algorithms\"\u3001\"machine learning courses\"\u7b49\u3002 \u4f7f\u7528\u53cc\u70b9\u53f7\u8303\u56f4\u7b26\u53f7\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u53cc\u70b9\u53f7\uff08..\uff09\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"2020..2022 technology trends\" \u53ef\u4ee5\u627e\u52302020\u5e74\u81f32022\u5e74\u7684\u79d1\u6280\u8d8b\u52bf\u3002 \u4f7f\u7528\u62ec\u53f7\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u62ec\u53f7\u53ef\u4ee5\u66f4\u6539\u641c\u7d22\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"machine learning AND (neural networks OR deep learning)\" \u53ef\u4ee5\u627e\u5230\u5305\u542b\u673a\u5668\u5b66\u4e60\u548c\u795e\u7ecf\u7f51\u7edc\u6216\u6df1\u5ea6\u5b66\u4e60\u7684\u5185\u5bb9\u3002 \u4f7f\u7528\u52a0\u53f7\u548c\u51cf\u53f7\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u52a0\u53f7\uff08+\uff09\u53ef\u4ee5\u786e\u4fdd\u641c\u7d22\u7ed3\u679c\u5305\u542b\u7279\u5b9a\u7684\u5355\u8bcd\u6216\u77ed\u8bed\uff0c\u4f7f\u7528\u51cf\u53f7\uff08-\uff09\u53ef\u4ee5\u6392\u9664\u641c\u7d22\u7ed3\u679c\u4e2d\u5305\u542b\u7279\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"artificial intelligence +ethics\" \u53ef\u4ee5\u627e\u5230\u5173\u4e8e\u4eba\u5de5\u667a\u80fd\u4f26\u7406\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u641c\u7d22 \"artificial intelligence -weapons\" \u53ef\u4ee5\u6392\u9664\u6b66\u5668\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u4f7f\u7528\u201cdefine:\u201d\uff1a\u5728\u641c\u7d22\u8bcd\u524d\u52a0\u4e0a\u201cdefine:\u201d\u53ef\u4ee5\u627e\u5230\u4e0e\u7279\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u76f8\u5173\u7684\u5b9a\u4e49\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"define: machine learning\" \u53ef\u4ee5\u627e\u5230\u673a\u5668\u5b66\u4e60\u7684\u5b9a\u4e49\u3002 \u4f7f\u7528\u201crelated:\u201d\uff1a\u5728\u641c\u7d22\u8bcd\u524d\u52a0\u4e0a\u201crelated:\u201d\u53ef\u4ee5\u627e\u5230\u4e0e\u7279\u5b9a\u7f51\u7ad9\u6216\u5185\u5bb9\u76f8\u5173\u7684\u5176\u4ed6\u7f51\u7ad9\u6216\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"related:github.com\" \u53ef\u4ee5\u627e\u5230\u4e0eGitHub\u7f51\u7ad9\u76f8\u5173\u7684\u5176\u4ed6\u7f51\u7ad9\u3002 \u4f7f\u7528\u201ccache:\u201d\uff1a\u5728\u641c\u7d22\u7ed3\u679c\u94fe\u63a5\u524d\u52a0\u4e0a\u201ccache:\u201d\u53ef\u4ee5\u627e\u5230\u641c\u7d22\u5f15\u64ce\u7f13\u5b58\u7684\u7f51\u9875\u7248\u672c\uff0c\u6709\u52a9\u4e8e\u67e5\u770b\u4ee5\u524d\u7684\u7f51\u9875\u7248\u672c\u3002 \u4e0a\u9762\u7684\u5185\u5bb9\u4e5f\u8bb8\u8ba9\u4f60\u6478\u4e0d\u7740\u5934\u8111\uff0c\u4e0b\u9762\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\uff1a \u4ee5\u4e0b\u662f\u4e00\u4e9b\u641c\u7d22\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u7684\u6280\u5de7\uff1a \u641c\u7d22 \"Python tutorial\"\uff0c\u627e\u5230Python\u7684\u6559\u7a0b\u3002 \u641c\u7d22 \"Python tutorial\" -\"beginner\"\uff0c\u6392\u9664\u4e86\u5305\u542b\u201cbeginner\u201d\u7684\u641c\u7d22\u7ed3\u679c\uff0c\u53ea\u627e\u5230\u9002\u5408\u8fdb\u9636\u7684Python\u6559\u7a0b\u3002 \u641c\u7d22 \"site:github.com git tutorial\"\uff0c\u5728GitHub\u7f51\u7ad9\u5185\u641c\u7d22Git\u7684\u6559\u7a0b\u3002 \u641c\u7d22 \"filetype:pdf machine learning\"\uff0c\u53ea\u641c\u7d22PDF\u683c\u5f0f\u7684\u673a\u5668\u5b66\u4e60\u6587\u732e\u3002 \u641c\u7d22 \"time:2022..2023 AI news\"\uff0c\u53ea\u641c\u7d222022\u5e74\u52302023\u5e74\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002 \u641c\u7d22 \"intitle:\"COVID-19\" news\"\uff0c\u53ea\u641c\u7d22\u6807\u9898\u4e2d\u5305\u542b\u201cCOVID-19\u201d\u7684\u65b0\u95fb\u6587\u7ae0\u3002","title":"\u5b66\u4e60\u4f7f\u7528\u641c\u7d22\u5f15\u64ce"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/search-engine-use/#\u5b66\u4e60\u4f7f\u7528\u641c\u7d22\u5f15\u64ce","text":"\u5728\u5f53\u4eca\u8fd9\u4e2a\u4fe1\u606f\u5316\u65f6\u4ee3\uff0c\u4e0d\u4f1a\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u662f\u4e2a\u5f88\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002 \u8fd9\u610f\u5473\u7740\u5f53\u4f60\u9047\u5230\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5728\u4e0d\u6c42\u52a9\u4e8e\u8001\u5e08\u6216\u8005\u540c\u5b66\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u53bb\u89e3\u51b3\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u3002","title":"\u5b66\u4e60\u4f7f\u7528\u641c\u7d22\u5f15\u64ce"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/search-engine-use/#\u4f7f\u7528\u641c\u7d22\u5f15\u64ce","text":"\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u6d77\u91cf\u4fe1\u606f\u4e2d\u5feb\u901f\u627e\u5230\u6240\u9700\u7684\u5185\u5bb9\uff0c\u4f46\u5982\u4f55\u6b63\u786e\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u5374\u662f\u4e00\u4e2a\u9700\u8981\u638c\u63e1\u7684\u6280\u80fd\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u7684\u6280\u5de7\uff1a \u4f7f\u7528\u5173\u952e\u8bcd\uff1a\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u76f8\u5173\u7684\u5173\u952e\u8bcd\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u641c\u7d22\u5230\u6240\u9700\u5185\u5bb9\u3002\u5173\u952e\u8bcd\u5e94\u8be5\u5c3d\u53ef\u80fd\u5177\u4f53\uff0c\u800c\u4e0d\u662f\u592a\u5bbd\u6cdb\u3002 \u4f7f\u7528\u5f15\u53f7\uff1a\u4f7f\u7528\u5f15\u53f7\u53ef\u4ee5\u5c06\u4e00\u4e2a\u77ed\u8bed\u4f5c\u4e3a\u6574\u4f53\u8fdb\u884c\u641c\u7d22\uff0c\u4ece\u800c\u66f4\u51c6\u786e\u5730\u627e\u5230\u6240\u9700\u5185\u5bb9\u3002 \u4f7f\u7528\u6392\u9664\u7b26\u53f7\uff1a\u5728\u5173\u952e\u8bcd\u524d\u52a0\u4e0a\u51cf\u53f7\u7b26\u53f7(-)\u53ef\u4ee5\u5c06\u4e0d\u76f8\u5173\u7684\u7ed3\u679c\u6392\u9664\u5728\u641c\u7d22\u8303\u56f4\u4e4b\u5916\u3002 \u4f7f\u7528\u7ad9\u5185\u641c\u7d22\uff1a\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165site:\u52a0\u4e0a\u8981\u641c\u7d22\u7684\u7f51\u7ad9\u57df\u540d\uff0c\u53ef\u4ee5\u53ea\u5728\u8be5\u7f51\u7ad9\u5185\u641c\u7d22\u76f8\u5173\u5185\u5bb9\u3002 \u4f7f\u7528\u9ad8\u7ea7\u641c\u7d22\u9009\u9879\uff1a\u641c\u7d22\u5f15\u64ce\u63d0\u4f9b\u7684\u9ad8\u7ea7\u641c\u7d22\u9009\u9879\u53ef\u4ee5\u66f4\u52a0\u7cbe\u786e\u5730\u641c\u7d22\u5230\u6240\u9700\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u9ad8\u7ea7\u641c\u7d22\u9009\u9879\u6307\u5b9a\u641c\u7d22\u65f6\u95f4\u8303\u56f4\u3001\u6587\u4ef6\u7c7b\u578b\u3001\u7f51\u7ad9\u57df\u540d\u7b49\u3002 \u9605\u8bfb\u641c\u7d22\u7ed3\u679c\u7684\u63cf\u8ff0\uff1a\u641c\u7d22\u7ed3\u679c\u7684\u63cf\u8ff0\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u4e86\u89e3\u6bcf\u4e2a\u7ed3\u679c\u7684\u5927\u81f4\u5185\u5bb9\uff0c\u4ece\u800c\u66f4\u597d\u5730\u9009\u62e9\u9700\u8981\u67e5\u770b\u7684\u7ed3\u679c\u3002 \u5c1d\u8bd5\u4e0d\u540c\u7684\u641c\u7d22\u8bcd\u7ec4\u5408\uff1a\u5982\u679c\u4e00\u6b21\u641c\u7d22\u6ca1\u6709\u627e\u5230\u6240\u9700\u5185\u5bb9\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u5173\u952e\u8bcd\u7ec4\u5408\u6216\u8c03\u6574\u641c\u7d22\u6761\u4ef6\u8fdb\u884c\u641c\u7d22\u3002 \u4f7f\u7528\u661f\u53f7\u901a\u914d\u7b26\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u661f\u53f7\uff08*\uff09\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u5b57\u7b26\u6216\u5355\u8bcd\uff0c\u7528\u4e8e\u6269\u5c55\u641c\u7d22\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"machine learning *\" \u53ef\u4ee5\u627e\u5230\u4e0e\"machine learning\"\u76f8\u5173\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u5305\u62ec\"machine learning algorithms\"\u3001\"machine learning courses\"\u7b49\u3002 \u4f7f\u7528\u53cc\u70b9\u53f7\u8303\u56f4\u7b26\u53f7\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u53cc\u70b9\u53f7\uff08..\uff09\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"2020..2022 technology trends\" \u53ef\u4ee5\u627e\u52302020\u5e74\u81f32022\u5e74\u7684\u79d1\u6280\u8d8b\u52bf\u3002 \u4f7f\u7528\u62ec\u53f7\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u62ec\u53f7\u53ef\u4ee5\u66f4\u6539\u641c\u7d22\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"machine learning AND (neural networks OR deep learning)\" \u53ef\u4ee5\u627e\u5230\u5305\u542b\u673a\u5668\u5b66\u4e60\u548c\u795e\u7ecf\u7f51\u7edc\u6216\u6df1\u5ea6\u5b66\u4e60\u7684\u5185\u5bb9\u3002 \u4f7f\u7528\u52a0\u53f7\u548c\u51cf\u53f7\uff1a\u5728\u641c\u7d22\u8bcd\u4e2d\u4f7f\u7528\u52a0\u53f7\uff08+\uff09\u53ef\u4ee5\u786e\u4fdd\u641c\u7d22\u7ed3\u679c\u5305\u542b\u7279\u5b9a\u7684\u5355\u8bcd\u6216\u77ed\u8bed\uff0c\u4f7f\u7528\u51cf\u53f7\uff08-\uff09\u53ef\u4ee5\u6392\u9664\u641c\u7d22\u7ed3\u679c\u4e2d\u5305\u542b\u7279\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"artificial intelligence +ethics\" \u53ef\u4ee5\u627e\u5230\u5173\u4e8e\u4eba\u5de5\u667a\u80fd\u4f26\u7406\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u641c\u7d22 \"artificial intelligence -weapons\" \u53ef\u4ee5\u6392\u9664\u6b66\u5668\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u4f7f\u7528\u201cdefine:\u201d\uff1a\u5728\u641c\u7d22\u8bcd\u524d\u52a0\u4e0a\u201cdefine:\u201d\u53ef\u4ee5\u627e\u5230\u4e0e\u7279\u5b9a\u5355\u8bcd\u6216\u77ed\u8bed\u76f8\u5173\u7684\u5b9a\u4e49\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"define: machine learning\" \u53ef\u4ee5\u627e\u5230\u673a\u5668\u5b66\u4e60\u7684\u5b9a\u4e49\u3002 \u4f7f\u7528\u201crelated:\u201d\uff1a\u5728\u641c\u7d22\u8bcd\u524d\u52a0\u4e0a\u201crelated:\u201d\u53ef\u4ee5\u627e\u5230\u4e0e\u7279\u5b9a\u7f51\u7ad9\u6216\u5185\u5bb9\u76f8\u5173\u7684\u5176\u4ed6\u7f51\u7ad9\u6216\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u641c\u7d22 \"related:github.com\" \u53ef\u4ee5\u627e\u5230\u4e0eGitHub\u7f51\u7ad9\u76f8\u5173\u7684\u5176\u4ed6\u7f51\u7ad9\u3002 \u4f7f\u7528\u201ccache:\u201d\uff1a\u5728\u641c\u7d22\u7ed3\u679c\u94fe\u63a5\u524d\u52a0\u4e0a\u201ccache:\u201d\u53ef\u4ee5\u627e\u5230\u641c\u7d22\u5f15\u64ce\u7f13\u5b58\u7684\u7f51\u9875\u7248\u672c\uff0c\u6709\u52a9\u4e8e\u67e5\u770b\u4ee5\u524d\u7684\u7f51\u9875\u7248\u672c\u3002 \u4e0a\u9762\u7684\u5185\u5bb9\u4e5f\u8bb8\u8ba9\u4f60\u6478\u4e0d\u7740\u5934\u8111\uff0c\u4e0b\u9762\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\uff1a \u4ee5\u4e0b\u662f\u4e00\u4e9b\u641c\u7d22\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u7684\u6280\u5de7\uff1a \u641c\u7d22 \"Python tutorial\"\uff0c\u627e\u5230Python\u7684\u6559\u7a0b\u3002 \u641c\u7d22 \"Python tutorial\" -\"beginner\"\uff0c\u6392\u9664\u4e86\u5305\u542b\u201cbeginner\u201d\u7684\u641c\u7d22\u7ed3\u679c\uff0c\u53ea\u627e\u5230\u9002\u5408\u8fdb\u9636\u7684Python\u6559\u7a0b\u3002 \u641c\u7d22 \"site:github.com git tutorial\"\uff0c\u5728GitHub\u7f51\u7ad9\u5185\u641c\u7d22Git\u7684\u6559\u7a0b\u3002 \u641c\u7d22 \"filetype:pdf machine learning\"\uff0c\u53ea\u641c\u7d22PDF\u683c\u5f0f\u7684\u673a\u5668\u5b66\u4e60\u6587\u732e\u3002 \u641c\u7d22 \"time:2022..2023 AI news\"\uff0c\u53ea\u641c\u7d222022\u5e74\u52302023\u5e74\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002 \u641c\u7d22 \"intitle:\"COVID-19\" news\"\uff0c\u53ea\u641c\u7d22\u6807\u9898\u4e2d\u5305\u542b\u201cCOVID-19\u201d\u7684\u65b0\u95fb\u6587\u7ae0\u3002","title":"\u4f7f\u7528\u641c\u7d22\u5f15\u64ce"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/","text":"\u5b66\u4e60vim # \u4e3a\u4ec0\u4e48\u5b66\u4e60vim # \u8fd9\u91cc\u63a8\u8350\u4f7f\u7528linux\u4e0b\u7684vim\u8fdb\u884c\u7ec3\u4e60\u3002 \u600e\u4e48\u5728windows\u4e2d\u4f7f\u7528vim # \u4f7f\u7528\u5e38\u89c4\u65b9\u5f0f\u5b89\u88c5 # vim\u5b98\u7f51 \u9996\u5148\u6253\u5f00\u4e0a\u9762\u7684\u7f51\u5740\uff0c\u5982\u4e0b \u5b89\u88c5\u540e\u6211\u4eec\u5c31\u80fd\u5728\u7cfb\u7edf\u91cc\u641c\u7d22\u5230gvim\u5566 \u6253\u5f00\u540e\u662f\u8fd9\u6837\u7684 scoop\u5b89\u88c5 # \u5173\u4e8escoop\u7684\u4f7f\u7528\uff0c\u8be6\u60c5\u8bf7\u770b Windows\u7cfb\u7edf\u4f7f\u7528-Scoop scoop install vim \u8d44\u6e90\u63a8\u8350 # vimrc\u914d\u7f6e-\u962e\u4e00\u5cf0\u8001\u5e08 vim\u7ec3\u7ea7\u624b\u518c \u2b50 \u6155\u8bfe\u89c6\u9891\u6559\u7a0b-\u73a9\u8f6cVim \u4ece\u653e\u5f03\u5230\u7231\u4e0d\u91ca\u624b 130+vim\u57fa\u672c\u547d\u4ee4 \u7b80\u660e VIM \u7ec3\u7ea7\u653b\u7565 vi / vim \u521d\u5b66\u8005\u5165\u95e8\uff08\u7cfb\u5217\u6587\u7ae0\uff09","title":"\u5b66\u4e60vim"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/#\u5b66\u4e60vim","text":"","title":"\u5b66\u4e60vim"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/#\u4e3a\u4ec0\u4e48\u5b66\u4e60vim","text":"\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528linux\u4e0b\u7684vim\u8fdb\u884c\u7ec3\u4e60\u3002","title":"\u4e3a\u4ec0\u4e48\u5b66\u4e60vim"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/#\u600e\u4e48\u5728windows\u4e2d\u4f7f\u7528vim","text":"","title":"\u600e\u4e48\u5728windows\u4e2d\u4f7f\u7528vim"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/#\u4f7f\u7528\u5e38\u89c4\u65b9\u5f0f\u5b89\u88c5","text":"vim\u5b98\u7f51 \u9996\u5148\u6253\u5f00\u4e0a\u9762\u7684\u7f51\u5740\uff0c\u5982\u4e0b \u5b89\u88c5\u540e\u6211\u4eec\u5c31\u80fd\u5728\u7cfb\u7edf\u91cc\u641c\u7d22\u5230gvim\u5566 \u6253\u5f00\u540e\u662f\u8fd9\u6837\u7684","title":"\u4f7f\u7528\u5e38\u89c4\u65b9\u5f0f\u5b89\u88c5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/#scoop\u5b89\u88c5","text":"\u5173\u4e8escoop\u7684\u4f7f\u7528\uff0c\u8be6\u60c5\u8bf7\u770b Windows\u7cfb\u7edf\u4f7f\u7528-Scoop scoop install vim","title":"scoop\u5b89\u88c5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vim-use/#\u8d44\u6e90\u63a8\u8350","text":"vimrc\u914d\u7f6e-\u962e\u4e00\u5cf0\u8001\u5e08 vim\u7ec3\u7ea7\u624b\u518c \u2b50 \u6155\u8bfe\u89c6\u9891\u6559\u7a0b-\u73a9\u8f6cVim \u4ece\u653e\u5f03\u5230\u7231\u4e0d\u91ca\u624b 130+vim\u57fa\u672c\u547d\u4ee4 \u7b80\u660e VIM \u7ec3\u7ea7\u653b\u7565 vi / vim \u521d\u5b66\u8005\u5165\u95e8\uff08\u7cfb\u5217\u6587\u7ae0\uff09","title":"\u8d44\u6e90\u63a8\u8350"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vscode-use/","text":"\u5982\u4f55\u4f7f\u7528vscode\u7f16\u8f91\u5668 # VSCODE\u6587\u6863\u4e2d\u6587 \u63a8\u8350\u5927\u5bb6\u770b\u4e0a\u9762\u8fd9\u4e2a\u6587\u6863\uff0c\u6211\u89c9\u5f97\u662f\u76ee\u524d\u4e2d\u6587\u4e92\u8054\u7f51\u4e0a\u5199\u7684\u6700\u597d\u7684\u6587\u6863\u4e86\uff0c\u4f60\u4e0d\u6e05\u695a\u7684\u90fd\u53ef\u4ee5\u5728\u4e0a\u9762\u627e\u5230\u3002 VSCODE\u5b98\u65b9\u6587\u6863 \u4f5c\u4e3aVSCODE\u7684\u5b98\u65b9\u6587\u6863\uff0c\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u9605\u8bfb\u4e00\u4e0b\u4f1a\u5bf9VSCODE\u5177\u6709\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u6587\u6863\u4e3a\u82f1\u6587\u4e2a\u4eba\u559c\u6b22\u5229\u7528Chrome\u8fdb\u884c\u7ffb\u8bd1\uff08\u4e0d\u5f97\u4e0d\u8bf4Chrome\u7684\u7ffb\u8bd1\u529f\u80fd\u4e2a\u4eba\u611f\u89c9\u6bd4BING\u8981\u597d\u7528\u7684\u591a\uff09","title":"\u5982\u4f55\u4f7f\u7528vscode\u7f16\u8f91\u5668"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/vscode-use/#\u5982\u4f55\u4f7f\u7528vscode\u7f16\u8f91\u5668","text":"VSCODE\u6587\u6863\u4e2d\u6587 \u63a8\u8350\u5927\u5bb6\u770b\u4e0a\u9762\u8fd9\u4e2a\u6587\u6863\uff0c\u6211\u89c9\u5f97\u662f\u76ee\u524d\u4e2d\u6587\u4e92\u8054\u7f51\u4e0a\u5199\u7684\u6700\u597d\u7684\u6587\u6863\u4e86\uff0c\u4f60\u4e0d\u6e05\u695a\u7684\u90fd\u53ef\u4ee5\u5728\u4e0a\u9762\u627e\u5230\u3002 VSCODE\u5b98\u65b9\u6587\u6863 \u4f5c\u4e3aVSCODE\u7684\u5b98\u65b9\u6587\u6863\uff0c\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u9605\u8bfb\u4e00\u4e0b\u4f1a\u5bf9VSCODE\u5177\u6709\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u6587\u6863\u4e3a\u82f1\u6587\u4e2a\u4eba\u559c\u6b22\u5229\u7528Chrome\u8fdb\u884c\u7ffb\u8bd1\uff08\u4e0d\u5f97\u4e0d\u8bf4Chrome\u7684\u7ffb\u8bd1\u529f\u80fd\u4e2a\u4eba\u611f\u89c9\u6bd4BING\u8981\u597d\u7528\u7684\u591a\uff09","title":"\u5982\u4f55\u4f7f\u7528vscode\u7f16\u8f91\u5668"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/1.Intro/","text":"Makefile # GNU Make \u5b98\u65b9\u7f51\u7ad9\uff1a https://www.gnu.org/software/make/ GNU Make \u5b98\u65b9\u6587\u6863\u4e0b\u8f7d\u5730\u5740\uff1a https://www.gnu.org/software/make/manual/ Makefile Tutorial\uff1a https://makefiletutorial.com/ \u2003 1 \u57fa\u672c\u683c\u5f0f # targets : prerequisties [tab\u952e]command - target\uff1a\u76ee\u6807\u6587\u4ef6\uff0c\u53ef\u4ee5\u662f OjectFile\uff0c\u4e5f\u53ef\u4ee5\u662f\u6267\u884c\u6587\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u6807\u7b7e\uff08Label\uff09\uff0c\u5bf9\u4e8e\u6807\u7b7e\u8fd9\u79cd\u7279\u6027\uff0c\u5728\u540e\u7eed\u7684\u201c\u4f2a\u76ee\u6807\u201d\u7ae0\u8282\u4e2d\u4f1a\u6709\u53d9\u8ff0\u3002 - prerequisite\uff1a\u8981\u751f\u6210\u90a3\u4e2a target \u6240\u9700\u8981\u7684\u6587\u4ef6\u6216\u662f\u76ee\u6807\u3002 - command\uff1a\u662f make \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c \u2003 2 Makefile \u89c4\u5219 # make \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u627e\u5230\u4e00\u4e2a\u540d\u5b57\u53eb Makefile \u6216 makefile \u7684\u6587\u4ef6 \u5982\u679c\u627e\u5230\uff0c\u5b83\u4f1a\u627e\u6587\u4ef6\u4e2d\u7b2c\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff08target\uff09\uff0c\u5e76\u628a\u8fd9\u4e2a\u6587\u4ef6\u4f5c\u4e3a\u6700\u7ec8\u7684\u76ee\u6807\u6587\u4ef6 \u5982\u679c target \u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u6216\u662f target \u6587\u4ef6\u4f9d\u8d56\u7684 .o \u6587\u4ef6(prerequities)\u7684\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u8981\u6bd4 target \u8fd9\u4e2a\u6587\u4ef6\u65b0\uff0c\u5c31\u4f1a\u6267\u884c\u540e\u9762\u6240\u5b9a\u4e49\u7684\u547d\u4ee4 command \u6765\u751f\u6210 target \u8fd9\u4e2a\u6587\u4ef6 \u5982\u679c target \u4f9d\u8d56\u7684 .o \u6587\u4ef6\uff08prerequisties\uff09\u4e5f\u5b58\u5728\uff0cmake \u4f1a\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u627e\u5230 target \u4e3a .o \u6587\u4ef6\u7684\u4f9d\u8d56\u6027\uff0c\u5982\u679c\u627e\u5230\uff0c\u518d\u6839\u636e\u90a3\u4e2a\u89c4\u5219\u751f\u6210 .o \u6587\u4ef6 \u2003 3 \u4f2a\u76ee\u6807 # \"\u4f2a\u76ee\u6807\" \u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ea\u662f\u4e00\u4e2a\u6807\u7b7e\u3002\u6211\u4eec\u8981\u663e\u793a\u5730\u6307\u660e\u8fd9\u4e2a \"\u76ee\u6807\" \u624d\u80fd\u8ba9\u5176\u751f\u6548 \"\u4f2a\u76ee\u6807\" \u7684\u53d6\u540d\u4e0d\u80fd\u548c\u6587\u4ef6\u540d\u91cd\u540d\uff0c\u5426\u5219\u4e0d\u4f1a\u6267\u884c\u547d\u4ee4 \u4e3a\u4e86\u907f\u514d\u548c\u6587\u4ef6\u91cd\u540d\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0 .PHONY \u6765\u663e\u793a\u5730\u6307\u660e\u4e00\u4e2a\u76ee\u6807\u662f\u201c\u4f2a\u76ee\u6807\u201d\uff0c\u5411 make \u8bf4\u660e\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u76ee\u6807\u5c31\u662f \"\u4f2a\u76ee\u6807\" .PHONY : clean \u53ea\u8981\u6709\u8fd9\u4e2a\u58f0\u660e\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u201cclean\u201d\u6587\u4ef6\uff0c\u8981\u8fd0\u884c \"clean\" \u8fd9\u4e2a\u76ee\u6807\uff0c\u53ea\u6709\"make clean\" \u8fd9\u4e2a\u547d\u4ee4","title":"1.Intro"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/1.Intro/#makefile","text":"GNU Make \u5b98\u65b9\u7f51\u7ad9\uff1a https://www.gnu.org/software/make/ GNU Make \u5b98\u65b9\u6587\u6863\u4e0b\u8f7d\u5730\u5740\uff1a https://www.gnu.org/software/make/manual/ Makefile Tutorial\uff1a https://makefiletutorial.com/","title":"Makefile"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/1.Intro/#1-\u57fa\u672c\u683c\u5f0f","text":"targets : prerequisties [tab\u952e]command - target\uff1a\u76ee\u6807\u6587\u4ef6\uff0c\u53ef\u4ee5\u662f OjectFile\uff0c\u4e5f\u53ef\u4ee5\u662f\u6267\u884c\u6587\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u6807\u7b7e\uff08Label\uff09\uff0c\u5bf9\u4e8e\u6807\u7b7e\u8fd9\u79cd\u7279\u6027\uff0c\u5728\u540e\u7eed\u7684\u201c\u4f2a\u76ee\u6807\u201d\u7ae0\u8282\u4e2d\u4f1a\u6709\u53d9\u8ff0\u3002 - prerequisite\uff1a\u8981\u751f\u6210\u90a3\u4e2a target \u6240\u9700\u8981\u7684\u6587\u4ef6\u6216\u662f\u76ee\u6807\u3002 - command\uff1a\u662f make \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c","title":"1 \u57fa\u672c\u683c\u5f0f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/1.Intro/#2-makefile-\u89c4\u5219","text":"make \u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u627e\u5230\u4e00\u4e2a\u540d\u5b57\u53eb Makefile \u6216 makefile \u7684\u6587\u4ef6 \u5982\u679c\u627e\u5230\uff0c\u5b83\u4f1a\u627e\u6587\u4ef6\u4e2d\u7b2c\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff08target\uff09\uff0c\u5e76\u628a\u8fd9\u4e2a\u6587\u4ef6\u4f5c\u4e3a\u6700\u7ec8\u7684\u76ee\u6807\u6587\u4ef6 \u5982\u679c target \u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u6216\u662f target \u6587\u4ef6\u4f9d\u8d56\u7684 .o \u6587\u4ef6(prerequities)\u7684\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u8981\u6bd4 target \u8fd9\u4e2a\u6587\u4ef6\u65b0\uff0c\u5c31\u4f1a\u6267\u884c\u540e\u9762\u6240\u5b9a\u4e49\u7684\u547d\u4ee4 command \u6765\u751f\u6210 target \u8fd9\u4e2a\u6587\u4ef6 \u5982\u679c target \u4f9d\u8d56\u7684 .o \u6587\u4ef6\uff08prerequisties\uff09\u4e5f\u5b58\u5728\uff0cmake \u4f1a\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u627e\u5230 target \u4e3a .o \u6587\u4ef6\u7684\u4f9d\u8d56\u6027\uff0c\u5982\u679c\u627e\u5230\uff0c\u518d\u6839\u636e\u90a3\u4e2a\u89c4\u5219\u751f\u6210 .o \u6587\u4ef6","title":"2 Makefile \u89c4\u5219"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/1.Intro/#3-\u4f2a\u76ee\u6807","text":"\"\u4f2a\u76ee\u6807\" \u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ea\u662f\u4e00\u4e2a\u6807\u7b7e\u3002\u6211\u4eec\u8981\u663e\u793a\u5730\u6307\u660e\u8fd9\u4e2a \"\u76ee\u6807\" \u624d\u80fd\u8ba9\u5176\u751f\u6548 \"\u4f2a\u76ee\u6807\" \u7684\u53d6\u540d\u4e0d\u80fd\u548c\u6587\u4ef6\u540d\u91cd\u540d\uff0c\u5426\u5219\u4e0d\u4f1a\u6267\u884c\u547d\u4ee4 \u4e3a\u4e86\u907f\u514d\u548c\u6587\u4ef6\u91cd\u540d\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0 .PHONY \u6765\u663e\u793a\u5730\u6307\u660e\u4e00\u4e2a\u76ee\u6807\u662f\u201c\u4f2a\u76ee\u6807\u201d\uff0c\u5411 make \u8bf4\u660e\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u76ee\u6807\u5c31\u662f \"\u4f2a\u76ee\u6807\" .PHONY : clean \u53ea\u8981\u6709\u8fd9\u4e2a\u58f0\u660e\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u201cclean\u201d\u6587\u4ef6\uff0c\u8981\u8fd0\u884c \"clean\" \u8fd9\u4e2a\u76ee\u6807\uff0c\u53ea\u6709\"make clean\" \u8fd9\u4e2a\u547d\u4ee4","title":"3 \u4f2a\u76ee\u6807"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/2.Variable/","text":"Makefile \u7684\u53d8\u91cf # \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u9700\u8981\u7ed9\u4e88\u521d\u503c\uff0c\u800c\u5728\u4f7f\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a $ \u7b26\u53f7\uff0c\u5e76\u7528\u5c0f\u62ec\u53f7 () \u628a\u53d8\u91cf\u7ed9\u5305\u62ec\u8d77\u6765\u3002 \u2003 1 \u53d8\u91cf\u7684\u5b9a\u4e49 # cpp := src/main.cpp obj := objs/main.o 2 \u53d8\u91cf\u7684\u5f15\u7528 # \u53ef\u4ee5\u7528 () \u6216 {} cpp := src/main.cpp obj := objs/main.o $(obj) : ${ cpp } @g++ -c $( cpp ) -o $( obj ) compile : $( obj ) \u2003 3 \u9884\u5b9a\u4e49\u53d8\u91cf # $@ : \u76ee\u6807(target)\u7684\u5b8c\u6574\u540d\u79f0 $< : \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\uff08prerequisties\uff09\u7684\u540d\u79f0 $^ : \u6240\u6709\u7684\u4f9d\u8d56\u6587\u4ef6\uff08prerequisties\uff09\uff0c\u4ee5\u7a7a\u683c\u5206\u5f00\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u7684\u4f9d\u8d56\u6587\u4ef6 cpp := src/main.cpp obj := objs/main.o $(obj) : ${ cpp } @g++ -c $< -o $@ @echo $^ compile : $( obj ) .PHONY : compile \u2003 4 #","title":"2.Variable"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/2.Variable/#makefile-\u7684\u53d8\u91cf","text":"\u53d8\u91cf\u5728\u58f0\u660e\u65f6\u9700\u8981\u7ed9\u4e88\u521d\u503c\uff0c\u800c\u5728\u4f7f\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a $ \u7b26\u53f7\uff0c\u5e76\u7528\u5c0f\u62ec\u53f7 () \u628a\u53d8\u91cf\u7ed9\u5305\u62ec\u8d77\u6765\u3002","title":"Makefile \u7684\u53d8\u91cf"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/2.Variable/#1-\u53d8\u91cf\u7684\u5b9a\u4e49","text":"cpp := src/main.cpp obj := objs/main.o","title":"1 \u53d8\u91cf\u7684\u5b9a\u4e49"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/2.Variable/#2-\u53d8\u91cf\u7684\u5f15\u7528","text":"\u53ef\u4ee5\u7528 () \u6216 {} cpp := src/main.cpp obj := objs/main.o $(obj) : ${ cpp } @g++ -c $( cpp ) -o $( obj ) compile : $( obj )","title":"2 \u53d8\u91cf\u7684\u5f15\u7528"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/2.Variable/#3-\u9884\u5b9a\u4e49\u53d8\u91cf","text":"$@ : \u76ee\u6807(target)\u7684\u5b8c\u6574\u540d\u79f0 $< : \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\uff08prerequisties\uff09\u7684\u540d\u79f0 $^ : \u6240\u6709\u7684\u4f9d\u8d56\u6587\u4ef6\uff08prerequisties\uff09\uff0c\u4ee5\u7a7a\u683c\u5206\u5f00\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u7684\u4f9d\u8d56\u6587\u4ef6 cpp := src/main.cpp obj := objs/main.o $(obj) : ${ cpp } @g++ -c $< -o $@ @echo $^ compile : $( obj ) .PHONY : compile","title":"3 \u9884\u5b9a\u4e49\u53d8\u91cf"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/2.Variable/#4","text":"","title":"4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/","text":"Makefile \u5e38\u7528\u7b26\u53f7 # 1 = # \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 \u7528\u4e8e\u5c06\u53f3\u8fb9\u7684\u503c\u5206\u914d\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf \u5982\u679c\u5728\u540e\u9762\u7684\u8bed\u53e5\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86\u8be5\u53d8\u91cf\uff0c\u5219\u5c06\u4f7f\u7528\u65b0\u7684\u503c \u793a\u4f8b HOST_ARCH = aarch64 TARGET_ARCH = $( HOST_ARCH ) # \u66f4\u6539\u4e86\u53d8\u91cf a HOST_ARCH = amd64 debug : @echo $( TARGET_ARCH ) 2 := # \u7acb\u5373\u8d4b\u503c\u8fd0\u7b97\u7b26 \u7528\u4e8e\u5728\u5b9a\u4e49\u53d8\u91cf\u65f6\u7acb\u5373\u6c42\u503c \u8be5\u503c\u5728\u5b9a\u4e49\u540e\u4e0d\u518d\u66f4\u6539 \u5373\u4f7f\u5728\u540e\u9762\u7684\u8bed\u53e5\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86\u8be5\u53d8\u91cf \u793a\u4f8b HOST_ARCH := aarch64 TARGET_ARCH := $( HOST_ARCH ) # \u66f4\u6539\u4e86\u53d8\u91cf a HOST_ARCH := amd64 debug : @echo $( TARGET_ARCH ) \u2003 3 ?= # \u9ed8\u8ba4\u8d4b\u503c\u8fd0\u7b97\u7b26 \u5982\u679c\u8be5\u53d8\u91cf\u5df2\u7ecf\u5b9a\u4e49\uff0c\u5219\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c \u5982\u679c\u8be5\u53d8\u91cf\u5c1a\u672a\u5b9a\u4e49\uff0c\u5219\u6c42\u503c\u5e76\u5206\u914d HOST_ARCH = aarch64 HOST_ARCH ?= amd64 debug : @echo $( HOST_ARCH ) \u2003 4 \u7d2f\u52a0 += # CXXFLAGS := -m64 -fPIC -g -O0 -std = c++11 -w -fopenmp CXXFLAGS += $( include_paths ) \u2003 ## 5 \\ - \u7eed\u884c\u7b26 \u793a\u4f8b LDLIBS := cudart opencv_core \\ gomp nvinfer protobuf cudnn pthread \\ cublas nvcaffe_parser nvinfer_plugin \u2003 6 * \u4e0e % # * : \u901a\u914d\u7b26\u8868\u793a\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7528\u5728\u76ee\u5f55\u540d\u6216\u6587\u4ef6\u540d\u4e2d % : \u901a\u914d\u7b26\u8868\u793a\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53d8\u91cf\u4f7f\u7528","title":"3.Operator&Symbols"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/#makefile-\u5e38\u7528\u7b26\u53f7","text":"","title":"Makefile \u5e38\u7528\u7b26\u53f7"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/#1-","text":"\u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 \u7528\u4e8e\u5c06\u53f3\u8fb9\u7684\u503c\u5206\u914d\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf \u5982\u679c\u5728\u540e\u9762\u7684\u8bed\u53e5\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86\u8be5\u53d8\u91cf\uff0c\u5219\u5c06\u4f7f\u7528\u65b0\u7684\u503c \u793a\u4f8b HOST_ARCH = aarch64 TARGET_ARCH = $( HOST_ARCH ) # \u66f4\u6539\u4e86\u53d8\u91cf a HOST_ARCH = amd64 debug : @echo $( TARGET_ARCH )","title":"1 ="},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/#2-","text":"\u7acb\u5373\u8d4b\u503c\u8fd0\u7b97\u7b26 \u7528\u4e8e\u5728\u5b9a\u4e49\u53d8\u91cf\u65f6\u7acb\u5373\u6c42\u503c \u8be5\u503c\u5728\u5b9a\u4e49\u540e\u4e0d\u518d\u66f4\u6539 \u5373\u4f7f\u5728\u540e\u9762\u7684\u8bed\u53e5\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86\u8be5\u53d8\u91cf \u793a\u4f8b HOST_ARCH := aarch64 TARGET_ARCH := $( HOST_ARCH ) # \u66f4\u6539\u4e86\u53d8\u91cf a HOST_ARCH := amd64 debug : @echo $( TARGET_ARCH )","title":"2 :="},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/#3-","text":"\u9ed8\u8ba4\u8d4b\u503c\u8fd0\u7b97\u7b26 \u5982\u679c\u8be5\u53d8\u91cf\u5df2\u7ecf\u5b9a\u4e49\uff0c\u5219\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c \u5982\u679c\u8be5\u53d8\u91cf\u5c1a\u672a\u5b9a\u4e49\uff0c\u5219\u6c42\u503c\u5e76\u5206\u914d HOST_ARCH = aarch64 HOST_ARCH ?= amd64 debug : @echo $( HOST_ARCH )","title":"3 ?="},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/#4-\u7d2f\u52a0-","text":"CXXFLAGS := -m64 -fPIC -g -O0 -std = c++11 -w -fopenmp CXXFLAGS += $( include_paths ) \u2003 ## 5 \\ - \u7eed\u884c\u7b26 \u793a\u4f8b LDLIBS := cudart opencv_core \\ gomp nvinfer protobuf cudnn pthread \\ cublas nvcaffe_parser nvinfer_plugin","title":"4 \u7d2f\u52a0 +="},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/3.Operator%26Symbols/#6--\u4e0e-","text":"* : \u901a\u914d\u7b26\u8868\u793a\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7528\u5728\u76ee\u5f55\u540d\u6216\u6587\u4ef6\u540d\u4e2d % : \u901a\u914d\u7b26\u8868\u793a\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53d8\u91cf\u4f7f\u7528","title":"6 * \u4e0e %"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/","text":"Makefile \u7684\u5e38\u7528\u51fd\u6570 # \u51fd\u6570\u8c03\u7528\uff0c\u5f88\u50cf\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u4e5f\u662f\u4ee5 \u201c$\u201d \u6765\u6807\u8bc6\u7684\uff0c\u5176\u8bed\u6cd5\u5982\u4e0b\uff1a $( fn , arguments ) or ${fn, arguments} - fn: \u51fd\u6570\u540d - arguments: \u51fd\u6570\u53c2\u6570\uff0c\u53c2\u6570\u95f4\u4ee5\u9017\u53f7 , \u5206\u9694\uff0c\u800c\u51fd\u6570\u540d\u548c\u53c2\u6570\u4e4b\u95f4\u4ee5\u201c\u7a7a\u683c\u201d\u5206\u9694 \u2003 1 shell # $( shell < command > < arguments > ) - \u540d\u79f0\uff1ashell \u547d\u4ee4\u51fd\u6570 \u2014\u2014 shell - \u529f\u80fd\uff1a\u8c03\u7528 shell \u547d\u4ee4 command - \u8fd4\u56de\uff1a\u51fd\u6570\u8fd4\u56de shell \u547d\u4ee4 command \u7684\u6267\u884c\u7ed3\u679c \u793a\u4f8b # shell \u6307\u4ee4\uff0csrc \u6587\u4ef6\u5939\u4e0b\u627e\u5230 .cpp \u6587\u4ef6 cpp_srcs := $( shell find src -name \"*.cpp\" ) # shell \u6307\u4ee4, \u83b7\u53d6\u8ba1\u7b97\u673a\u67b6\u6784 HOST_ARCH := $( shell uname -m ) \u2003 2 subst # $( subst < from >,< to >,< text > ) - \u540d\u79f0\uff1a\u5b57\u7b26\u4e32\u66ff\u6362\u51fd\u6570\u2014\u2014subst - \u529f\u80fd\uff1a\u628a\u5b57\u4e32 \\ \u4e2d\u7684 \\ \u5b57\u7b26\u4e32\u66ff\u6362\u6210 \\ - \u8fd4\u56de\uff1a\u51fd\u6570\u8fd4\u56de\u88ab\u66ff\u6362\u8fc7\u540e\u7684\u5b57\u7b26\u4e32 \u793a\u4f8b\uff1a cpp_srcs := $( shell find src -name \"*.cpp\" ) cpp_objs := $( subst src/,objs/, $( cpp_objs )) \u2003 3 patsubst # $( patsubst < pattern >,< replacement >,< text > ) - \u540d\u79f0\uff1a\u6a21\u5f0f\u5b57\u7b26\u4e32\u66ff\u6362\u51fd\u6570 \u2014\u2014 patsubst - \u529f\u80fd\uff1a\u901a\u914d\u7b26 % \uff0c\u8868\u793a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u4e32\uff0c\u4ece text \u4e2d\u53d6\u51fa patttern\uff0c \u66ff\u6362\u6210 replacement - \u8fd4\u56de\uff1a\u51fd\u6570\u8fd4\u56de\u88ab\u66ff\u6362\u8fc7\u540e\u7684\u5b57\u7b26\u4e32 \u793a\u4f8b cpp_srcs := $( shell find src -name \"*.cpp\" ) #shell\u6307\u4ee4\uff0csrc\u6587\u4ef6\u5939\u4e0b\u627e\u5230.cpp\u6587\u4ef6 cpp_objs := $( patsubst %.cpp,%.o, $( cpp_srcs )) #cpp_srcs\u53d8\u91cf\u4e0bcpp\u6587\u4ef6\u66ff\u6362\u6210 .o\u6587\u4ef6 \u2003 4 foreach # $( foreach < var >,< list >,< text > ) - \u540d\u79f0\uff1a\u5faa\u73af\u51fd\u6570\u2014\u2014foreach\u3002 - \u529f\u80fd\uff1a\u628a\u5b57\u4e32\\ \u4e2d\u7684\u5143\u7d20\u9010\u4e00\u53d6\u51fa\u6765\uff0c\u6267\u884c\\ \u5305\u542b\u7684\u8868\u8fbe\u5f0f - \u8fd4\u56de\uff1a\\ \u6240\u8fd4\u56de\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6240\u7ec4\u6210\u7684\u6574\u4e2a\u5b57\u7b26\u4e32\uff08\u4ee5\u7a7a\u683c\u5206\u9694\uff09 \u793a\u4f8b\uff1a library_paths := /datav/shared/100_du/03.08/lean/protobuf-3.11.4/lib \\ /usr/local/cuda-10.1/lib64 \\ library_paths := $( foreach item, $( library_paths ) ,-L $( item )) \u540c\u7b49\u6548\u679c I_flag := $( include_paths:% = -I% ) \u2003 5 dir # $( dir < names... > ) - \u540d\u79f0\uff1a\u53d6\u76ee\u5f55\u51fd\u6570\u2014\u2014dir\u3002 - \u529f\u80fd\uff1a\u4ece\u6587\u4ef6\u540d\u5e8f\u5217 \u4e2d\u53d6\u51fa\u76ee\u5f55\u90e8\u5206\u3002\u76ee\u5f55\u90e8\u5206\u662f\u6307\u6700\u540e\u4e00\u4e2a\u53cd\u659c\u6760\uff08\u201c/\u201d\uff09\u4e4b\u524d \u7684\u90e8\u5206\u3002\u5982\u679c\u6ca1\u6709\u53cd\u659c\u6760\uff0c\u90a3\u4e48\u8fd4\u56de\u201c./\u201d\u3002 - \u8fd4\u56de\uff1a\u8fd4\u56de\u6587\u4ef6\u540d\u5e8f\u5217 \u7684\u76ee\u5f55\u90e8\u5206\u3002 - \u793a\u4f8b\uff1a $( dir src / foo.c hacks ) # \u8fd4\u56de\u503c\u662f\u201csrc/ ./\u201d\u3002 \u2003 6 notdir # $( notdir < names... > ) \u793a\u4f8b libs := $( notdir $( shell find /usr/lib -name lib* )) \u2003 7 filter # $( filter < names... > ) libs := $( notdir $( shell find /usr/lib -name lib* )) a_libs := $( filter %.a, $( libs )) so_libs := $( filter %.so, $( libs )) \u2003 8 basename # $( basename < names... > ) libs := $( notdir $( shell find /usr/lib -name lib* )) a_libs := $( subst lib,, $( basename $( filter %.a, $( libs )))) so_libs := $( subst lib,, $( basename $( filter %.so, $( libs ))))","title":"4.Functions"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#makefile-\u7684\u5e38\u7528\u51fd\u6570","text":"\u51fd\u6570\u8c03\u7528\uff0c\u5f88\u50cf\u53d8\u91cf\u7684\u4f7f\u7528\uff0c\u4e5f\u662f\u4ee5 \u201c$\u201d \u6765\u6807\u8bc6\u7684\uff0c\u5176\u8bed\u6cd5\u5982\u4e0b\uff1a $( fn , arguments ) or ${fn, arguments} - fn: \u51fd\u6570\u540d - arguments: \u51fd\u6570\u53c2\u6570\uff0c\u53c2\u6570\u95f4\u4ee5\u9017\u53f7 , \u5206\u9694\uff0c\u800c\u51fd\u6570\u540d\u548c\u53c2\u6570\u4e4b\u95f4\u4ee5\u201c\u7a7a\u683c\u201d\u5206\u9694","title":"Makefile \u7684\u5e38\u7528\u51fd\u6570"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#1-shell","text":"$( shell < command > < arguments > ) - \u540d\u79f0\uff1ashell \u547d\u4ee4\u51fd\u6570 \u2014\u2014 shell - \u529f\u80fd\uff1a\u8c03\u7528 shell \u547d\u4ee4 command - \u8fd4\u56de\uff1a\u51fd\u6570\u8fd4\u56de shell \u547d\u4ee4 command \u7684\u6267\u884c\u7ed3\u679c \u793a\u4f8b # shell \u6307\u4ee4\uff0csrc \u6587\u4ef6\u5939\u4e0b\u627e\u5230 .cpp \u6587\u4ef6 cpp_srcs := $( shell find src -name \"*.cpp\" ) # shell \u6307\u4ee4, \u83b7\u53d6\u8ba1\u7b97\u673a\u67b6\u6784 HOST_ARCH := $( shell uname -m )","title":"1 shell"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#2-subst","text":"$( subst < from >,< to >,< text > ) - \u540d\u79f0\uff1a\u5b57\u7b26\u4e32\u66ff\u6362\u51fd\u6570\u2014\u2014subst - \u529f\u80fd\uff1a\u628a\u5b57\u4e32 \\ \u4e2d\u7684 \\ \u5b57\u7b26\u4e32\u66ff\u6362\u6210 \\ - \u8fd4\u56de\uff1a\u51fd\u6570\u8fd4\u56de\u88ab\u66ff\u6362\u8fc7\u540e\u7684\u5b57\u7b26\u4e32 \u793a\u4f8b\uff1a cpp_srcs := $( shell find src -name \"*.cpp\" ) cpp_objs := $( subst src/,objs/, $( cpp_objs ))","title":"2 subst"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#3-patsubst","text":"$( patsubst < pattern >,< replacement >,< text > ) - \u540d\u79f0\uff1a\u6a21\u5f0f\u5b57\u7b26\u4e32\u66ff\u6362\u51fd\u6570 \u2014\u2014 patsubst - \u529f\u80fd\uff1a\u901a\u914d\u7b26 % \uff0c\u8868\u793a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u4e32\uff0c\u4ece text \u4e2d\u53d6\u51fa patttern\uff0c \u66ff\u6362\u6210 replacement - \u8fd4\u56de\uff1a\u51fd\u6570\u8fd4\u56de\u88ab\u66ff\u6362\u8fc7\u540e\u7684\u5b57\u7b26\u4e32 \u793a\u4f8b cpp_srcs := $( shell find src -name \"*.cpp\" ) #shell\u6307\u4ee4\uff0csrc\u6587\u4ef6\u5939\u4e0b\u627e\u5230.cpp\u6587\u4ef6 cpp_objs := $( patsubst %.cpp,%.o, $( cpp_srcs )) #cpp_srcs\u53d8\u91cf\u4e0bcpp\u6587\u4ef6\u66ff\u6362\u6210 .o\u6587\u4ef6","title":"3 patsubst"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#4-foreach","text":"$( foreach < var >,< list >,< text > ) - \u540d\u79f0\uff1a\u5faa\u73af\u51fd\u6570\u2014\u2014foreach\u3002 - \u529f\u80fd\uff1a\u628a\u5b57\u4e32\\ \u4e2d\u7684\u5143\u7d20\u9010\u4e00\u53d6\u51fa\u6765\uff0c\u6267\u884c\\ \u5305\u542b\u7684\u8868\u8fbe\u5f0f - \u8fd4\u56de\uff1a\\ \u6240\u8fd4\u56de\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6240\u7ec4\u6210\u7684\u6574\u4e2a\u5b57\u7b26\u4e32\uff08\u4ee5\u7a7a\u683c\u5206\u9694\uff09 \u793a\u4f8b\uff1a library_paths := /datav/shared/100_du/03.08/lean/protobuf-3.11.4/lib \\ /usr/local/cuda-10.1/lib64 \\ library_paths := $( foreach item, $( library_paths ) ,-L $( item )) \u540c\u7b49\u6548\u679c I_flag := $( include_paths:% = -I% )","title":"4 foreach"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#5-dir","text":"$( dir < names... > ) - \u540d\u79f0\uff1a\u53d6\u76ee\u5f55\u51fd\u6570\u2014\u2014dir\u3002 - \u529f\u80fd\uff1a\u4ece\u6587\u4ef6\u540d\u5e8f\u5217 \u4e2d\u53d6\u51fa\u76ee\u5f55\u90e8\u5206\u3002\u76ee\u5f55\u90e8\u5206\u662f\u6307\u6700\u540e\u4e00\u4e2a\u53cd\u659c\u6760\uff08\u201c/\u201d\uff09\u4e4b\u524d \u7684\u90e8\u5206\u3002\u5982\u679c\u6ca1\u6709\u53cd\u659c\u6760\uff0c\u90a3\u4e48\u8fd4\u56de\u201c./\u201d\u3002 - \u8fd4\u56de\uff1a\u8fd4\u56de\u6587\u4ef6\u540d\u5e8f\u5217 \u7684\u76ee\u5f55\u90e8\u5206\u3002 - \u793a\u4f8b\uff1a $( dir src / foo.c hacks ) # \u8fd4\u56de\u503c\u662f\u201csrc/ ./\u201d\u3002","title":"5 dir"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#6-notdir","text":"$( notdir < names... > ) \u793a\u4f8b libs := $( notdir $( shell find /usr/lib -name lib* ))","title":"6 notdir"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#7-filter","text":"$( filter < names... > ) libs := $( notdir $( shell find /usr/lib -name lib* )) a_libs := $( filter %.a, $( libs )) so_libs := $( filter %.so, $( libs ))","title":"7 filter"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/4.Functions/#8-basename","text":"$( basename < names... > ) libs := $( notdir $( shell find /usr/lib -name lib* )) a_libs := $( subst lib,, $( basename $( filter %.a, $( libs )))) so_libs := $( subst lib,, $( basename $( filter %.so, $( libs ))))","title":"8 basename"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/5.ConditionalStatement/","text":"Conditional Rules # \u6ce8\u610f\uff1a - Condition \u8bed\u53e5\u91cc\u9762\u5168\u90e8\u4e0d\u80fd\u7528 Tab \u7f29\u8fdb, \u4f60\u770b\u5230\u7684 Makefile \u5982\u679c\u597d\u50cf\u6709 \"Tab\", \u90a3\u5168\u90e8\u662f\u7a7a\u683c - \u4f7f\u7528 Tab \u4f1a\u62a5\u9519\uff1a*** commands commence before first target 1 ifeq / else / endif # # build flags ifeq ($(TARGET_OS),darwin) LDFLAGS += -rpath $( CUDA_PATH ) /lib CCFLAGS += -arch $( HOST_ARCH ) else ifeq ($(HOST_ARCH)-$(TARGET_ARCH)-$(TARGET_OS),x86_64-armv7l-linux) LDFLAGS += --dynamic-linker = /lib/ld-linux-armhf.so.3 CCFLAGS += -mfloat-abi = hard else ifeq ($(TARGET_OS),android) LDFLAGS += -pie CCFLAGS += -fpie -fpic -fexceptions endif \u2003 2 ifneq / else / endif # HOST_ARCH := $( shell uname -m ) TARGET_ARCH ?= $( HOST_ARCH ) temp := $( filter $( TARGET_ARCH ) ,x86_64 aarch64 sbsa ppc64le armv7l ) ifneq (,$(filter $(TARGET_ARCH),x86_64 aarch64 sbsa ppc64le armv7l)) ifneq ($(TARGET_ARCH),$(HOST_ARCH)) ifneq (,$(filter $(TARGET_ARCH),x86_64 aarch64 sbsa ppc64le)) TARGET_SIZE : = 64 else ifneq (,$(filter $(TARGET_ARCH),armv7l)) TARGET_SIZE : = 32 endif else TARGET_SIZE : = $( shell getconf LONG_BIT ) endif else $( error ERROR - unsupported value $( TARGET_ARCH ) for TARGET_ARCH! ) endif \u2003 3 ifdef / else / endif # ifdef TARGET_OVERRIDE # cuda toolkit targets override NVCCFLAGS += -target-dir $( TARGET_OVERRIDE ) endif","title":"5.ConditionalStatement"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/5.ConditionalStatement/#conditional-rules","text":"\u6ce8\u610f\uff1a - Condition \u8bed\u53e5\u91cc\u9762\u5168\u90e8\u4e0d\u80fd\u7528 Tab \u7f29\u8fdb, \u4f60\u770b\u5230\u7684 Makefile \u5982\u679c\u597d\u50cf\u6709 \"Tab\", \u90a3\u5168\u90e8\u662f\u7a7a\u683c - \u4f7f\u7528 Tab \u4f1a\u62a5\u9519\uff1a*** commands commence before first target","title":"Conditional Rules"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/5.ConditionalStatement/#1-ifeq--else--endif","text":"# build flags ifeq ($(TARGET_OS),darwin) LDFLAGS += -rpath $( CUDA_PATH ) /lib CCFLAGS += -arch $( HOST_ARCH ) else ifeq ($(HOST_ARCH)-$(TARGET_ARCH)-$(TARGET_OS),x86_64-armv7l-linux) LDFLAGS += --dynamic-linker = /lib/ld-linux-armhf.so.3 CCFLAGS += -mfloat-abi = hard else ifeq ($(TARGET_OS),android) LDFLAGS += -pie CCFLAGS += -fpie -fpic -fexceptions endif","title":"1 ifeq / else / endif"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/5.ConditionalStatement/#2-ifneq--else--endif","text":"HOST_ARCH := $( shell uname -m ) TARGET_ARCH ?= $( HOST_ARCH ) temp := $( filter $( TARGET_ARCH ) ,x86_64 aarch64 sbsa ppc64le armv7l ) ifneq (,$(filter $(TARGET_ARCH),x86_64 aarch64 sbsa ppc64le armv7l)) ifneq ($(TARGET_ARCH),$(HOST_ARCH)) ifneq (,$(filter $(TARGET_ARCH),x86_64 aarch64 sbsa ppc64le)) TARGET_SIZE : = 64 else ifneq (,$(filter $(TARGET_ARCH),armv7l)) TARGET_SIZE : = 32 endif else TARGET_SIZE : = $( shell getconf LONG_BIT ) endif else $( error ERROR - unsupported value $( TARGET_ARCH ) for TARGET_ARCH! ) endif","title":"2 ifneq / else / endif"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/5.ConditionalStatement/#3-ifdef--else--endif","text":"ifdef TARGET_OVERRIDE # cuda toolkit targets override NVCCFLAGS += -target-dir $( TARGET_OVERRIDE ) endif","title":"3 ifdef / else / endif"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/","text":"Compile # 1 \u7f16\u8bd1\u8fc7\u7a0b # 1.1 \u9884\u5904\u7406 # \u793a\u4f8b cpp_srcs := $( shell find src -name *.cpp ) pp_files := $( patsubst src/%.cpp,src/%.i, $( cpp_srcs )) src/%.i : src /%. cpp @g++ -E $^ -o $@ preprocess : $( pp_files ) clean : @rm -f src/*.i debug : @echo $( pp_files ) .PHONY : debug preprocess clean \u2003 1.2 \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00 # \u793a\u4f8b cpp_srcs := $( shell find src -name *.cpp ) as_files := $( patsubst src/%.cpp,src/%.s, $( cpp_srcs )) src/%.s : src /%. cpp @g++ -S $^ -o $@ assemble : $( as_files ) clean : @rm -f src/*.s debug : @echo $( as_files ) .PHONY : debug assemble clean \u2003 1.3 \u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 # \u793a\u4f8b cpp_srcs := $( shell find src -name *.cpp ) cpp_objs := $( patsubst src/%.cpp,objs/%.o, $( cpp_srcs )) objs/%.o : src /%. cpp @mkdir -p $( dir $@ ) @g++ -c $^ -o $@ objects : $( cpp_objs ) clean : @rm -rf objs src/*.o debug : @echo $( as_files ) .PHONY : debug objects clean \u2003 1.4 \u94fe\u63a5\u53ef\u6267\u884c\u6587\u4ef6 # cpp_srcs := $( shell find src -name *.cpp ) cpp_objs := $( patsubst src/%.cpp,objs/%.o, $( cpp_srcs )) objs/%.o : src /%. cpp @mkdir -p $( dir $@ ) @g++ -c $^ -o $@ workspace/exec : $( cpp_objs ) @mkdir workspace/exec @g++ $^ -o $@ run : workspace @./$< clean : @rm -rf objs workspace/exec debug : @echo $( as_files ) .PHONY : debug run clean \u2003 2 \u7f16\u8bd1\u9009\u9879 # \u7f16\u8bd1\u9009\u9879 - -m64 : \u6307\u5b9a\u7f16\u8bd1\u4e3a 64 \u4f4d\u5e94\u7528\u7a0b\u5e8f - -std= : \u6307\u5b9a\u7f16\u8bd1\u6807\u51c6\uff0c\u4f8b\u5982\uff1a-std=c++11\u3001-std=c++14 - -g : \u5305\u542b\u8c03\u8bd5\u4fe1\u606f - -w : \u4e0d\u663e\u793a\u8b66\u544a - -O : \u4f18\u5316\u7b49\u7ea7\uff0c\u901a\u5e38\u4f7f\u7528\uff1a-O3 - -I : \u52a0\u5728\u5934\u6587\u4ef6\u8def\u5f84\u524d - fPIC : (Position-Independent Code), \u4ea7\u751f\u7684\u6ca1\u6709\u7edd\u5bf9\u5730\u5740\uff0c\u5168\u90e8\u4f7f\u7528\u76f8\u5bf9\u5730\u5740\uff0c\u4ee3\u7801\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u4e14\u53ef\u4ee5\u6b63\u786e\u7684\u6267\u884c\u3002\u8fd9\u6b63\u662f\u5171\u4eab\u5e93\u6240\u8981\u6c42\u7684\uff0c\u5171\u4eab\u5e93\u88ab\u52a0\u8f7d\u65f6\uff0c\u5728\u5185\u5b58\u7684\u4f4d\u7f6e\u4e0d\u662f\u56fa\u5b9a\u7684 \u94fe\u63a5\u9009\u9879 - -l : \u52a0\u5728\u5e93\u540d\u524d\u9762 - -L : \u52a0\u5728\u5e93\u8def\u5f84\u524d\u9762 - -Wl,<\u9009\u9879> : \u5c06\u9017\u53f7\u5206\u9694\u7684 <\u9009\u9879> \u4f20\u9012\u7ed9\u94fe\u63a5\u5668 - -rpath= : \"\u8fd0\u884c\" \u7684\u65f6\u5019\uff0c\u53bb\u627e\u7684\u76ee\u5f55\u3002\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u8981\u627e .so \u6587\u4ef6\uff0c\u4f1a\u4ece\u8fd9\u4e2a\u9009\u9879\u91cc\u6307\u5b9a\u7684\u5730\u65b9\u53bb\u627e \u2003 3 Implicit Rules # CC: Program for compiling C programs; default cc CXX: Program for compiling C++ programs; default g++ CFLAGS: Extra flags to give to the C compiler CXXFLAGS: Extra flags to give to the C++ compiler CPPFLAGS: Extra flags to give to the C preprocessor LDFLAGS: Extra flags to give to compilers when they are supposed to invoke the linker \u2003 4 \u7f16\u8bd1\u5e26\u5934\u6587\u4ef6\u7684\u7a0b\u5e8f # add.hpp #ifndef ADD_HPP #define ADD_HPP int add ( int a , int b ); #endif // ADD_HPP add.cpp int add ( int a , int b ) { return a + b ; } minus.hpp #ifndef MINUS_HPP #define MINUS_HPP int minus ( int a , int b ); #endif // MINUS_HPP minus.cpp int minus ( int a , int b ) { return a - b ; } main.cpp #include <stdio.h> #include \"add.hpp\" #include \"minus.hpp\" int main () { int a = 10 ; int b = 5 ; int res = add ( a , b ); printf ( \"a + b = %d \\n \" , res ); res = minus ( a , b ); printf ( \"a - b = %d \\n \" , res ); return 0 ; } Makefile cpp_srcs := $( shell find src -name *.cpp ) cpp_objs := $( patsubst src/%.cpp,objs/%.o, $( cpp_srcs )) # \u4f60\u7684\u5934\u6587\u4ef6\u6240\u5728\u6587\u4ef6\u5939\u8def\u5f84\uff08\u5efa\u8bae\u7edd\u5bf9\u8def\u5f84\uff09 include_paths := I_flag := $( include_paths:% = -I% ) objs/%.o : src /%. cpp @mkdir -p $( dir $@ ) @g++ -c $^ -o $@ $( I_flag ) workspace/exec : $( cpp_objs ) @mkdir -p $( dir $@ ) @g++ $^ -o $@ run : workspace / exec @./$< debug : @echo $( I_flag ) clean : @rm -rf objs .PHONY : debug run","title":"6.Compile"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#compile","text":"","title":"Compile"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#1-\u7f16\u8bd1\u8fc7\u7a0b","text":"","title":"1 \u7f16\u8bd1\u8fc7\u7a0b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#11-\u9884\u5904\u7406","text":"\u793a\u4f8b cpp_srcs := $( shell find src -name *.cpp ) pp_files := $( patsubst src/%.cpp,src/%.i, $( cpp_srcs )) src/%.i : src /%. cpp @g++ -E $^ -o $@ preprocess : $( pp_files ) clean : @rm -f src/*.i debug : @echo $( pp_files ) .PHONY : debug preprocess clean","title":"1.1 \u9884\u5904\u7406"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#12-\u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00","text":"\u793a\u4f8b cpp_srcs := $( shell find src -name *.cpp ) as_files := $( patsubst src/%.cpp,src/%.s, $( cpp_srcs )) src/%.s : src /%. cpp @g++ -S $^ -o $@ assemble : $( as_files ) clean : @rm -f src/*.s debug : @echo $( as_files ) .PHONY : debug assemble clean","title":"1.2 \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#13-\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6","text":"\u793a\u4f8b cpp_srcs := $( shell find src -name *.cpp ) cpp_objs := $( patsubst src/%.cpp,objs/%.o, $( cpp_srcs )) objs/%.o : src /%. cpp @mkdir -p $( dir $@ ) @g++ -c $^ -o $@ objects : $( cpp_objs ) clean : @rm -rf objs src/*.o debug : @echo $( as_files ) .PHONY : debug objects clean","title":"1.3 \u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#14-\u94fe\u63a5\u53ef\u6267\u884c\u6587\u4ef6","text":"cpp_srcs := $( shell find src -name *.cpp ) cpp_objs := $( patsubst src/%.cpp,objs/%.o, $( cpp_srcs )) objs/%.o : src /%. cpp @mkdir -p $( dir $@ ) @g++ -c $^ -o $@ workspace/exec : $( cpp_objs ) @mkdir workspace/exec @g++ $^ -o $@ run : workspace @./$< clean : @rm -rf objs workspace/exec debug : @echo $( as_files ) .PHONY : debug run clean","title":"1.4 \u94fe\u63a5\u53ef\u6267\u884c\u6587\u4ef6"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#2-\u7f16\u8bd1\u9009\u9879","text":"\u7f16\u8bd1\u9009\u9879 - -m64 : \u6307\u5b9a\u7f16\u8bd1\u4e3a 64 \u4f4d\u5e94\u7528\u7a0b\u5e8f - -std= : \u6307\u5b9a\u7f16\u8bd1\u6807\u51c6\uff0c\u4f8b\u5982\uff1a-std=c++11\u3001-std=c++14 - -g : \u5305\u542b\u8c03\u8bd5\u4fe1\u606f - -w : \u4e0d\u663e\u793a\u8b66\u544a - -O : \u4f18\u5316\u7b49\u7ea7\uff0c\u901a\u5e38\u4f7f\u7528\uff1a-O3 - -I : \u52a0\u5728\u5934\u6587\u4ef6\u8def\u5f84\u524d - fPIC : (Position-Independent Code), \u4ea7\u751f\u7684\u6ca1\u6709\u7edd\u5bf9\u5730\u5740\uff0c\u5168\u90e8\u4f7f\u7528\u76f8\u5bf9\u5730\u5740\uff0c\u4ee3\u7801\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u4e14\u53ef\u4ee5\u6b63\u786e\u7684\u6267\u884c\u3002\u8fd9\u6b63\u662f\u5171\u4eab\u5e93\u6240\u8981\u6c42\u7684\uff0c\u5171\u4eab\u5e93\u88ab\u52a0\u8f7d\u65f6\uff0c\u5728\u5185\u5b58\u7684\u4f4d\u7f6e\u4e0d\u662f\u56fa\u5b9a\u7684 \u94fe\u63a5\u9009\u9879 - -l : \u52a0\u5728\u5e93\u540d\u524d\u9762 - -L : \u52a0\u5728\u5e93\u8def\u5f84\u524d\u9762 - -Wl,<\u9009\u9879> : \u5c06\u9017\u53f7\u5206\u9694\u7684 <\u9009\u9879> \u4f20\u9012\u7ed9\u94fe\u63a5\u5668 - -rpath= : \"\u8fd0\u884c\" \u7684\u65f6\u5019\uff0c\u53bb\u627e\u7684\u76ee\u5f55\u3002\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u8981\u627e .so \u6587\u4ef6\uff0c\u4f1a\u4ece\u8fd9\u4e2a\u9009\u9879\u91cc\u6307\u5b9a\u7684\u5730\u65b9\u53bb\u627e","title":"2 \u7f16\u8bd1\u9009\u9879"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#3-implicit-rules","text":"CC: Program for compiling C programs; default cc CXX: Program for compiling C++ programs; default g++ CFLAGS: Extra flags to give to the C compiler CXXFLAGS: Extra flags to give to the C++ compiler CPPFLAGS: Extra flags to give to the C preprocessor LDFLAGS: Extra flags to give to compilers when they are supposed to invoke the linker","title":"3 Implicit Rules"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/6.Compile/#4-\u7f16\u8bd1\u5e26\u5934\u6587\u4ef6\u7684\u7a0b\u5e8f","text":"add.hpp #ifndef ADD_HPP #define ADD_HPP int add ( int a , int b ); #endif // ADD_HPP add.cpp int add ( int a , int b ) { return a + b ; } minus.hpp #ifndef MINUS_HPP #define MINUS_HPP int minus ( int a , int b ); #endif // MINUS_HPP minus.cpp int minus ( int a , int b ) { return a - b ; } main.cpp #include <stdio.h> #include \"add.hpp\" #include \"minus.hpp\" int main () { int a = 10 ; int b = 5 ; int res = add ( a , b ); printf ( \"a + b = %d \\n \" , res ); res = minus ( a , b ); printf ( \"a - b = %d \\n \" , res ); return 0 ; } Makefile cpp_srcs := $( shell find src -name *.cpp ) cpp_objs := $( patsubst src/%.cpp,objs/%.o, $( cpp_srcs )) # \u4f60\u7684\u5934\u6587\u4ef6\u6240\u5728\u6587\u4ef6\u5939\u8def\u5f84\uff08\u5efa\u8bae\u7edd\u5bf9\u8def\u5f84\uff09 include_paths := I_flag := $( include_paths:% = -I% ) objs/%.o : src /%. cpp @mkdir -p $( dir $@ ) @g++ -c $^ -o $@ $( I_flag ) workspace/exec : $( cpp_objs ) @mkdir -p $( dir $@ ) @g++ $^ -o $@ run : workspace / exec @./$< debug : @echo $( I_flag ) clean : @rm -rf objs .PHONY : debug run","title":"4 \u7f16\u8bd1\u5e26\u5934\u6587\u4ef6\u7684\u7a0b\u5e8f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/7.StaticLibrary/","text":"Makefile \u9759\u6001\u5e93\u7f16\u8bd1 # 1 \u7a0b\u5e8f # add.hpp #ifndef ADD_HPP #define ADD_HPP int add ( int a , int b ); #endif // ADD_HPP add.cpp int add ( int a , int b ) { return a + b ; } minus.hpp #ifndef MINUS_HPP #define MINUS_HPP int minus ( int a , int b ); #endif // MINUS_HPP minus.cpp int minus ( int a , int b ) { return a - b ; } main.cpp #include <stdio.h> #include \"add.hpp\" #include \"minus.hpp\" int main () { int a = 10 ; int b = 5 ; int res = add ( a , b ); printf ( \"a + b = %d \\n \" , res ); res = minus ( a , b ); printf ( \"a - b = %d \\n \" , res ); return 0 ; } \u2003 2 \u7f16\u8bd1\u8fc7\u7a0b # \u6e90\u6587\u4ef6[.c/cpp] -> Object\u6587\u4ef6[.o] g++ -c [.c/cpp][.c/cpp]... -o [.o][.o]... -I[.h/hpp] -g Object\u6587\u4ef6[.o] -> \u9759\u6001\u5e93\u6587\u4ef6[lib\u5e93\u540d.a] ar -r [lib\u5e93\u540d.a] [.o][.o]... main \u6587\u4ef6[.c/cpp] -> Object \u6587\u4ef6[.o] g++ -c [main.c/cpp] -o [.o] -I[.h/hpp] \u94fe\u63a5 main \u7684 Object \u6587\u4ef6\u4e0e\u9759\u6001\u5e93\u6587\u4ef6 [lib\u5e93\u540d.a] g++ [main.o] -o [\u53ef\u6267\u884c\u6587\u4ef6] -l[\u5e93\u540d] -L[\u5e93\u8def\u5f84]","title":"7.StaticLibrary"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/7.StaticLibrary/#makefile-\u9759\u6001\u5e93\u7f16\u8bd1","text":"","title":"Makefile \u9759\u6001\u5e93\u7f16\u8bd1"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/7.StaticLibrary/#1-\u7a0b\u5e8f","text":"add.hpp #ifndef ADD_HPP #define ADD_HPP int add ( int a , int b ); #endif // ADD_HPP add.cpp int add ( int a , int b ) { return a + b ; } minus.hpp #ifndef MINUS_HPP #define MINUS_HPP int minus ( int a , int b ); #endif // MINUS_HPP minus.cpp int minus ( int a , int b ) { return a - b ; } main.cpp #include <stdio.h> #include \"add.hpp\" #include \"minus.hpp\" int main () { int a = 10 ; int b = 5 ; int res = add ( a , b ); printf ( \"a + b = %d \\n \" , res ); res = minus ( a , b ); printf ( \"a - b = %d \\n \" , res ); return 0 ; }","title":"1 \u7a0b\u5e8f"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/7.StaticLibrary/#2-\u7f16\u8bd1\u8fc7\u7a0b","text":"\u6e90\u6587\u4ef6[.c/cpp] -> Object\u6587\u4ef6[.o] g++ -c [.c/cpp][.c/cpp]... -o [.o][.o]... -I[.h/hpp] -g Object\u6587\u4ef6[.o] -> \u9759\u6001\u5e93\u6587\u4ef6[lib\u5e93\u540d.a] ar -r [lib\u5e93\u540d.a] [.o][.o]... main \u6587\u4ef6[.c/cpp] -> Object \u6587\u4ef6[.o] g++ -c [main.c/cpp] -o [.o] -I[.h/hpp] \u94fe\u63a5 main \u7684 Object \u6587\u4ef6\u4e0e\u9759\u6001\u5e93\u6587\u4ef6 [lib\u5e93\u540d.a] g++ [main.o] -o [\u53ef\u6267\u884c\u6587\u4ef6] -l[\u5e93\u540d] -L[\u5e93\u8def\u5f84]","title":"2 \u7f16\u8bd1\u8fc7\u7a0b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/8.SharedLibrary/","text":"\u52a8\u6001\u5e93\uff08\u5171\u4eab\u5e93\uff09 # 1 \u7f16\u5e93 # \u7f16\u8bd1 .c \u6587\u4ef6 \u6e90\u6587\u4ef6[.c/cpp] -> Object\u6587\u4ef6[.o] g++ -c [.c/cpp][.c/cpp]... -o [.o][.o]... -I[.h/hpp] -g -fpic Object\u6587\u4ef6[.o] -> \u52a8\u6001\u5e93\u6587\u4ef6[lib\u5e93\u540d.so] g++ -shared [.o][.o]... -o [lib\u5e93\u540d.so] main\u6587\u4ef6[.c/cpp] -> Object\u6587\u4ef6[.o] g++ -c [main.c/cpp] -o [.o] -I[.h/hpp] -g \u2003 2 \u94fe\u63a5 # \u94fe\u63a5 main \u7684 Object \u6587\u4ef6\u4e0e\u52a8\u6001\u5e93\u6587\u4ef6[lib\u5e93\u540d.so] g++ [main.o] -o [\u53ef\u6267\u884c\u6587\u4ef6] -l[\u5e93\u540d] -L[\u5e93\u8def\u5f84] -Wl,-rpath=[\u5e93\u8def\u5f84]","title":"8.SharedLibrary"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/8.SharedLibrary/#\u52a8\u6001\u5e93\u5171\u4eab\u5e93","text":"","title":"\u52a8\u6001\u5e93\uff08\u5171\u4eab\u5e93\uff09"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/8.SharedLibrary/#1-\u7f16\u5e93","text":"\u7f16\u8bd1 .c \u6587\u4ef6 \u6e90\u6587\u4ef6[.c/cpp] -> Object\u6587\u4ef6[.o] g++ -c [.c/cpp][.c/cpp]... -o [.o][.o]... -I[.h/hpp] -g -fpic Object\u6587\u4ef6[.o] -> \u52a8\u6001\u5e93\u6587\u4ef6[lib\u5e93\u540d.so] g++ -shared [.o][.o]... -o [lib\u5e93\u540d.so] main\u6587\u4ef6[.c/cpp] -> Object\u6587\u4ef6[.o] g++ -c [main.c/cpp] -o [.o] -I[.h/hpp] -g","title":"1 \u7f16\u5e93"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/8.SharedLibrary/#2-\u94fe\u63a5","text":"\u94fe\u63a5 main \u7684 Object \u6587\u4ef6\u4e0e\u52a8\u6001\u5e93\u6587\u4ef6[lib\u5e93\u540d.so] g++ [main.o] -o [\u53ef\u6267\u884c\u6587\u4ef6] -l[\u5e93\u540d] -L[\u5e93\u8def\u5f84] -Wl,-rpath=[\u5e93\u8def\u5f84]","title":"2 \u94fe\u63a5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/9.Errors/","text":"\u5e38\u89c1 Error # *** missing separator. Stop. - \u539f\u56e0: Makefile \u8bed\u6cd5\u51fa\u9519 - \u89e3\u51b3\u65b9\u6cd5: \u6839\u636e\u62a5\u9519\u7684\u884c\u6570\uff0c\u68c0\u67e5 tab \u7f29\u8fdb\uff0c\u7a7a\u683c\u95ee\u9898 *** commands commence before first target. Stop - \u539f\u56e0: if\u7b49\u8bed\u53e5\u91cc\u9762\u7528\u4e86 tab \u7f29\u8fdb - \u89e3\u51b3\u65b9\u6cd5: \u7f29\u8fdb\u7684\u5730\u65b9\u5168\u90e8\u6539\u4e3a\u7a7a\u683c","title":"\u5e38\u89c1 Error"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/9.Errors/#\u5e38\u89c1-error","text":"*** missing separator. Stop. - \u539f\u56e0: Makefile \u8bed\u6cd5\u51fa\u9519 - \u89e3\u51b3\u65b9\u6cd5: \u6839\u636e\u62a5\u9519\u7684\u884c\u6570\uff0c\u68c0\u67e5 tab \u7f29\u8fdb\uff0c\u7a7a\u683c\u95ee\u9898 *** commands commence before first target. Stop - \u539f\u56e0: if\u7b49\u8bed\u53e5\u91cc\u9762\u7528\u4e86 tab \u7f29\u8fdb - \u89e3\u51b3\u65b9\u6cd5: \u7f29\u8fdb\u7684\u5730\u65b9\u5168\u90e8\u6539\u4e3a\u7a7a\u683c","title":"\u5e38\u89c1 Error"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/","text":"1 Fundamental Compiling # \u7f16\u8bd1 C++ \u8bed\u8a00\u76f8\u5173\u7684\u540e\u7f00 \u2003 2 Compiling C++ # 2.1 Preprocessing # g++ -E helloworld.c g++ -E helloworld.c -o helloworld.i - -E \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\u53ea\u8fdb\u884c\u9884\u5904\u7406\u64cd\u4f5c - -o \u9009\u9879\u628a\u9884\u5904\u7406\u7684\u7ed3\u679c\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6 \u2003 2.2 Generating Assembly Language # g++ -S helloworld.c g++ -S helloworld.c -o helloworld.s - -S \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fdb\u884c\u9884\u5904\u7406\u548c\u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00\u64cd\u4f5c \u6bcf\u4e2a\u5e73\u53f0\u5bf9\u5e94\u7684\u6c47\u7f16\u8bed\u8a00\u7684\u5f62\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u4f8b\u5982\u6709\u5f88\u591a\u578b\u53f7\u7684\u5f00\u53d1\u677f\uff0c\u6709\u5f88\u591a\u578b\u53f7\u7684 CPU \u2003 2.3 Source File to Object File # g++ -c helloworld.c g++ -c helloworld.c -o harumph.o # \u7f16\u8bd1\u591a\u4e2a .c \u6587\u4ef6 g++ -c helloworld.c helloworld1.c helloworld2.c \u2003 2.4 Single Source to Executable # \u6ce8\u610f\uff1a\u540e\u9762\u4e09\u4e2a\u547d\u4ee4\u6267\u884c\u540e\u5e76\u6ca1\u6709\u6309\u7f16\u8bd1\u8fc7\u7a0b\u51fa\u73b0 .i .s \u6216 .o \u6587\u4ef6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u7ecf\u5386\u8fd9\u4e9b\u8fc7\u7a0b g++ helloworld.c g++ helloworld.c -o howdy \u6267\u884c\u7a0b\u5e8f ./\u53ef\u6267\u884c\u6587\u4ef6 \u2003 2.5 Multiple Source to Executable # $ g++ hellomain.c sayhello.c -o hello \u2003 3 Creating a Static Library # \u7f16\u8bd1\u6210 .o \u7684\u6587\u4ef6 g++ -c [ .c ] -o [ \u81ea\u5b9a\u4e49\u6587\u4ef6\u540d ] g++ -c [ .c ] [ .c ] ... \u7f16\u9759\u6001\u5e93 ar -r [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.a ] [ .o ] [ .o ] ... \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 g++ [ .c ] [ .a ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] g++ [ .c ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u6240\u5728\u8def\u5f84 ] \u2003 4 Creating a Shared Library # \u7f16\u8bd1\u4e8c\u8fdb\u5236.o\u6587\u4ef6 g++ -c -fpic [ .c/.cpp ][ .c/.cpp ] ... \u7f16\u5e93 g++ -shared [ .o ][ .o ] ... -o [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.so ] \u8fde\u63a5\u52a8\u6001\u5e93\u5230\u53ef\u6267\u884c\u6587\u4ef6 g++ [ .c/.cpp ] -o [ \u81ea\u5b9a\u4e49\u53ef\u6267\u884c\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u8def\u5f84 ] -Wl,-rpath =[ \u5e93\u8def\u5f84 ] \u2003 \u603b\u7ed3 # 1 \u7f16\u8bd1\u8fc7\u7a0b # \u6e90\u6587\u4ef6.c\u6587\u4ef6 -> \u9884\u7f16\u8bd1\u6210.i\u6587\u4ef6 -> \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00.s -> \u6c47\u7f16\u6210.o\u6587\u4ef6 -> \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u540d\u5b57\u81ea\u5b9a\u4e49\uff0c\u540e\u7f00\u6ca1\u5173\u7cfb\uff09 2 \u7f16\u8bd1\u8fc7\u7a0b\u547d\u4ee4 # \u9884\u5904\u7406\uff1a g++ -E [.c\u6e90\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d.i] \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00(\u9690\u85cf\u4e86\u9884\u5904\u7406\u64cd\u4f5c) : g++ -S [.c\u6e90\u6587\u4ef6] \u4f1a\u53d8\u6210.o\u7684object\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u7528\u4e8e\u94fe\u63a5\uff09 : g++ -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d]) 3 \u5e93 # \u9759\u6001\u5e93 - \u7f16\u5e93\uff08\u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210lib[\u81ea\u5b9a\u5e93\u540d].a\uff09 g++ -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d]) ar -r lib[\u81ea\u5b9a\u5e93\u540d].a [.o\u6587\u4ef6] [.o\u6587\u4ef6] [...] - \u94fe\u63a5 g++ [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u7684\u8def\u5f84] \u52a8\u6001\u5e93 - \u7f16\u5e93 - \u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c \u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210.so\u6587\u4ef6 g++ -c -fpic [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] g++ -shared [ .o\u6587\u4ef6 ] [ .o\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u7b2c\u4e8c\u79cd\u505a\u6cd5\uff0c\u76f4\u63a5\u8f6c\u6210.so g++ -fpic -shared [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u94fe\u63a5 ```shell g++ [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u6240\u5728\u8def\u5f84] -Wl,-rpath=[\u5e93\u6240\u5728\u8def\u5f84] ```","title":"CompileC++"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#1-fundamental-compiling","text":"\u7f16\u8bd1 C++ \u8bed\u8a00\u76f8\u5173\u7684\u540e\u7f00","title":"1 Fundamental Compiling"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#2-compiling-c","text":"","title":"2 Compiling C++"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#21-preprocessing","text":"g++ -E helloworld.c g++ -E helloworld.c -o helloworld.i - -E \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\u53ea\u8fdb\u884c\u9884\u5904\u7406\u64cd\u4f5c - -o \u9009\u9879\u628a\u9884\u5904\u7406\u7684\u7ed3\u679c\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6","title":"2.1 Preprocessing"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#22-generating-assembly-language","text":"g++ -S helloworld.c g++ -S helloworld.c -o helloworld.s - -S \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fdb\u884c\u9884\u5904\u7406\u548c\u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00\u64cd\u4f5c \u6bcf\u4e2a\u5e73\u53f0\u5bf9\u5e94\u7684\u6c47\u7f16\u8bed\u8a00\u7684\u5f62\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u4f8b\u5982\u6709\u5f88\u591a\u578b\u53f7\u7684\u5f00\u53d1\u677f\uff0c\u6709\u5f88\u591a\u578b\u53f7\u7684 CPU","title":"2.2 Generating Assembly Language"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#23-source-file-to-object-file","text":"g++ -c helloworld.c g++ -c helloworld.c -o harumph.o # \u7f16\u8bd1\u591a\u4e2a .c \u6587\u4ef6 g++ -c helloworld.c helloworld1.c helloworld2.c","title":"2.3 Source File to Object File"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#24-single-source-to-executable","text":"\u6ce8\u610f\uff1a\u540e\u9762\u4e09\u4e2a\u547d\u4ee4\u6267\u884c\u540e\u5e76\u6ca1\u6709\u6309\u7f16\u8bd1\u8fc7\u7a0b\u51fa\u73b0 .i .s \u6216 .o \u6587\u4ef6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u7ecf\u5386\u8fd9\u4e9b\u8fc7\u7a0b g++ helloworld.c g++ helloworld.c -o howdy \u6267\u884c\u7a0b\u5e8f ./\u53ef\u6267\u884c\u6587\u4ef6","title":"2.4 Single Source to Executable"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#25-multiple-source-to-executable","text":"$ g++ hellomain.c sayhello.c -o hello","title":"2.5 Multiple Source to Executable"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#3-creating-a-static-library","text":"\u7f16\u8bd1\u6210 .o \u7684\u6587\u4ef6 g++ -c [ .c ] -o [ \u81ea\u5b9a\u4e49\u6587\u4ef6\u540d ] g++ -c [ .c ] [ .c ] ... \u7f16\u9759\u6001\u5e93 ar -r [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.a ] [ .o ] [ .o ] ... \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 g++ [ .c ] [ .a ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] g++ [ .c ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u6240\u5728\u8def\u5f84 ]","title":"3 Creating a Static Library"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#4-creating-a-shared-library","text":"\u7f16\u8bd1\u4e8c\u8fdb\u5236.o\u6587\u4ef6 g++ -c -fpic [ .c/.cpp ][ .c/.cpp ] ... \u7f16\u5e93 g++ -shared [ .o ][ .o ] ... -o [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.so ] \u8fde\u63a5\u52a8\u6001\u5e93\u5230\u53ef\u6267\u884c\u6587\u4ef6 g++ [ .c/.cpp ] -o [ \u81ea\u5b9a\u4e49\u53ef\u6267\u884c\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u8def\u5f84 ] -Wl,-rpath =[ \u5e93\u8def\u5f84 ]","title":"4 Creating a Shared Library"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#\u603b\u7ed3","text":"","title":"\u603b\u7ed3"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#1-\u7f16\u8bd1\u8fc7\u7a0b","text":"\u6e90\u6587\u4ef6.c\u6587\u4ef6 -> \u9884\u7f16\u8bd1\u6210.i\u6587\u4ef6 -> \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00.s -> \u6c47\u7f16\u6210.o\u6587\u4ef6 -> \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u540d\u5b57\u81ea\u5b9a\u4e49\uff0c\u540e\u7f00\u6ca1\u5173\u7cfb\uff09","title":"1 \u7f16\u8bd1\u8fc7\u7a0b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#2-\u7f16\u8bd1\u8fc7\u7a0b\u547d\u4ee4","text":"\u9884\u5904\u7406\uff1a g++ -E [.c\u6e90\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d.i] \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00(\u9690\u85cf\u4e86\u9884\u5904\u7406\u64cd\u4f5c) : g++ -S [.c\u6e90\u6587\u4ef6] \u4f1a\u53d8\u6210.o\u7684object\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u7528\u4e8e\u94fe\u63a5\uff09 : g++ -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d])","title":"2 \u7f16\u8bd1\u8fc7\u7a0b\u547d\u4ee4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC%2B%2B/#3-\u5e93","text":"\u9759\u6001\u5e93 - \u7f16\u5e93\uff08\u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210lib[\u81ea\u5b9a\u5e93\u540d].a\uff09 g++ -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d]) ar -r lib[\u81ea\u5b9a\u5e93\u540d].a [.o\u6587\u4ef6] [.o\u6587\u4ef6] [...] - \u94fe\u63a5 g++ [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u7684\u8def\u5f84] \u52a8\u6001\u5e93 - \u7f16\u5e93 - \u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c \u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210.so\u6587\u4ef6 g++ -c -fpic [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] g++ -shared [ .o\u6587\u4ef6 ] [ .o\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u7b2c\u4e8c\u79cd\u505a\u6cd5\uff0c\u76f4\u63a5\u8f6c\u6210.so g++ -fpic -shared [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u94fe\u63a5 ```shell g++ [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u6240\u5728\u8def\u5f84] -Wl,-rpath=[\u5e93\u6240\u5728\u8def\u5f84] ```","title":"3 \u5e93"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/","text":"1 Fundamental Compiling # \u7f16\u8bd1 C \u8bed\u8a00\u76f8\u5173\u7684\u540e\u7f00 \u2003 \u2003 2 Compiling C # 2.1 Preprocessing # # \u4e0d\u4f1a\u751f\u6210 .i \u6587\u4ef6 gcc -E main.c gcc -E main.c -o helloworld.i - -E \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\u53ea\u8fdb\u884c\u9884\u5904\u7406\u64cd\u4f5c - -o \u9009\u9879\u628a\u9884\u5904\u7406\u7684\u7ed3\u679c\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6 \u2003 2.2 Generating Assembly Language # gcc -S main.c gcc -S main.c -o xxx.s - -S \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fdb\u884c\u9884\u5904\u7406\u548c\u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00\u64cd\u4f5c \u6bcf\u4e2a\u5e73\u53f0\u5bf9\u5e94\u7684\u6c47\u7f16\u8bed\u8a00\u7684\u5f62\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u4f8b\u5982\u6709\u5f88\u591a\u578b\u53f7\u7684\u5f00\u53d1\u677f\uff0c\u6709\u5f88\u591a\u578b\u53f7\u7684 CPU \u2003 2.3 Source File to Object File # gcc -c main.c gcc -c main.c -o xxx.o # \u7f16\u8bd1\u591a\u4e2a .c \u6587\u4ef6 gcc -c main.c add.c minus.c \u2003 2.4 Single Source to Executable # \u6ce8\u610f\uff1a\u540e\u9762\u4e09\u4e2a\u547d\u4ee4\u6267\u884c\u540e\u5e76\u6ca1\u6709\u6309\u7f16\u8bd1\u8fc7\u7a0b\u51fa\u73b0 .i .s \u6216 .o \u6587\u4ef6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u7ecf\u5386\u8fd9\u4e9b\u8fc7\u7a0b gcc main.c gcc main.c -o xxx \u6267\u884c\u7a0b\u5e8f ./\u53ef\u6267\u884c\u6587\u4ef6 2.5 Multiple Sources to Executable # gcc main.c add.c minus.c -o exec ./exec \u2003 3 Creating a Static Library # \u7f16\u8bd1\u6210 .o \u7684\u6587\u4ef6 gcc -c [ .c ] -o [ \u81ea\u5b9a\u4e49\u6587\u4ef6\u540d ] gcc -c [ .c ] [ .c ] ... \u7f16\u9759\u6001\u5e93 ar -r [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.a ] [ .o ] [ .o ] ... \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 gcc [ .c ] [ .a ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] gcc [ .c ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u6240\u5728\u8def\u5f84 ] \u2003 4 Creating a Shared Library # \u7f16\u8bd1\u4e8c\u8fdb\u5236.o\u6587\u4ef6 gcc -c -fpic [ .c/.cpp ][ .c/.cpp ] ... \u7f16\u5e93 gcc -shared [ .o ][ .o ] ... -o [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.so ] - \u94fe\u63a5\u5e93\u5230\u53ef\u6267\u884c\u6587\u4ef6 gcc [ .c/.cpp ] -o [ \u81ea\u5b9a\u4e49\u53ef\u6267\u884c\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u8def\u5f84 ] -Wl,-rpath =[ \u5e93\u8def\u5f84 ] \u2003 \u603b\u7ed3 # 1 \u7f16\u8bd1\u8fc7\u7a0b # \u6e90\u6587\u4ef6.c\u6587\u4ef6 -> \u9884\u7f16\u8bd1\u6210.i\u6587\u4ef6 -> \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00.s -> \u6c47\u7f16\u6210.o\u6587\u4ef6 -> \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u540d\u5b57\u81ea\u5b9a\u4e49\uff0c\u540e\u7f00\u6ca1\u5173\u7cfb\uff09 2 \u7f16\u8bd1\u8fc7\u7a0b\u547d\u4ee4 # \u9884\u5904\u7406\uff1a gcc -E [.c\u6e90\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d.i] \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00(\u9690\u85cf\u4e86\u9884\u5904\u7406\u64cd\u4f5c) : gcc -S [.c\u6e90\u6587\u4ef6] \u4f1a\u53d8\u6210.o\u7684object\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u7528\u4e8e\u94fe\u63a5\uff09 : gcc -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d]) 3 \u5e93 # \u9759\u6001\u5e93 - \u7f16\u5e93\uff08\u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210lib[\u81ea\u5b9a\u5e93\u540d].a\uff09 gcc -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d]) ar -r lib[\u81ea\u5b9a\u5e93\u540d].a [.o\u6587\u4ef6] [.o\u6587\u4ef6] [...] - \u94fe\u63a5 gcc [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u7684\u8def\u5f84] \u52a8\u6001\u5e93 - \u7f16\u5e93 - \u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c \u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210.so\u6587\u4ef6 gcc -c -fpic [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] gcc -shared [ .o\u6587\u4ef6 ] [ .o\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u7b2c\u4e8c\u79cd\u505a\u6cd5\uff0c\u76f4\u63a5\u8f6c\u6210.so gcc -fpic -shared [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u94fe\u63a5 ```shell gcc [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u6240\u5728\u8def\u5f84] -Wl,-rpath=[\u5e93\u6240\u5728\u8def\u5f84] ```","title":"CompileC"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#1-fundamental-compiling","text":"\u7f16\u8bd1 C \u8bed\u8a00\u76f8\u5173\u7684\u540e\u7f00","title":"1 Fundamental Compiling"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#2-compiling-c","text":"","title":"2 Compiling C"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#21-preprocessing","text":"# \u4e0d\u4f1a\u751f\u6210 .i \u6587\u4ef6 gcc -E main.c gcc -E main.c -o helloworld.i - -E \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\u53ea\u8fdb\u884c\u9884\u5904\u7406\u64cd\u4f5c - -o \u9009\u9879\u628a\u9884\u5904\u7406\u7684\u7ed3\u679c\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6","title":"2.1 Preprocessing"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#22-generating-assembly-language","text":"gcc -S main.c gcc -S main.c -o xxx.s - -S \u9009\u9879\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fdb\u884c\u9884\u5904\u7406\u548c\u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00\u64cd\u4f5c \u6bcf\u4e2a\u5e73\u53f0\u5bf9\u5e94\u7684\u6c47\u7f16\u8bed\u8a00\u7684\u5f62\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u4f8b\u5982\u6709\u5f88\u591a\u578b\u53f7\u7684\u5f00\u53d1\u677f\uff0c\u6709\u5f88\u591a\u578b\u53f7\u7684 CPU","title":"2.2 Generating Assembly Language"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#23-source-file-to-object-file","text":"gcc -c main.c gcc -c main.c -o xxx.o # \u7f16\u8bd1\u591a\u4e2a .c \u6587\u4ef6 gcc -c main.c add.c minus.c","title":"2.3 Source File to Object File"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#24-single-source-to-executable","text":"\u6ce8\u610f\uff1a\u540e\u9762\u4e09\u4e2a\u547d\u4ee4\u6267\u884c\u540e\u5e76\u6ca1\u6709\u6309\u7f16\u8bd1\u8fc7\u7a0b\u51fa\u73b0 .i .s \u6216 .o \u6587\u4ef6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u7ecf\u5386\u8fd9\u4e9b\u8fc7\u7a0b gcc main.c gcc main.c -o xxx \u6267\u884c\u7a0b\u5e8f ./\u53ef\u6267\u884c\u6587\u4ef6","title":"2.4 Single Source to Executable"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#25-multiple-sources-to-executable","text":"gcc main.c add.c minus.c -o exec ./exec","title":"2.5 Multiple Sources to Executable"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#3-creating-a-static-library","text":"\u7f16\u8bd1\u6210 .o \u7684\u6587\u4ef6 gcc -c [ .c ] -o [ \u81ea\u5b9a\u4e49\u6587\u4ef6\u540d ] gcc -c [ .c ] [ .c ] ... \u7f16\u9759\u6001\u5e93 ar -r [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.a ] [ .o ] [ .o ] ... \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 gcc [ .c ] [ .a ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] gcc [ .c ] -o [ \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u6240\u5728\u8def\u5f84 ]","title":"3 Creating a Static Library"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#4-creating-a-shared-library","text":"\u7f16\u8bd1\u4e8c\u8fdb\u5236.o\u6587\u4ef6 gcc -c -fpic [ .c/.cpp ][ .c/.cpp ] ... \u7f16\u5e93 gcc -shared [ .o ][ .o ] ... -o [ lib\u81ea\u5b9a\u4e49\u5e93\u540d.so ] - \u94fe\u63a5\u5e93\u5230\u53ef\u6267\u884c\u6587\u4ef6 gcc [ .c/.cpp ] -o [ \u81ea\u5b9a\u4e49\u53ef\u6267\u884c\u6587\u4ef6\u540d ] -l [ \u5e93\u540d ] -L [ \u5e93\u8def\u5f84 ] -Wl,-rpath =[ \u5e93\u8def\u5f84 ]","title":"4 Creating a Shared Library"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#\u603b\u7ed3","text":"","title":"\u603b\u7ed3"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#1-\u7f16\u8bd1\u8fc7\u7a0b","text":"\u6e90\u6587\u4ef6.c\u6587\u4ef6 -> \u9884\u7f16\u8bd1\u6210.i\u6587\u4ef6 -> \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00.s -> \u6c47\u7f16\u6210.o\u6587\u4ef6 -> \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u540d\u5b57\u81ea\u5b9a\u4e49\uff0c\u540e\u7f00\u6ca1\u5173\u7cfb\uff09","title":"1 \u7f16\u8bd1\u8fc7\u7a0b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#2-\u7f16\u8bd1\u8fc7\u7a0b\u547d\u4ee4","text":"\u9884\u5904\u7406\uff1a gcc -E [.c\u6e90\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d.i] \u7f16\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00(\u9690\u85cf\u4e86\u9884\u5904\u7406\u64cd\u4f5c) : gcc -S [.c\u6e90\u6587\u4ef6] \u4f1a\u53d8\u6210.o\u7684object\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u7528\u4e8e\u94fe\u63a5\uff09 : gcc -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d])","title":"2 \u7f16\u8bd1\u8fc7\u7a0b\u547d\u4ee4"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/C%26C%2B%2BCompile/CompileC/#3-\u5e93","text":"\u9759\u6001\u5e93 - \u7f16\u5e93\uff08\u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210lib[\u81ea\u5b9a\u5e93\u540d].a\uff09 gcc -c [.c\u6e90\u6587\u4ef6] [.c\u6e90\u6587\u4ef6] [...] (\u53ef\u9009\u9009\u9879\uff1a-o [\u81ea\u5b9a\u6587\u4ef6\u540d]) ar -r lib[\u81ea\u5b9a\u5e93\u540d].a [.o\u6587\u4ef6] [.o\u6587\u4ef6] [...] - \u94fe\u63a5 gcc [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u7684\u8def\u5f84] \u52a8\u6001\u5e93 - \u7f16\u5e93 - \u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c \u5148\u8f6c\u6210.o\u6587\u4ef6\uff0c\u518d\u7f16\u6210.so\u6587\u4ef6 gcc -c -fpic [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] gcc -shared [ .o\u6587\u4ef6 ] [ .o\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u7b2c\u4e8c\u79cd\u505a\u6cd5\uff0c\u76f4\u63a5\u8f6c\u6210.so gcc -fpic -shared [ .c\u6e90\u6587\u4ef6 ] [ .c\u6e90\u6587\u4ef6 ] [ ... ] -o lib [ \u5e93\u540d ] .so - \u94fe\u63a5 ```shell gcc [main\u6587\u4ef6] -o [\u81ea\u5b9a\u4e49\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u540d] -l[\u5e93\u540d] -L[\u5e93\u6240\u5728\u8def\u5f84] -Wl,-rpath=[\u5e93\u6240\u5728\u8def\u5f84] ```","title":"3 \u5e93"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/","text":"Intro # 1 GCC \u5b98\u65b9\u6587\u6863 # GCC \u5b98\u65b9\u6587\u6863\u7f51\u7ad9\uff1a https://gcc.gnu.org/onlinedocs/ \u5b98\u65b9\u6587\u6863\u662f\u6700\u6743\u5a01\u7684\uff0c\u7f51\u4e0a\u6240\u6709\u7684\u7b54\u6848\u90fd\u6765\u81ea\u5b98\u65b9\u6587\u6863 \u9002\u5e94\u82f1\u8bed\u9605\u8bfb\uff0c\u4e2d\u6587\u662f\u6bcd\u8bed\uff0c\u5f88\u591a\u8bcd\u6211\u4eec\u81ea\u5df1\u6709\u6839\u6df1\u8482\u56fa\u7684\u542b\u4e49\u548c\u6982\u5ff5\uff0c\u518d\u91cd\u65b0\u8d4b\u4e88\u65b0\u542b\u4e49\u975e\u5e38\u4e0d\u5bb9\u6613\u7406\u89e3\u6216\u6709\u6b67\u4e49 \u82f1\u8bed\u7528\u8bcd\u3001\u903b\u8f91\u6bd4\u8f83\u4e25\u8c28\uff0c\u7f51\u4e0a\u7684\u7ffb\u8bd1\u6c34\u5e73\u53c2\u5dee\u4e0d\u9f50\uff0c\u5751\u5f88\u591a \u56fd\u5185\u8bba\u575b\u627e\u5230\u597d\u7b54\u6848\u5168\u51ed\u8fd0\u6c14\uff0c\u597d\u7684\u7b54\u6848\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u6ca1\u6709\u597d\u7684\u7b54\u6848\u8fd8\u662f\u5f97\u82b1\u65f6\u95f4\u770b\u5b98\u65b9\u6587\u6863\uff0c\u6240\u4ee5\u8fd8\u662f\u81ea\u5df1\u9760\u8c31\u4e00\u70b9\uff0c\u953b\u70bc\u4e00\u4e0b\u82f1\u8bed\u80fd\u529b \u2003 2 GCC\u7684\u4ecb\u7ecd # \u2003\u2003GCC \u662f GNU\u9879\u76ee\u7684\u4e00\u4e2a\u4ea7\u54c1\u3002 \u2003\u2003GCC\uff08GNU Compiler Collection\uff0cGNU\u7f16\u8bd1\u7a0b\u5e8f\u96c6\u5408\uff09\u662f\u6700\u91cd\u8981\u7684\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u3002\u5176\u4ed6\u6240\u6709\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u90fd\u5728\u67d0\u79cd\u5c42\u6b21\u4e0a\u4f9d\u8d56\u4e8e\u5b83\u3002\u751a\u81f3\u5176\u4ed6\u8bed\u8a00\uff0c\u4f8b\u5982 Python\uff0c\u90fd\u662f\u7531 C \u8bed\u8a00\u5f00\u53d1\u7684\uff0c\u7531 GNU \u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\u3002 \u2003\u2003\u8fd9\u4e2a\u8f6f\u4ef6\u5bf9\u4e8e\u6574\u4e2a\u81ea\u7531\u8f6f\u4ef6\u8fd0\u52a8\u800c\u8a00\u5177\u6709\u6839\u672c\u6027\u7684\u610f\u4e49\u3002\u5982\u679c\u6ca1\u6709\u5b83\u6216\u7c7b\u4f3c\u7684\u8f6f\u4ef6\uff0c\u5c31\u4e0d\u53ef\u80fd\u6709\u81ea\u7531\u8f6f\u4ef6\u8fd0\u52a8\u3002GCC \u4e3a Linux \u7684\u51fa\u73b0\u63d0\u4f9b\u4e86\u53ef\u80fd\u6027\u3002 \u2003\u2003GCC \u662f\u7531\u8bb8\u591a\u7ec4\u4ef6\u7ec4\u6210\u7684\uff0c\u4f46\u5b83\u4eec\u4e5f\u5e76\u4e0d\u603b\u662f\u51fa\u73b0\u7684\u3002\u6709\u4e9b\u90e8\u5206\u662f\u548c\u8bed\u8a00\u76f8\u5173\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709\u5b89\u88c5\u67d0\u79cd\u7279\u5b9a\u8bed\u8a00\uff0c\u7cfb\u7edf\u4e2d\u5c31\u4e0d\u4f1a\u51fa\u73b0\u76f8\u5173\u7684\u6587\u4ef6\u3002 \u2003 2.1 GCC\u5e38\u89c1\u7684\u7ec4\u6210\u90e8\u5206 # c++\uff1a gcc \u7684\u4e00\u4e2a\u7248\u672c\uff0c\u9ed8\u8ba4\u8bed\u8a00\u8bbe\u7f6e\u4e3a C++\uff0c\u800c\u4e14\u5728\u94fe\u63a5\u7684\u65f6\u5019\u81ea\u52a8\u5305\u542b\u6807\u51c6 C++ \u5e93\u3002\u8fd9\u548c g++ \u4e00\u6837 configure\uff1a GCC \u6e90\u4ee3\u7801\u6811\u6839\u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a\u811a\u672c\u3002\u7528\u4e8e\u8bbe\u7f6e\u914d\u7f6e\u503c\u548c\u521b\u5efa GCC \u7f16\u8bd1\u7a0b\u5e8f\u5fc5\u9700\u7684 make \u7a0b\u5e8f\u6587\u4ef6 g++\uff1a gcc \u7684\u4e00\u4e2a\u7248\u672c\uff0c\u9ed8\u8ba4\u8bed\u8a00\u8bbe\u7f6e\u4e3a C++\uff0c\u800c\u4e14\u5728\u94fe\u63a5\u7684\u65f6\u5019\u81ea\u52a8\u5305\u542b\u6807\u51c6 C++\u5e93\u3002\u8fd9\u548c c++ \u4e00\u6837 gcc\uff1a \u8be5\u9a71\u52a8\u7a0b\u5e8f\u7b49\u540c\u4e8e\u6267\u884c\u7f16\u8bd1\u7a0b\u5e8f\u548c\u8fde\u63a5\u7a0b\u5e8f\u4ee5\u4ea7\u751f\u9700\u8981\u7684\u8f93\u51fa libgcc\uff1a \u8be5\u5e93\u5305\u542b\u7684\u4f8b\u7a0b\u88ab\u4f5c\u4e3a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u662f\u56e0\u4e3a\u5b83\u4eec\u53ef\u88ab\u94fe\u63a5\u5230\u5b9e\u9645\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u3002\u5b83\u4eec\u662f\u7279\u6b8a\u7684\u4f8b\u7a0b\uff0c\u94fe\u63a5\u5230\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u6765\u6267\u884c\u57fa\u672c\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u6d6e\u70b9\u8fd0\u7b97\u3002\u8fd9\u4e9b\u5e93\u4e2d\u7684\u4f8b\u7a0b\u901a\u5e38\u90fd\u662f\u5e73\u53f0\u76f8\u5173\u7684 libstdc++\uff1a \u8fd0\u884c\u65f6\u5e93\uff0c\u5305\u62ec\u5b9a\u4e49\u4e3a\u6807\u51c6\u8bed\u8a00\u4e00\u90e8\u5206\u7684\u6240\u6709\u7684 C++\u7c7b\u548c\u51fd\u6570 \u2003 2.2 GCC\u5305\u542b\u7684\u5e38\u89c1\u7684\u8f6f\u4ef6 # ar\uff1a \u8fd9\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u53ef\u901a\u8fc7\u4ece\u6587\u6863\u4e2d\u589e\u52a0\u3001\u5220\u9664\u548c\u6790\u53d6\u6587\u4ef6\u6765\u7ef4\u62a4\u5e93\u6587\u4ef6\u3002\u901a\u5e38\u4f7f\u7528\u8be5\u5de5\u5177\u662f\u4e3a\u4e86\u521b\u5efa\u548c\u7ba1\u7406\u8fde\u63a5\u7a0b\u5e8f\u4f7f\u7528\u7684\u76ee\u6807\u5e93\u6587\u6863\u3002\u8be5\u7a0b\u5e8f\u662f binutils \u5305\u7684\u4e00\u90e8\u5206 as\uff1a GNU \u6c47\u7f16\u5668\u3002\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u65cf\u6c47\u7f16\u5668\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u88ab\u7f16\u8bd1\u6216\u80fd\u591f\u5728\u5404\u79cd\u4e0d\u540c\u5e73\u53f0\u4e0a\u5de5\u4f5c\u3002\u8be5\u7a0b\u5e8f\u662f binutjls \u5305\u7684\u4e00\u90e8\u5206 autoconf\uff1a\u4ea7\u751f\u7684 shell \u811a\u672c\u81ea\u52a8\u914d\u7f6e\u6e90\u4ee3\u7801\u5305\u53bb\u7f16\u8bd1\u67d0\u4e2a\u7279\u5b9a\u7248\u672c\u7684 UNIX gdb\uff1a GNU \u8c03\u8bd5\u5668\uff0c\u53ef\u7528\u4e8e\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u503c\u548c\u884c\u4e3a GNATS\uff1aGNU \u7684\u8c03\u8bd5\u8ddf\u8e2a\u7cfb\u7edf\uff08GNU Bug Tracking System\uff09\u3002\u4e00\u4e2a\u8ddf\u8e2a GCC\u548c\u5176\u4ed6 GNU \u8f6f\u4ef6\u95ee\u9898\u7684\u5728\u7ebf\u7cfb\u7edf gprof\uff1a \u8be5\u7a0b\u5e8f\u4f1a\u76d1\u7763\u7f16\u8bd1\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u5e76\u62a5\u544a\u7a0b\u5e8f\u4e2d\u5404\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u53ef\u4ee5\u6839\u636e\u6240\u63d0\u4f9b\u7684\u914d\u7f6e\u6587\u4ef6\u6765\u4f18\u5316\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u662f binutils \u5305\u7684\u4e00\u90e8\u5206 ld\uff1a GNU \u8fde\u63a5\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u5c06\u76ee\u6807\u6587\u4ef6\u7684\u96c6\u5408\u7ec4\u5408\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u662f binutils \u5305\u7684\u4e00\u90e8\u5206 libtool\uff1a \u4e00\u4e2a\u57fa\u672c\u5e93\uff0c\u652f\u6301 make \u7a0b\u5e8f\u7684\u63cf\u8ff0\u6587\u4ef6\u4f7f\u7528\u7684\u7b80\u5316\u5171\u4eab\u5e93\u7528\u6cd5\u7684\u811a\u672c make\uff1a \u4e00\u4e2a\u5de5\u5177\u7a0b\u5e8f\uff0c\u5b83\u4f1a\u8bfb makefile \u811a\u672c\u6765\u786e\u5b9a\u7a0b\u5e8f\u4e2d\u7684\u54ea\u4e2a\u90e8\u5206\u9700\u8981\u7f16\u8bd1\u548c\u8fde\u63a5\uff0c\u7136\u540e\u53d1\u5e03\u5fc5\u8981\u7684\u547d\u4ee4\u3002\u5b83\u8bfb\u51fa\u7684\u811a\u672c\uff08\u53eb\u505a makefile \u6216 Makefile\uff09\u5b9a\u4e49\u4e86\u6587\u4ef6\u5173\u7cfb\u548c\u4f9d\u8d56\u5173\u7cfb \u2003 3 GCC\u9ed8\u8ba4\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84 # \u67e5\u770b\u547d\u4ee4 echo | gcc -v -x c -E - /usr/lib/gcc/x86_64-linux-gnu/7/include /usr/local/include /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed /usr/include/x86_64-linux-gnu /usr/include","title":"1.GCC Introduction"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/#intro","text":"","title":"Intro"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/#1-gcc-\u5b98\u65b9\u6587\u6863","text":"GCC \u5b98\u65b9\u6587\u6863\u7f51\u7ad9\uff1a https://gcc.gnu.org/onlinedocs/ \u5b98\u65b9\u6587\u6863\u662f\u6700\u6743\u5a01\u7684\uff0c\u7f51\u4e0a\u6240\u6709\u7684\u7b54\u6848\u90fd\u6765\u81ea\u5b98\u65b9\u6587\u6863 \u9002\u5e94\u82f1\u8bed\u9605\u8bfb\uff0c\u4e2d\u6587\u662f\u6bcd\u8bed\uff0c\u5f88\u591a\u8bcd\u6211\u4eec\u81ea\u5df1\u6709\u6839\u6df1\u8482\u56fa\u7684\u542b\u4e49\u548c\u6982\u5ff5\uff0c\u518d\u91cd\u65b0\u8d4b\u4e88\u65b0\u542b\u4e49\u975e\u5e38\u4e0d\u5bb9\u6613\u7406\u89e3\u6216\u6709\u6b67\u4e49 \u82f1\u8bed\u7528\u8bcd\u3001\u903b\u8f91\u6bd4\u8f83\u4e25\u8c28\uff0c\u7f51\u4e0a\u7684\u7ffb\u8bd1\u6c34\u5e73\u53c2\u5dee\u4e0d\u9f50\uff0c\u5751\u5f88\u591a \u56fd\u5185\u8bba\u575b\u627e\u5230\u597d\u7b54\u6848\u5168\u51ed\u8fd0\u6c14\uff0c\u597d\u7684\u7b54\u6848\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u6ca1\u6709\u597d\u7684\u7b54\u6848\u8fd8\u662f\u5f97\u82b1\u65f6\u95f4\u770b\u5b98\u65b9\u6587\u6863\uff0c\u6240\u4ee5\u8fd8\u662f\u81ea\u5df1\u9760\u8c31\u4e00\u70b9\uff0c\u953b\u70bc\u4e00\u4e0b\u82f1\u8bed\u80fd\u529b","title":"1 GCC \u5b98\u65b9\u6587\u6863"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/#2-gcc\u7684\u4ecb\u7ecd","text":"GCC \u662f GNU\u9879\u76ee\u7684\u4e00\u4e2a\u4ea7\u54c1\u3002 \u2003\u2003GCC\uff08GNU Compiler Collection\uff0cGNU\u7f16\u8bd1\u7a0b\u5e8f\u96c6\u5408\uff09\u662f\u6700\u91cd\u8981\u7684\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u3002\u5176\u4ed6\u6240\u6709\u5f00\u653e\u6e90\u7801\u8f6f\u4ef6\u90fd\u5728\u67d0\u79cd\u5c42\u6b21\u4e0a\u4f9d\u8d56\u4e8e\u5b83\u3002\u751a\u81f3\u5176\u4ed6\u8bed\u8a00\uff0c\u4f8b\u5982 Python\uff0c\u90fd\u662f\u7531 C \u8bed\u8a00\u5f00\u53d1\u7684\uff0c\u7531 GNU \u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\u3002 \u2003\u2003\u8fd9\u4e2a\u8f6f\u4ef6\u5bf9\u4e8e\u6574\u4e2a\u81ea\u7531\u8f6f\u4ef6\u8fd0\u52a8\u800c\u8a00\u5177\u6709\u6839\u672c\u6027\u7684\u610f\u4e49\u3002\u5982\u679c\u6ca1\u6709\u5b83\u6216\u7c7b\u4f3c\u7684\u8f6f\u4ef6\uff0c\u5c31\u4e0d\u53ef\u80fd\u6709\u81ea\u7531\u8f6f\u4ef6\u8fd0\u52a8\u3002GCC \u4e3a Linux \u7684\u51fa\u73b0\u63d0\u4f9b\u4e86\u53ef\u80fd\u6027\u3002 \u2003\u2003GCC \u662f\u7531\u8bb8\u591a\u7ec4\u4ef6\u7ec4\u6210\u7684\uff0c\u4f46\u5b83\u4eec\u4e5f\u5e76\u4e0d\u603b\u662f\u51fa\u73b0\u7684\u3002\u6709\u4e9b\u90e8\u5206\u662f\u548c\u8bed\u8a00\u76f8\u5173\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709\u5b89\u88c5\u67d0\u79cd\u7279\u5b9a\u8bed\u8a00\uff0c\u7cfb\u7edf\u4e2d\u5c31\u4e0d\u4f1a\u51fa\u73b0\u76f8\u5173\u7684\u6587\u4ef6\u3002","title":"2 GCC\u7684\u4ecb\u7ecd"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/#21-gcc\u5e38\u89c1\u7684\u7ec4\u6210\u90e8\u5206","text":"c++\uff1a gcc \u7684\u4e00\u4e2a\u7248\u672c\uff0c\u9ed8\u8ba4\u8bed\u8a00\u8bbe\u7f6e\u4e3a C++\uff0c\u800c\u4e14\u5728\u94fe\u63a5\u7684\u65f6\u5019\u81ea\u52a8\u5305\u542b\u6807\u51c6 C++ \u5e93\u3002\u8fd9\u548c g++ \u4e00\u6837 configure\uff1a GCC \u6e90\u4ee3\u7801\u6811\u6839\u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a\u811a\u672c\u3002\u7528\u4e8e\u8bbe\u7f6e\u914d\u7f6e\u503c\u548c\u521b\u5efa GCC \u7f16\u8bd1\u7a0b\u5e8f\u5fc5\u9700\u7684 make \u7a0b\u5e8f\u6587\u4ef6 g++\uff1a gcc \u7684\u4e00\u4e2a\u7248\u672c\uff0c\u9ed8\u8ba4\u8bed\u8a00\u8bbe\u7f6e\u4e3a C++\uff0c\u800c\u4e14\u5728\u94fe\u63a5\u7684\u65f6\u5019\u81ea\u52a8\u5305\u542b\u6807\u51c6 C++\u5e93\u3002\u8fd9\u548c c++ \u4e00\u6837 gcc\uff1a \u8be5\u9a71\u52a8\u7a0b\u5e8f\u7b49\u540c\u4e8e\u6267\u884c\u7f16\u8bd1\u7a0b\u5e8f\u548c\u8fde\u63a5\u7a0b\u5e8f\u4ee5\u4ea7\u751f\u9700\u8981\u7684\u8f93\u51fa libgcc\uff1a \u8be5\u5e93\u5305\u542b\u7684\u4f8b\u7a0b\u88ab\u4f5c\u4e3a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\uff0c\u662f\u56e0\u4e3a\u5b83\u4eec\u53ef\u88ab\u94fe\u63a5\u5230\u5b9e\u9645\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u3002\u5b83\u4eec\u662f\u7279\u6b8a\u7684\u4f8b\u7a0b\uff0c\u94fe\u63a5\u5230\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u6765\u6267\u884c\u57fa\u672c\u7684\u4efb\u52a1\uff0c\u4f8b\u5982\u6d6e\u70b9\u8fd0\u7b97\u3002\u8fd9\u4e9b\u5e93\u4e2d\u7684\u4f8b\u7a0b\u901a\u5e38\u90fd\u662f\u5e73\u53f0\u76f8\u5173\u7684 libstdc++\uff1a \u8fd0\u884c\u65f6\u5e93\uff0c\u5305\u62ec\u5b9a\u4e49\u4e3a\u6807\u51c6\u8bed\u8a00\u4e00\u90e8\u5206\u7684\u6240\u6709\u7684 C++\u7c7b\u548c\u51fd\u6570","title":"2.1 GCC\u5e38\u89c1\u7684\u7ec4\u6210\u90e8\u5206"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/#22-gcc\u5305\u542b\u7684\u5e38\u89c1\u7684\u8f6f\u4ef6","text":"ar\uff1a \u8fd9\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u53ef\u901a\u8fc7\u4ece\u6587\u6863\u4e2d\u589e\u52a0\u3001\u5220\u9664\u548c\u6790\u53d6\u6587\u4ef6\u6765\u7ef4\u62a4\u5e93\u6587\u4ef6\u3002\u901a\u5e38\u4f7f\u7528\u8be5\u5de5\u5177\u662f\u4e3a\u4e86\u521b\u5efa\u548c\u7ba1\u7406\u8fde\u63a5\u7a0b\u5e8f\u4f7f\u7528\u7684\u76ee\u6807\u5e93\u6587\u6863\u3002\u8be5\u7a0b\u5e8f\u662f binutils \u5305\u7684\u4e00\u90e8\u5206 as\uff1a GNU \u6c47\u7f16\u5668\u3002\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u65cf\u6c47\u7f16\u5668\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u88ab\u7f16\u8bd1\u6216\u80fd\u591f\u5728\u5404\u79cd\u4e0d\u540c\u5e73\u53f0\u4e0a\u5de5\u4f5c\u3002\u8be5\u7a0b\u5e8f\u662f binutjls \u5305\u7684\u4e00\u90e8\u5206 autoconf\uff1a\u4ea7\u751f\u7684 shell \u811a\u672c\u81ea\u52a8\u914d\u7f6e\u6e90\u4ee3\u7801\u5305\u53bb\u7f16\u8bd1\u67d0\u4e2a\u7279\u5b9a\u7248\u672c\u7684 UNIX gdb\uff1a GNU \u8c03\u8bd5\u5668\uff0c\u53ef\u7528\u4e8e\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u503c\u548c\u884c\u4e3a GNATS\uff1aGNU \u7684\u8c03\u8bd5\u8ddf\u8e2a\u7cfb\u7edf\uff08GNU Bug Tracking System\uff09\u3002\u4e00\u4e2a\u8ddf\u8e2a GCC\u548c\u5176\u4ed6 GNU \u8f6f\u4ef6\u95ee\u9898\u7684\u5728\u7ebf\u7cfb\u7edf gprof\uff1a \u8be5\u7a0b\u5e8f\u4f1a\u76d1\u7763\u7f16\u8bd1\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u5e76\u62a5\u544a\u7a0b\u5e8f\u4e2d\u5404\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4\uff0c\u53ef\u4ee5\u6839\u636e\u6240\u63d0\u4f9b\u7684\u914d\u7f6e\u6587\u4ef6\u6765\u4f18\u5316\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u662f binutils \u5305\u7684\u4e00\u90e8\u5206 ld\uff1a GNU \u8fde\u63a5\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u5c06\u76ee\u6807\u6587\u4ef6\u7684\u96c6\u5408\u7ec4\u5408\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u662f binutils \u5305\u7684\u4e00\u90e8\u5206 libtool\uff1a \u4e00\u4e2a\u57fa\u672c\u5e93\uff0c\u652f\u6301 make \u7a0b\u5e8f\u7684\u63cf\u8ff0\u6587\u4ef6\u4f7f\u7528\u7684\u7b80\u5316\u5171\u4eab\u5e93\u7528\u6cd5\u7684\u811a\u672c make\uff1a \u4e00\u4e2a\u5de5\u5177\u7a0b\u5e8f\uff0c\u5b83\u4f1a\u8bfb makefile \u811a\u672c\u6765\u786e\u5b9a\u7a0b\u5e8f\u4e2d\u7684\u54ea\u4e2a\u90e8\u5206\u9700\u8981\u7f16\u8bd1\u548c\u8fde\u63a5\uff0c\u7136\u540e\u53d1\u5e03\u5fc5\u8981\u7684\u547d\u4ee4\u3002\u5b83\u8bfb\u51fa\u7684\u811a\u672c\uff08\u53eb\u505a makefile \u6216 Makefile\uff09\u5b9a\u4e49\u4e86\u6587\u4ef6\u5173\u7cfb\u548c\u4f9d\u8d56\u5173\u7cfb","title":"2.2 GCC\u5305\u542b\u7684\u5e38\u89c1\u7684\u8f6f\u4ef6"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/1.GCC_Introduction/#3-gcc\u9ed8\u8ba4\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84","text":"\u67e5\u770b\u547d\u4ee4 echo | gcc -v -x c -E - /usr/lib/gcc/x86_64-linux-gnu/7/include /usr/local/include /usr/lib/gcc/x86_64-linux-gnu/7/include-fixed /usr/include/x86_64-linux-gnu /usr/include","title":"3 GCC\u9ed8\u8ba4\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/","text":"\u7b80\u5355\u7f16\u8bd1\u539f\u7406 # 1 hello, world\u5728\u8ba1\u7b97\u673a\u7684\u8868\u793a # hello \u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u662f\u4ece\u4e00\u4e2a\u6e90\u7a0b\u5e8f\uff08\u6216\u8005\u8bf4\u6e90\u6587\u4ef6\uff09\u5f00\u59cb\u7684\uff0c\u5373\u7a0b\u5e8f\u5458\u901a\u8fc7\u7f16\u8f91\u5668\u521b\u5efa\u5e76\u4fdd\u5b58\u7684\u6587\u672c\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u662f hello.c\u3002\u6e90\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u7531\u503c 0 \u548c 1\u7ec4\u6210\u7684\u4f4d\uff08\u53c8\u79f0\u4e3a\u6bd4\u7279\uff09\u5e8f\u5217\uff0c8 \u4e2a\u4f4d\u88ab\u7ec4\u7ec7\u6210\u4e00\u7ec4\uff0c\u79f0\u4e3a\u5b57\u8282\u3002\u6bcf\u4e2a\u5b57\u8282\u8868\u793a\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e9b\u6587\u672c\u5b57\u7b26 \u5927\u90e8\u5206\u8ba1\u7b97\u673a\u4f7f\u7528 ASCII \u6807\u51c6\u6765\u8868\u793a\u6587\u672c\u5b57\u7b26 - \u7528\u4e00\u4e2a\u552f\u4e00\u7684\u5355\u5b57\u8282\u5927\u5c0f\u7684\u6574\u6570\u503c\u606f\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26 - hello.c \u7a0b\u5e8f\u662f\u4ee5\u5b57\u8282\u5e8f\u5217\u7684\u65b9\u5f0f\u50a8\u5b58\u5728\u6587\u4ef6\u4e2d\u7684 hello.c \u7684\u8868\u793a\u65b9\u6cd5\u8bf4\u660e\u4e86\u4e00\u4e2a\u57fa\u672c\u601d\u60f3\u2236 \u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u4fe1\u606f\u2014\u2014\u5305\u62ec\u78c1\u76d8\u6587\u4ef6\u3001\u5185\u5b58\u4e2d\u7684\u7a0b\u5e8f\u3001\u5185\u5b58\u4e2d\u5b58\u653e\u7684\u7528\u6237\u6570\u636e\u4ee5\u53ca\u7f51\u7edc\u4e0a\u4f20\u9001\u7684\u6570\u636e\uff0c\u90fd\u662f\u7531\u4e00\u4e32\u6bd4\u7279\u8868\u793a\u7684 \u2003 2 \u7f16\u8bd1\u8fc7\u7a0b # hello \u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u4ece\u4e00\u4e2a\u9ad8\u7ea7 C \u8bed\u8a00\u7a0b\u5e8f\u5f00\u59cb \u4e3a\u4e86\u5728\u7cfb\u7edf\u4e0a\u8fd0\u884c hello.c \u7a0b\u5e8f\uff0c\u6bcf\u6761 C \u8bed\u53e5\u90fd\u5fc5\u987b\u88ab\u5176\u4ed6\u7a0b\u5e8f\u8f6c\u5316\u4e3a\u4e00\u7cfb\u5217\u7684\u4f4e\u7ea7\u673a\u5668\u8bed\u8a00\u6307\u4ee4 \u7136\u540e\u8fd9\u4e9b\u6307\u4ee4\u6309\u7167\u4e00\u79cd\u79f0\u4e3a\u53ef\u6267\u884c\u76ee\u6807\u7a0b\u5e8f\u7684\u683c\u5f0f\u6253\u597d\u5305\uff0c\u5e76\u4ee5\u4e8c\u8fdb\u5236\u78c1\u76d8\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u653e\u8d77\u6765 GCC \u7f16\u8bd1\u5668\u8bfb\u53d6\u6e90\u7a0b\u5e8f\u6587\u4ef6 hello.c\uff0c\u5e76\u628a\u5b83\u7ffb\u8bd1\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6 hello\u3002\u8fd9\u4e2a\u7ffb\u8bd1\u8fc7\u7a0b\u53ef\u5206\u4e3a\u56db\u4e2a\u9636\u6bb5\u5b8c\u6210\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u6267\u884c\u8fd9\u56db\u4e2a\u9636\u6bb5\u7684\u7a0b\u5e8f\uff08\u9884\u5904\u7406\u5668\u3001\u7f16\u8bd1\u5668\u3001\u6c47\u7f16\u5668\u548c\u94fe\u63a5\u5668\uff09\u4e00\u8d77\u6784\u6210\u4e86\u7f16\u8bd1\u7cfb\u7edf\uff08compilation system\uff09 \u2003 2.1 \u9884\u5904\u7406\u9636\u6bb5 # \u9884\u5904\u7406\u5668\uff08cpp\uff09 \u6839\u636e\u4ee5\u5b57\u7b26#\u5f00\u5934\u7684\u547d\u4ee4\uff0c\u4fee\u6539\u539f\u59cb\u7684 C \u7a0b\u5e8f\u3002\u6bd4\u5982 hello.c\u4e2d\u7b2c 1\u884c\u7684#include < stdio.h>\u547d\u4ee4\u544a\u8bc9\u9884\u5904\u7406\u5668\u8bfb\u53d6\u7cfb\u7edf\u5934\u6587\u4ef6 stdio.h \u7684\u5185\u5bb9\uff0c\u5e76\u628a\u5b83\u76f4\u63a5\u63d2\u5165\u7a0b\u5e8f\u6587\u672c\u4e2d\u3002\u7ed3\u679c\u5c31\u5f97\u5230\u4e86\u53e6\u4e00\u4e2a C\u7a0b\u5e8f\uff0c\u901a\u5e38\u662f\u4ee5.i\u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u2003 2.2 \u7f16\u8bd1\u9636\u6bb5 # \u7f16\u8bd1\u5668\uff08ccl\uff09 \u5c06\u6587\u672c\u6587\u4ef6 hello.i\u7ffb\u8bd1\u6210\u6587\u672c\u6587\u4ef6 hello.s\uff0c\u5b83\u5305\u542b\u4e00 \u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u5305\u542b\u51fd\u6570 main \u7684\u5b9a\u4e49\uff0c\u5982\u4e0b\u6240\u793a\uff1a main: subq $8, %rsp mov1 $.LCO,%edi call puts mov1 $0,%eax addq $8,%rsp ret \u6bcf\u6761\u8bed\u53e5\u90fd\u4ee5\u4e00\u79cd\u6587\u672c\u683c\u5f0f\u63cf\u8ff0\u4e86\u4e00\u6761\u4f4e\u7ea7\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u3002\u6c47\u7f16\u8bed\u8a00\u975e\u5e38\u6709\u7528\uff0c\u5b83\u4e3a\u4e0d\u540c\u9ad8\u7ea7\u8bed\u8a00\u7684\u4e0d\u540c\u7f16\u8bd1\u5668\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u8f93\u51fa\u8bed\u8a00 \u2003 2.3 \u6c47\u7f16\u9636\u6bb5 # \u6c47\u7f16\u5668\uff08as\uff09 \u5c06 hello.s \u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u6307\u4ee4\uff0c\u628a\u8fd9\u4e9b\u6307\u4ee4\u6253\u5305\u6210\u4e00\u79cd\u53eb\u505a\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u7a0b\u5e8f\uff08relocatable object program\uff09\u7684\u683c\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u76ee\u6807\u6587\u4ef6 hello.o\u4e2d\u3002 hello.o \u6587\u4ef6\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5305\u542b\u768417 \u4e2a\u5b57\u8282\u662f\u51fd\u6570 main\u7684\u6307\u4ee4\u7f16\u7801\u3002\u5982\u679c\u6211\u4eec\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00 hello.o\u6587\u4ef6\uff0c\u5c06\u770b\u5230\u4e00\u5806\u4e71\u7801\u3002 \u2003 2.4 \u94fe\u63a5\u9636\u6bb5 # \u6ce8\u610f\uff0chello\u7a0b\u5e8f\u8c03\u7528\u4e86 printf \u51fd\u6570\uff0c\u5b83\u662f\u6bcf\u4e2a C \u7f16\u8bd1\u5668\u90fd\u63d0\u4f9b\u7684\u6807\u51c6 C \u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u3002printf \u51fd\u6570\u5b58\u5728\u4e8e\u4e00\u4e2a\u540d\u4e3a printf.o \u7684\u5355\u72ec\u7684\u9884\u7f16\u8bd1\u597d\u4e86\u7684\u76ee\u6807\u6587\u4ef6\u4e2d\uff0c\u800c\u8fd9\u4e2a\u6587\u4ef6\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5408\u5e76\u5230\u6211\u4eec\u7684 hello.o \u7a0b\u5e8f\u4e2d\u3002 \u94fe\u63a5\u5668\uff08ld\uff09 \u5c31\u8d1f\u8d23\u5904\u7406\u8fd9\u79cd\u5408\u5e76\u3002\u7ed3\u679c\u5c31\u5f97\u5230 hello \u6587\u4ef6\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\uff08\u6216\u8005\u7b80\u79f0\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff0c\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7531\u7cfb\u7edf\u6267\u884c\u3002 \u2003 3 hello, world\u7684\u6267\u884c\u8fc7\u7a0b # \u7b2c\u4e00\u6b65 # shell \u7b49\u5f85\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u547d\u4ee4 \u5f53\u6211\u4eec\u5728\u952e\u76d8\u4e0a\u8f93\u5165\u5b57\u7b26\u4e32\"./hello\"\uff08\u6ce8\u610f\u8fd9\u91cc\u662f\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\uff09\u540e shell \u7a0b\u5e8f\u5c06\u5b57\u7b26\u9010\u4e00\u8bfb\u5165\u5bc4\u5b58\u5668 \u518d\u628a\u5b83\u5b58\u653e\u5230\u5185\u5b58\u4e2d \u2003 \u7b2c\u4e8c\u6b65 # \u5f53\u6211\u4eec\u5728\u952e\u76d8\u4e0a\u6572\u56de\u8f66\u952e\u65f6\uff0cshell \u7a0b\u5e8f\u5c31\u77e5\u9053\u6211\u4eec\u5df2\u7ecf\u7ed3\u675f\u4e86\u547d\u4ee4\u7684\u8f93\u4eba \u7136\u540e shell \u6267\u884c\u4e00\u7cfb\u5217\u6307\u4ee4\u6765\u52a0\u8f7d\u53ef\u6267\u884c\u7684 hello \u6587\u4ef6 \u8fd9\u4e9b\u6307\u4ee4\u5c06 hello \u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u4ece\u78c1\u76d8\u590d\u5236\u5230\u4e3b\u5b58 \u6570\u636e\u5305\u62ec\u6700\u7ec8\u4f1a\u88ab\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\"hello\uff0cworld\\n\"\u3002 \u2003 \u7b2c\u4e09\u6b65 # \u4e00\u65e6\u76ee\u6807\u6587\u4ef6 hello \u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u88ab\u52a0\u8f7d\u5230\u4e3b\u5b58 \u5904\u7406\u5668\u5c31\u5f00\u59cb\u6267\u884c hello \u7a0b\u5e8f\u7684 main \u7a0b\u5e8f\u4e2d\u7684\u673a\u5668\u8bed\u8a00\u6307\u4ee4 \u8fd9\u4e9b\u6307\u4ee4\u5c06 \"hello\uff0cworld\\n\" \u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u8282\u4ece\u4e3b\u5b58\u590d\u5236\u5230\u5bc4\u5b58\u5668\u6587\u4ef6 \u518d\u4ece\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u590d\u5236\u5230\u663e\u793a\u8bbe\u5907\uff0c\u6700\u7ec8\u663e\u793a\u5728\u5c4f\u5e55\u4e0a \u2003 \u2003 4 \u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u5185\u7684\u5b58\u50a8 # \u4e0a\u9762\u7684\u4f8b\u5b50\u63ed\u793a\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\uff0c\u5373\u7cfb\u7edf\u201c\u4f3c\u4e4e\u201d\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u548c\u6b65\u9aa4\u628a\u4fe1\u606f\u4ece\u4e00\u4e2a\u5730\u65b9\u632a\u5230\u53e6\u4e00\u4e2a\u5730\u65b9 - hello\u7a0b\u5e8f\u7684\u673a\u5668\u6307\u4ee4\u6700\u521d\u662f\u5b58\u653e\u5728\u78c1\u76d8\u4e0a - \u5f53\u7a0b\u5e8f\u52a0\u8f7d\u65f6\uff0c\u5b83\u4eec\u88ab\u590d\u5236\u5230\u4e3b\u5b58 - \u5f53\u5904\u7406\u5668\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u6307\u4ee4\u53c8\u4ece\u4e3b\u5b58\u590d\u5236\u5230\u5904\u7406\u5668 \u76f8\u4f3c\u5730\uff0c\u6570\u636e\u4e32 \"hello\uff0cworld\\n\"\u5f00\u59cb\u65f6\u5728\u78c1\u76d8\u4e0a\uff0c\u7136\u540e\u88ab\u590d\u5236\u5230\u4e3b\u5b58\uff0c\u6700\u540e\u4ece\u4e3b\u5b58\u4e0a\u590d\u5236\u5230\u663e\u793a\u8bbe\u5907","title":"2.ComputerSystem"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#\u7b80\u5355\u7f16\u8bd1\u539f\u7406","text":"","title":"\u7b80\u5355\u7f16\u8bd1\u539f\u7406"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#1-hello-world\u5728\u8ba1\u7b97\u673a\u7684\u8868\u793a","text":"hello \u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u662f\u4ece\u4e00\u4e2a\u6e90\u7a0b\u5e8f\uff08\u6216\u8005\u8bf4\u6e90\u6587\u4ef6\uff09\u5f00\u59cb\u7684\uff0c\u5373\u7a0b\u5e8f\u5458\u901a\u8fc7\u7f16\u8f91\u5668\u521b\u5efa\u5e76\u4fdd\u5b58\u7684\u6587\u672c\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u662f hello.c\u3002\u6e90\u7a0b\u5e8f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u7531\u503c 0 \u548c 1\u7ec4\u6210\u7684\u4f4d\uff08\u53c8\u79f0\u4e3a\u6bd4\u7279\uff09\u5e8f\u5217\uff0c8 \u4e2a\u4f4d\u88ab\u7ec4\u7ec7\u6210\u4e00\u7ec4\uff0c\u79f0\u4e3a\u5b57\u8282\u3002\u6bcf\u4e2a\u5b57\u8282\u8868\u793a\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e9b\u6587\u672c\u5b57\u7b26 \u5927\u90e8\u5206\u8ba1\u7b97\u673a\u4f7f\u7528 ASCII \u6807\u51c6\u6765\u8868\u793a\u6587\u672c\u5b57\u7b26 - \u7528\u4e00\u4e2a\u552f\u4e00\u7684\u5355\u5b57\u8282\u5927\u5c0f\u7684\u6574\u6570\u503c\u606f\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26 - hello.c \u7a0b\u5e8f\u662f\u4ee5\u5b57\u8282\u5e8f\u5217\u7684\u65b9\u5f0f\u50a8\u5b58\u5728\u6587\u4ef6\u4e2d\u7684 hello.c \u7684\u8868\u793a\u65b9\u6cd5\u8bf4\u660e\u4e86\u4e00\u4e2a\u57fa\u672c\u601d\u60f3\u2236 \u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u4fe1\u606f\u2014\u2014\u5305\u62ec\u78c1\u76d8\u6587\u4ef6\u3001\u5185\u5b58\u4e2d\u7684\u7a0b\u5e8f\u3001\u5185\u5b58\u4e2d\u5b58\u653e\u7684\u7528\u6237\u6570\u636e\u4ee5\u53ca\u7f51\u7edc\u4e0a\u4f20\u9001\u7684\u6570\u636e\uff0c\u90fd\u662f\u7531\u4e00\u4e32\u6bd4\u7279\u8868\u793a\u7684","title":"1 hello, world\u5728\u8ba1\u7b97\u673a\u7684\u8868\u793a"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#2-\u7f16\u8bd1\u8fc7\u7a0b","text":"hello \u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u4ece\u4e00\u4e2a\u9ad8\u7ea7 C \u8bed\u8a00\u7a0b\u5e8f\u5f00\u59cb \u4e3a\u4e86\u5728\u7cfb\u7edf\u4e0a\u8fd0\u884c hello.c \u7a0b\u5e8f\uff0c\u6bcf\u6761 C \u8bed\u53e5\u90fd\u5fc5\u987b\u88ab\u5176\u4ed6\u7a0b\u5e8f\u8f6c\u5316\u4e3a\u4e00\u7cfb\u5217\u7684\u4f4e\u7ea7\u673a\u5668\u8bed\u8a00\u6307\u4ee4 \u7136\u540e\u8fd9\u4e9b\u6307\u4ee4\u6309\u7167\u4e00\u79cd\u79f0\u4e3a\u53ef\u6267\u884c\u76ee\u6807\u7a0b\u5e8f\u7684\u683c\u5f0f\u6253\u597d\u5305\uff0c\u5e76\u4ee5\u4e8c\u8fdb\u5236\u78c1\u76d8\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u653e\u8d77\u6765 GCC \u7f16\u8bd1\u5668\u8bfb\u53d6\u6e90\u7a0b\u5e8f\u6587\u4ef6 hello.c\uff0c\u5e76\u628a\u5b83\u7ffb\u8bd1\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6 hello\u3002\u8fd9\u4e2a\u7ffb\u8bd1\u8fc7\u7a0b\u53ef\u5206\u4e3a\u56db\u4e2a\u9636\u6bb5\u5b8c\u6210\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u6267\u884c\u8fd9\u56db\u4e2a\u9636\u6bb5\u7684\u7a0b\u5e8f\uff08\u9884\u5904\u7406\u5668\u3001\u7f16\u8bd1\u5668\u3001\u6c47\u7f16\u5668\u548c\u94fe\u63a5\u5668\uff09\u4e00\u8d77\u6784\u6210\u4e86\u7f16\u8bd1\u7cfb\u7edf\uff08compilation system\uff09","title":"2 \u7f16\u8bd1\u8fc7\u7a0b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#21-\u9884\u5904\u7406\u9636\u6bb5","text":"\u9884\u5904\u7406\u5668\uff08cpp\uff09 \u6839\u636e\u4ee5\u5b57\u7b26#\u5f00\u5934\u7684\u547d\u4ee4\uff0c\u4fee\u6539\u539f\u59cb\u7684 C \u7a0b\u5e8f\u3002\u6bd4\u5982 hello.c\u4e2d\u7b2c 1\u884c\u7684#include < stdio.h>\u547d\u4ee4\u544a\u8bc9\u9884\u5904\u7406\u5668\u8bfb\u53d6\u7cfb\u7edf\u5934\u6587\u4ef6 stdio.h \u7684\u5185\u5bb9\uff0c\u5e76\u628a\u5b83\u76f4\u63a5\u63d2\u5165\u7a0b\u5e8f\u6587\u672c\u4e2d\u3002\u7ed3\u679c\u5c31\u5f97\u5230\u4e86\u53e6\u4e00\u4e2a C\u7a0b\u5e8f\uff0c\u901a\u5e38\u662f\u4ee5.i\u4f5c\u4e3a\u6587\u4ef6\u6269\u5c55\u540d\u3002","title":"2.1 \u9884\u5904\u7406\u9636\u6bb5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#22-\u7f16\u8bd1\u9636\u6bb5","text":"\u7f16\u8bd1\u5668\uff08ccl\uff09 \u5c06\u6587\u672c\u6587\u4ef6 hello.i\u7ffb\u8bd1\u6210\u6587\u672c\u6587\u4ef6 hello.s\uff0c\u5b83\u5305\u542b\u4e00 \u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u3002\u8be5\u7a0b\u5e8f\u5305\u542b\u51fd\u6570 main \u7684\u5b9a\u4e49\uff0c\u5982\u4e0b\u6240\u793a\uff1a main: subq $8, %rsp mov1 $.LCO,%edi call puts mov1 $0,%eax addq $8,%rsp ret \u6bcf\u6761\u8bed\u53e5\u90fd\u4ee5\u4e00\u79cd\u6587\u672c\u683c\u5f0f\u63cf\u8ff0\u4e86\u4e00\u6761\u4f4e\u7ea7\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u3002\u6c47\u7f16\u8bed\u8a00\u975e\u5e38\u6709\u7528\uff0c\u5b83\u4e3a\u4e0d\u540c\u9ad8\u7ea7\u8bed\u8a00\u7684\u4e0d\u540c\u7f16\u8bd1\u5668\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u8f93\u51fa\u8bed\u8a00","title":"2.2 \u7f16\u8bd1\u9636\u6bb5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#23-\u6c47\u7f16\u9636\u6bb5","text":"\u6c47\u7f16\u5668\uff08as\uff09 \u5c06 hello.s \u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u6307\u4ee4\uff0c\u628a\u8fd9\u4e9b\u6307\u4ee4\u6253\u5305\u6210\u4e00\u79cd\u53eb\u505a\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u7a0b\u5e8f\uff08relocatable object program\uff09\u7684\u683c\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u76ee\u6807\u6587\u4ef6 hello.o\u4e2d\u3002 hello.o \u6587\u4ef6\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b83\u5305\u542b\u768417 \u4e2a\u5b57\u8282\u662f\u51fd\u6570 main\u7684\u6307\u4ee4\u7f16\u7801\u3002\u5982\u679c\u6211\u4eec\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u6253\u5f00 hello.o\u6587\u4ef6\uff0c\u5c06\u770b\u5230\u4e00\u5806\u4e71\u7801\u3002","title":"2.3 \u6c47\u7f16\u9636\u6bb5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#24-\u94fe\u63a5\u9636\u6bb5","text":"\u6ce8\u610f\uff0chello\u7a0b\u5e8f\u8c03\u7528\u4e86 printf \u51fd\u6570\uff0c\u5b83\u662f\u6bcf\u4e2a C \u7f16\u8bd1\u5668\u90fd\u63d0\u4f9b\u7684\u6807\u51c6 C \u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u3002printf \u51fd\u6570\u5b58\u5728\u4e8e\u4e00\u4e2a\u540d\u4e3a printf.o \u7684\u5355\u72ec\u7684\u9884\u7f16\u8bd1\u597d\u4e86\u7684\u76ee\u6807\u6587\u4ef6\u4e2d\uff0c\u800c\u8fd9\u4e2a\u6587\u4ef6\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5408\u5e76\u5230\u6211\u4eec\u7684 hello.o \u7a0b\u5e8f\u4e2d\u3002 \u94fe\u63a5\u5668\uff08ld\uff09 \u5c31\u8d1f\u8d23\u5904\u7406\u8fd9\u79cd\u5408\u5e76\u3002\u7ed3\u679c\u5c31\u5f97\u5230 hello \u6587\u4ef6\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\uff08\u6216\u8005\u7b80\u79f0\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff09\uff0c\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7531\u7cfb\u7edf\u6267\u884c\u3002","title":"2.4 \u94fe\u63a5\u9636\u6bb5"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#3-hello-world\u7684\u6267\u884c\u8fc7\u7a0b","text":"","title":"3 hello, world\u7684\u6267\u884c\u8fc7\u7a0b"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#\u7b2c\u4e00\u6b65","text":"shell \u7b49\u5f85\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u547d\u4ee4 \u5f53\u6211\u4eec\u5728\u952e\u76d8\u4e0a\u8f93\u5165\u5b57\u7b26\u4e32\"./hello\"\uff08\u6ce8\u610f\u8fd9\u91cc\u662f\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\uff09\u540e shell \u7a0b\u5e8f\u5c06\u5b57\u7b26\u9010\u4e00\u8bfb\u5165\u5bc4\u5b58\u5668 \u518d\u628a\u5b83\u5b58\u653e\u5230\u5185\u5b58\u4e2d","title":"\u7b2c\u4e00\u6b65"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#\u7b2c\u4e8c\u6b65","text":"\u5f53\u6211\u4eec\u5728\u952e\u76d8\u4e0a\u6572\u56de\u8f66\u952e\u65f6\uff0cshell \u7a0b\u5e8f\u5c31\u77e5\u9053\u6211\u4eec\u5df2\u7ecf\u7ed3\u675f\u4e86\u547d\u4ee4\u7684\u8f93\u4eba \u7136\u540e shell \u6267\u884c\u4e00\u7cfb\u5217\u6307\u4ee4\u6765\u52a0\u8f7d\u53ef\u6267\u884c\u7684 hello \u6587\u4ef6 \u8fd9\u4e9b\u6307\u4ee4\u5c06 hello \u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u4ece\u78c1\u76d8\u590d\u5236\u5230\u4e3b\u5b58 \u6570\u636e\u5305\u62ec\u6700\u7ec8\u4f1a\u88ab\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\"hello\uff0cworld\\n\"\u3002","title":"\u7b2c\u4e8c\u6b65"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#\u7b2c\u4e09\u6b65","text":"\u4e00\u65e6\u76ee\u6807\u6587\u4ef6 hello \u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u88ab\u52a0\u8f7d\u5230\u4e3b\u5b58 \u5904\u7406\u5668\u5c31\u5f00\u59cb\u6267\u884c hello \u7a0b\u5e8f\u7684 main \u7a0b\u5e8f\u4e2d\u7684\u673a\u5668\u8bed\u8a00\u6307\u4ee4 \u8fd9\u4e9b\u6307\u4ee4\u5c06 \"hello\uff0cworld\\n\" \u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u8282\u4ece\u4e3b\u5b58\u590d\u5236\u5230\u5bc4\u5b58\u5668\u6587\u4ef6 \u518d\u4ece\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u590d\u5236\u5230\u663e\u793a\u8bbe\u5907\uff0c\u6700\u7ec8\u663e\u793a\u5728\u5c4f\u5e55\u4e0a","title":"\u7b2c\u4e09\u6b65"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/GNU%20Make/Intro/2.ComputerSystem/#4-\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u5185\u7684\u5b58\u50a8","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u63ed\u793a\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\uff0c\u5373\u7cfb\u7edf\u201c\u4f3c\u4e4e\u201d\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u548c\u6b65\u9aa4\u628a\u4fe1\u606f\u4ece\u4e00\u4e2a\u5730\u65b9\u632a\u5230\u53e6\u4e00\u4e2a\u5730\u65b9 - hello\u7a0b\u5e8f\u7684\u673a\u5668\u6307\u4ee4\u6700\u521d\u662f\u5b58\u653e\u5728\u78c1\u76d8\u4e0a - \u5f53\u7a0b\u5e8f\u52a0\u8f7d\u65f6\uff0c\u5b83\u4eec\u88ab\u590d\u5236\u5230\u4e3b\u5b58 - \u5f53\u5904\u7406\u5668\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u6307\u4ee4\u53c8\u4ece\u4e3b\u5b58\u590d\u5236\u5230\u5904\u7406\u5668 \u76f8\u4f3c\u5730\uff0c\u6570\u636e\u4e32 \"hello\uff0cworld\\n\"\u5f00\u59cb\u65f6\u5728\u78c1\u76d8\u4e0a\uff0c\u7136\u540e\u88ab\u590d\u5236\u5230\u4e3b\u5b58\uff0c\u6700\u540e\u4ece\u4e3b\u5b58\u4e0a\u590d\u5236\u5230\u663e\u793a\u8bbe\u5907","title":"4 \u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u5185\u7684\u5b58\u50a8"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/make_env_create/","text":"Build the make environment on windows and Linux # Intro Of Make # Intro: When we write c++ programs,we always need to use commands such as g++ xxx.cpp -g -std=c++17 -Wall -o xxx ,then we can compile our program and execute it. However,it is complicated,maybe waste mass of time. Then, make appears. Since then,we can compile our program by execute make in our terminal,and then our program will be compile. That's so cool! Isn't it? When you use make,the result is just like the image upon. How to create a Make Environment on windows? # Just click the URL here. And you will enter in a new website Then click where the arrow points to. After downloading over,move it to another place,you can create a directory like env to store your programming environment. Then unzip it.Enter in the directory we unzip just now. Then click bin directory. Copy the path of it Now we can use windows shortcuts: windows + q , Then search env Then we click \"\u786e\u5b9a\" Did it work?Let's see! Open the terminal: Input gcc -v and see whether you have the words like the images below \ud83d\ude0aCongratulations! Now we have successfully create gcc&g++ system environment variables. \ud83d\ude09However,make command still not work.Why? It's because in mingw-w64,make program is not called make,but mingw32-make.What we need to do is just change the name of it.Then make works! How to create a Make Environment on Linux? # Use your package manager such as apt. sudo apt-get install gcc g++ make Then,then write your makefile,start your programming journey\uff01","title":"Build the make environment on windows and Linux"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/make_env_create/#build-the-make-environment-on-windows-and-linux","text":"","title":"Build the make environment on windows and Linux"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/make_env_create/#intro-of-make","text":"Intro: When we write c++ programs,we always need to use commands such as g++ xxx.cpp -g -std=c++17 -Wall -o xxx ,then we can compile our program and execute it. However,it is complicated,maybe waste mass of time. Then, make appears. Since then,we can compile our program by execute make in our terminal,and then our program will be compile. That's so cool! Isn't it? When you use make,the result is just like the image upon.","title":"Intro Of Make"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/make_env_create/#how-to-create-a-make-environment-on-windows","text":"Just click the URL here. And you will enter in a new website Then click where the arrow points to. After downloading over,move it to another place,you can create a directory like env to store your programming environment. Then unzip it.Enter in the directory we unzip just now. Then click bin directory. Copy the path of it Now we can use windows shortcuts: windows + q , Then search env Then we click \"\u786e\u5b9a\" Did it work?Let's see! Open the terminal: Input gcc -v and see whether you have the words like the images below \ud83d\ude0aCongratulations! Now we have successfully create gcc&g++ system environment variables. \ud83d\ude09However,make command still not work.Why? It's because in mingw-w64,make program is not called make,but mingw32-make.What we need to do is just change the name of it.Then make works!","title":"How to create a Make Environment on windows?"},{"location":"%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/make_env_create/#how-to-create-a-make-environment-on-linux","text":"Use your package manager such as apt. sudo apt-get install gcc g++ make Then,then write your makefile,start your programming journey\uff01","title":"How to create a Make Environment on Linux?"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/","text":"\u5fae\u5206\u65b9\u7a0b\u6a21\u578b # \ud83d\ude0a\u4e00\u4e9blatex\u4ee3\u7801\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u4e0d\u4f1a\u89e3\u6790\uff0c\u6309f5\u5237\u65b0\u540e\u53ef\u89c1 \u4eba\u53e3\u6a21\u578b # \u5728\u4eba\u53e3\u6a21\u578b\u4e2d\uff0c\u9a6c\u5c14\u8428\u65af\u6a21\u578b\uff08Malthusian Model\uff09\u548cLogistic\u6a21\u578b\u662f\u4e24\u79cd\u5e38\u89c1\u7684\u4eba\u53e3\u589e\u957f\u6a21\u578b\uff0c\u5b83\u4eec\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u9a6c\u5c14\u8428\u65af\u6a21\u578b\uff1a \u9a6c\u5c14\u8428\u65af\u6a21\u578b\u662f\u7531\u82f1\u56fd\u7ecf\u6d4e\u5b66\u5bb6\u6258\u9a6c\u65af\u00b7\u7f57\u4f2f\u7279\u00b7\u9a6c\u5c14\u8428\u65af\uff08Thomas Robert Malthus\uff09\u63d0\u51fa\u7684\uff0c\u7528\u4e8e\u63cf\u8ff0\u4eba\u53e3\u589e\u957f\u7684\u6307\u6570\u7206\u53d1\u8d8b\u52bf\u3002\u8be5\u6a21\u578b\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a\u4eba\u53e3\u5177\u6709\u6307\u6570\u589e\u957f\u7684\u8d8b\u52bf\uff0c\u800c\u8d44\u6e90\u7684\u589e\u957f\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\uff0c\u5bfc\u81f4\u4eba\u53e3\u4e0e\u8d44\u6e90\u4e4b\u95f4\u7684\u4e0d\u5e73\u8861\u3002\u9a6c\u5c14\u8428\u65af\u6a21\u578b\u8ba4\u4e3a\uff0c\u4eba\u53e3\u589e\u957f\u53d7\u5230\u751f\u80b2\u7387\u7684\u6b63\u5411\u5f71\u54cd\u548c\u8d44\u6e90\u9650\u5236\u7684\u8d1f\u5411\u5f71\u54cd\u3002\u5f53\u4eba\u53e3\u8d85\u8fc7\u8d44\u6e90\u627f\u8f7d\u80fd\u529b\u65f6\uff0c\u4f1a\u53d1\u751f\u4eba\u53e3\u5d29\u6e83\u6216\u8c03\u6574\u3002 Logistic\u6a21\u578b\uff1a Logistic\u6a21\u578b\u662f\u57fa\u4e8e\u9a6c\u5c14\u8428\u65af\u6a21\u578b\u7684\u6269\u5c55\uff0c\u8003\u8651\u5230\u8d44\u6e90\u7684\u6709\u9650\u6027\u548c\u751f\u6001\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u8be5\u6a21\u578b\u8ba4\u4e3a\uff0c\u4eba\u53e3\u589e\u957f\u4e0d\u4f1a\u4e00\u76f4\u4fdd\u6301\u6307\u6570\u589e\u957f\uff0c\u800c\u662f\u5728\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\u9010\u6e10\u8d8b\u4e8e\u9971\u548c\u3002Logistic\u6a21\u578b\u5f15\u5165\u4e86\u9971\u548c\u589e\u957f\u56e0\u7d20\uff0c\u901a\u5e38\u4f7f\u7528S\u5f62\u66f2\u7ebf\u6765\u63cf\u8ff0\u4eba\u53e3\u589e\u957f\u7684\u8d8b\u52bf\u3002\u521d\u59cb\u9636\u6bb5\uff0c\u4eba\u53e3\u589e\u957f\u8f83\u5feb\uff0c\u4f46\u968f\u7740\u4eba\u53e3\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8d44\u6e90\u7684\u538b\u529b\u9010\u6e10\u589e\u5927\uff0c\u4eba\u53e3\u589e\u957f\u7387\u9010\u6e10\u51cf\u7f13\uff0c\u6700\u7ec8\u8d8b\u4e8e\u7a33\u5b9a\u3002 \u9a6c\u5c14\u8428\u65af\u6a21\u578b\u548cLogistic\u6a21\u578b\u5728\u4eba\u53e3\u589e\u957f\u7684\u63cf\u8ff0\u548c\u9884\u6d4b\u4e0a\u6709\u6240\u4e0d\u540c\u3002\u9a6c\u5c14\u8428\u65af\u6a21\u578b\u5f3a\u8c03\u6307\u6570\u7206\u53d1\u5f0f\u7684\u4eba\u53e3\u589e\u957f\u8d8b\u52bf\uff0c\u7740\u91cd\u5206\u6790\u4eba\u53e3\u548c\u8d44\u6e90\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8b66\u793a\u4eba\u53e3\u8fc7\u5feb\u589e\u957f\u53ef\u80fd\u5f15\u53d1\u7684\u95ee\u9898\u3002\u800cLogistic\u6a21\u578b\u5219\u66f4\u52a0\u63a5\u8fd1\u5b9e\u9645\u60c5\u51b5\uff0c\u8003\u8651\u4e86\u8d44\u6e90\u7684\u6709\u9650\u6027\uff0c\u8ba4\u4e3a\u4eba\u53e3\u589e\u957f\u4f1a\u53d7\u5230\u8d44\u6e90\u9650\u5236\u7684\u5f71\u54cd\uff0c\u9010\u6e10\u8d8b\u4e8e\u7a33\u5b9a\u3002Logistic\u6a21\u578b\u66f4\u7b26\u5408\u5b9e\u9645\u89c2\u6d4b\u5230\u7684\u4eba\u53e3\u589e\u957f\u8d8b\u52bf\uff0c\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u9884\u6d4b\u4eba\u53e3\u7684\u672a\u6765\u53d1\u5c55\u3002 1. Malthus\uff08\u9a6c\u5c14\u8428\u65af\u4eba\u53e3\u6a21\u578b\uff09 # \u53d8\u91cf\u8868\u793a\uff1a (t, P(t))\uff1a\u8868\u793a\u4eba\u53e3\u7684\u6570\u5bf9\uff0ct\u4e3a\u65f6\u95f4\uff0cP(t) \u4e3a t \u65f6\u523b\u7684\u4eba\u53e3\u6570 b, p\uff1a\u5206\u522b\u8868\u793a\u51fa\u751f\u7387\u3001\u6b7b\u4ea1\u7387 \u6bd4\u5982\u8bf4\uff0c2002\u5e74\u5e74\u521d\u4eba\u53e3\u603b\u6570\u662f p \uff0c\u52192002\u5e74\u51fa\u751f\u7684\u4eba\u6570\u548c\u6b7b\u4ea1\u7684\u4eba\u6570\u5c31\u5206\u522b\u662f bp \u548c dp . \u6240\u4ee5\uff0c2003\u5e74\u5e74\u521d\u7684\u4eba\u53e3\u603b\u6570\u662f \\(p + bp -dp = (1 + b + d) p = (1 + r)p\\) \u8fd9\u91cc\u7684 r \u662f\u81ea\u7136\u589e\u957f\u7387\u3002\u8be5\u6a21\u578b\u662f\u79bb\u6563\u7684\uff0c\u4f46\u662f\u4eba\u53e3\u6570\u5f88\u5927\uff0c\u4eba\u53e3\u53d8\u5316\uff08\u4eba\u7684\u751f\u6b7b\uff09\u662f\u5728\u77ed\u65f6\u95f4\u5185\u968f\u65f6\u5728\u53d1\u751f\uff0c\u6545\u53ef\u4ee5\u770b\u6210\u662f\u8fde\u7eed\u6a21\u578b\u3002 \u7c7b\u4f3c\u4e8e\u77ac\u65f6\u901f\u5ea6\uff0ct \u65f6\u523b\u7684\u4eba\u53e3\u589e\u957f\u7387\uff0c\u4e3a\u4eba\u53e3\u5e73\u5747\u589e\u957f\u7387\u5728\u6240\u7528\u65f6\u95f4\u8d8b\u4e8e 0 \u65f6\u7684\u6781\u9650\uff1a \\(r(t) = lim_{\u25b5t\\rightarrow0}\\frac{P(t+\u25b5t)-P(t)}{\u25b5t}\\) \u5047\u8bbe: \u4eba\u53e3\u53d1\u5c55\u8fc7\u7a0b\u6bd4\u8f83\u5e73\u7a33\uff1b \u4eba\u53e3\u6570\u91cf\u4e3a\u65f6\u95f4\u7684\u8fde\u7eed\u53ef\u5fae\u51fd\u6570\uff1b \u4eba\u53e3\u589e\u957f\u7387\u662f\u4e0e\u65f6\u95f4\u65e0\u5173\u7684\u5e38\u6570 ; \u7531\u524d\u9762\u7684\u5206\u6790\u53ef\u5f97 \\(P(t+\u25b5t)-P(t)=rP(t)\u25b5t\\) $P(t+dt)-P(t)=rP(t)dt$ (\u79bb\u6563\u5f62\u5f0f) $\\frac{dP(t)}{dt}=rP(t)$ , $P(t_0)=P_0$ (\u8fde\u7eed\u5f62\u5f0f) \u8fdb\u4e00\u6b65\u5f97\u5230 Malthus \u4eba\u53e3\u6a21\u578b $P(t)=P_0e^{r(t-t_0)}$ MATLAB\u4ee3\u7801\u6c42\u89e3 # syms r P(t) t0 P0 eqn = diff ( P , t ) == r * P ; cond = P ( t0 ) == P0 ; PSol ( t )= dsolve ( eqn , cond ); % \u8fd4\u56de\u7b26\u53f7\u51fd\u6570symfun simplify ( PSol ( t )) \u8fd0\u884c\u7ed3\u679c\uff1a ans = P0 * exp ( r * ( t - t0 )) 2 . Logistic\u4eba\u53e3\u6a21\u578b # \u963b\u6ede\u589e\u957f\u6a21\u578b Malthus\u4eba\u53e3\u6a21\u578b\u5047\u8bbe\u4eba\u53e3\u589e\u957f\u7387 r \u4e3a\u5e38\u6570\uff0c\u5bfc\u81f4\u4e86\u4eba\u53e3\u6307\u6570\u589e\u957f\u5230\u65e0\u7a77\uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\u3002\u56e0\u4e3a\u6ca1\u6709\u8003\u8651\u5230\u6709\u9650\u7684\u8d44\u6e90\u5bf9\u79cd\u7fa4\u7684\u589e\u957f\u4f1a\u4ea7\u751f\u904f\u5236\u4f5c\u7528\u3002 \u5047\u8bbe \u4eba\u53e3\u589e\u957f\u7387\u662f\u4eba\u53e3\u6570\u91cf\u7684\u9012\u51cf\u51fd\u6570\uff1b \u786e\u5b9a\u7684\u73af\u5883\u5185\u7684\u8d44\u6e90\u4f9b\u7ed9\u4e3a\u5e38\u6570\uff0c\u4e14\u5bf9\u6bcf\u4e2a\u4e2a\u4f53\u7684\u5206\u914d\u662f\u5747\u7b49\u7684\u3002\u8fd9\u8868\u660e\uff1a\u5f53\u4eba\u53e3\u89c4\u6a21\uff08\u5bc6\u5ea6\uff09\u589e\u5927\u65f6\uff0c\u6bcf\u4e2a\u4eba\u98df\u7269\u7684\u5e73\u5747\u5206\u914d\u91cf\u5fc5\u7136\u51cf\u5c11\uff0c\u4ece\u800c\u5bfc\u81f4\u4eba\u53e3\u589e\u957f\u7387\u964d\u4f4e\u3002 (\u5bf9\u4eba\u53e3\u589e\u957f\u7387\u505a\u4fee\u6b63\uff09\uff1a\u8ba9\u5b83\u4e0d\u518d\u662f\u5e38\u6570 r\uff0c\u800c\u662f\u65f6\u95f4 t \u7684\u51fd\u6570 \uff0c\u8ba9\u5b83\u901a\u8fc7 t \u65f6\u523b\u4eba\u53e3\u6570\u91cf\u6765\u8d77\u4f5c\u7528\uff0c\u5047\u8bbe\u662f\u8fd9\u6837\u4f5c\u7528\uff1a \\(r(t)=r(P(t))=r(1-\\frac{P(t)}{K})\\) \u8fd9\u91cc K \u4e3a\u65b0\u5f15\u5165\u7684\u53c2\u6570\uff0c\u8868\u793a\u5730\u7403\u6240\u80fd\u5bb9\u7eb3\u7684\u6700\u5927\u4eba\u53e3\u6570\u91cf\u3002 Malthus \u65f6\u4ee3\uff0c P(t) \u76f8\u5bf9\u4e8e K \u6765\u8bf4\u5f88\u5c0f\uff0c\u62ec\u53f7\u9879\u5f88\u63a5\u8fd11\uff0c\u6240\u4ee5\u4e5f\u5c31\u5408\u7406\u4e86\u3002\u82e5\u53d6 K=+\u221e\uff0c\u5c31\u9000\u5316\u4e3a Malthus \u4eba\u53e3\u6a21\u578b\u3002 \u7528 N(t) \u8868\u793a t \u65f6\u523b\u7684\u4eba\u53e3\u6570\uff0c\u7c7b\u4f3c Malthus \u4eba\u53e3\u6a21\u578b\uff0c\u53ef\u5f97\u5230 Logistic \u4eba\u53e3\u6a21\u578b\uff1a $\\frac{dN(t)}{dt}=r(1-\\frac{N(t)}{K})$ $N(t_0)=N_0$ \u4ecd\u7528\u5206\u79bb\u53d8\u91cf\u6cd5\u5c31\u80fd\u6c42\u89e3\uff1a \\(N(t)=\\frac{k}{1+Ce^{-r(t-t_0)}}\\) \u5176\u4e2d C= \\(\\frac{K-N_0}{N_0}\\) MATLAB\u4ee3\u7801\u6c42\u89e3 # syms r K N(t) t0 N0 eqn = diff ( N , t ) == r * ( 1 - N / K ) * N ; cond = N ( t0 ) == N0 ; NSol ( t ) = dsolve ( eqn , cond ) % \u8fd4\u56de\u7b26\u53f7\u51fd\u6570symfun simplify ( NSol ( t )) \u8fd0\u884c\u7ed3\u679c\uff1a Nsol ( t ) = K / ( exp ( K * (( log ( K / N0 - 1 ) + r * t0 ) / K \u2013 ( r * t ) / K )) + 1 ) ans =( K * N0 * exp ( r * ( t \u2013 t0 ))) / ( K - N0 + N0 * exp ( r * ( t - t0 ))) \u8003\u5bdf\u65f6\u95f4 t \u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927\u65f6\u7684\u6781\u9650\uff0c\u53ef\u4ee5\u53d1\u73b0\u7ed3\u679c\u4e0e Malthus \u6a21\u578b\u5b8c\u5168\u4e0d\u540c\uff01 \u5177\u4f53\u505a\u6cd5: 1.\u5148\u7c97\u7565\uff08\u76ee\u6d4b\uff09\u4f30\u8ba1\u4e00\u4e2a$\\psi$ \uff0c\u5b83\u662f\u5bb9\u7eb3\u91cf\u7684\u754c\u9650\uff0c\u62d0\u70b9\u5904\u662f\u5b83\u7684\u4e00\u534a\uff0c \u6709\u4e86\u5b83\u518d\u5bf9$\\frac{N(t)}{\\psi}$ \u505a Logit \u53d8\u6362\u3002 2) \u518d\u7528\u7ebf\u6027\u56de\u5f52\u4f30\u8ba1\u7cfb\u6570 \\(\\psi_2\\) , \\(\\psi_3\\) \uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u8981\u4f30\u8ba1\u76843\u4e2a\u53c2\u6570\u8f83\u597d\u7684\u4e00\u7ec4\u521d\u59cb\u503c\u3002 3) \u6709\u4e86\u8fd9 3 \u4e2a\u53c2\u6570\u7684\u8f83\u597d\u7684\u521d\u59cb\u503c\uff0c\u518d\u505a\u539f\u6a21\u578b\u7684\u975e\u7ebf\u6027\u62df\u5408\u3002 3 . Leslie \u4eba\u53e3\u6a21\u578b # \u53ea\u5bf9\u4eba\u53e3\u603b\u91cf\u5efa\u6a21\u662f\u4e0d\u591f\u7684\uff0c\u7279\u522b\u662f\u9700\u8981\u7814\u7a76\u548c\u5e74\u9f84\u6bb5\u6709\u5173\u7684\u95ee\u9898\uff1a\u8001\u9f84\u5316\u3001\u52b3\u52a8\u529b\u4eba\u53e3\u7b49\u3002\u8fd9\u5c31\u9700\u8981\u5173\u6ce8\u4eba\u53e3\u7684\u5e74\u9f84\u5206\u5e03\uff08\u6bcf\u4e2a\u5e74\u9f84\u6bb5\u4eba\u53e3\u7684\u6570\u91cf\uff09\uff0c\u9002\u5408\u7684\u6570\u5b66\u6a21\u578b\u662f\u57fa\u4e8e\u5dee\u5206\u65b9\u7a0b\u7406\u8bba\u7684Leslie\u6a21\u578b\u3002 Leslie\u6a21\u578b\uff0c\u662f\u57fa\u4e8e\u5e74\u9f84\u548c\u6027\u522b\uff0c\u5c06\u4eba\u53e3\u5404\u5e74\u9f84\u6bb5\u7684\u53d1\u5c55\u8fc7\u7a0b\u5efa\u7acb\u5dee\u5206\u65b9\u7a0b\u7ec4\uff0c\u5f15\u5165\u77e9\u9635\u8868\u793a\u540e\u53ef\u53d8\u6210\u79bb\u6563\u77e9\u9635\u6a21\u578b\u3002**Leslie\u6a21\u578b\u6784\u5efa\u7684\u57fa\u672c\u539f\u7406**\uff1a\u9996\u5148\u5c06\u4eba\u53e3\u6309\u6027\u522b\u5206\u7ec4\uff0c\u9488\u5bf9\u5973\u6027\u4eba\u53e3\uff0c\u9009\u62e9\u67d0\u521d\u59cb\u65f6\u671f\uff0c\u8bb0\u5206\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5217\u5411\u91cf\uff1b\u7136\u540e\u901a\u8fc7\u5404\u5e74\u9f84\u6bb5\u751f\u80b2\u7387\u3001\u5b58\u6d3b\u7387\u6784\u5efa Leslie \u4eba\u53e3\u77e9\u9635\uff1b\u63a5\u7740\uff0c\u7528Leslie\u4eba\u53e3\u77e9\u9635\u5de6\u4e58\u5206\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u5411\u91cf\uff0c\u5f97\u5230\u65b0\u7684\u5217\u5411\u91cf\u5373\u4e3a\u9884\u6d4b\u7684\u4e0b\u4e00\u9636\u6bb5\u5206\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u5411\u91cf\uff1b\u6700\u540e\uff0c\u6839\u636e\u7537\u5973\u6027\u522b\u6bd4\u4f8b\u63a8\u7b97\u51fa\u4eba\u53e3\u603b\u6570\uff0c\u6839\u636e\u9884\u6d4b\u5e74\u9f84\u5206\u5e03\u53ef\u4ee5\u8ba1\u7b97\u5e73\u5747\u5e74\u9f84\u3001\u5e73\u5747\u5bff\u547d\u3001\u8001\u9f84\u5316\u6307\u6570\u3001\u629a\u517b\u6307\u6570\u7b49\u3002 \u5bf9\u5973\u6027\u4eba\u53e3\u6309\u5e74\u9f84\u5207\u5206\uff0c\u8bb0\u4e3a\u6309\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u5411\u91cf\uff1a \u4f8b\u5982\uff0c0~4\u5c81\u7528 \\(n_0\\) \u8868\u793a\uff0c5~9\u5c81\u7528 \\(n_1\\) \u8868\u793a\uff0c\u2026\u2026\uff0c85-89\u5c81\u7528 \\(n_{s-1}\\) \u8868\u793a\uff0c90\u5c81\u53ca\u4ee5\u4e0a\u7528 \\(n_s\\) \u8868\u793a\uff0c\u5404\u5e74\u9f84\u6bb5\u5973\u6027\u4eba\u53e3\u7684\u8f6c\u79fb\u5173\u7cfb\u5982\u4e0b\uff1a \u5404\u5e74\u9f84\u6bb5\u5973\u6027\u4eba\u53e3\u7684\u8f6c\u79fb\u5173\u7cfb\u56fe \u4f20\u67d3\u75c5\u6a21\u578b # \u8fd9\u91cc\u662f\u5bf9\u6307\u6570\u4f20\u64ad\u6a21\u578b\u3001SI\u6a21\u578b\u3001SIS\u6a21\u578b\u548cSIR\u6a21\u578b\u7684\u7b80\u8981\u4ecb\u7ecd\u53ca\u5176\u5404\u81ea\u7684\u7279\u70b9\uff1a \u6307\u6570\u4f20\u64ad\u6a21\u578b\uff1a \u6307\u6570\u4f20\u64ad\u6a21\u578b\u662f\u4e00\u79cd\u7b80\u5316\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5047\u8bbe\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u4ee5\u6307\u6570\u589e\u957f\u7684\u65b9\u5f0f\u4f20\u64ad\u3002\u8be5\u6a21\u578b\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a\u6bcf\u4e2a\u611f\u67d3\u4e2a\u4f53\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u4ee5\u56fa\u5b9a\u7684\u6982\u7387\u5c06\u75be\u75c5\u4f20\u64ad\u7ed9\u5176\u4ed6\u4eba\uff0c\u611f\u67d3\u4e2a\u4f53\u4e0d\u4f1a\u5eb7\u590d\u6216\u79fb\u9664\u3002\u8fd9\u79cd\u6a21\u578b\u9002\u7528\u4e8e\u65e9\u671f\u4f20\u67d3\u75c5\u7684\u5feb\u901f\u4f20\u64ad\u9636\u6bb5\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u63cf\u8ff0\u75be\u75c5\u7684\u81ea\u7136\u6d88\u9000\u6216\u4eba\u7fa4\u514d\u75ab\u7684\u60c5\u51b5\u3002 SI\u6a21\u578b\uff1a SI\u6a21\u578b\u662f\u4e00\u79cd\u57fa\u672c\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5176\u4e2dS\u8868\u793a\u6613\u611f\u8005\uff08Susceptible\uff09\u548cI\u8868\u793a\u611f\u67d3\u8005\uff08Infected\uff09\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u4eba\u7fa4\u4e2d\u6ca1\u6709\u514d\u75ab\u529b\uff0c\u611f\u67d3\u8005\u4e0d\u4f1a\u5eb7\u590d\u6216\u79fb\u9664\u3002SI\u6a21\u578b\u9002\u7528\u4e8e\u63cf\u8ff0\u4f20\u67d3\u75c5\u7684\u521d\u59cb\u4f20\u64ad\u9636\u6bb5\uff0c\u4f46\u4e0d\u8003\u8651\u5eb7\u590d\u6216\u79fb\u9664\u7684\u60c5\u51b5\u3002 SIS\u6a21\u578b\uff1a SIS\u6a21\u578b\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5176\u4e2dS\u8868\u793a\u6613\u611f\u8005\uff08Susceptible\uff09\u3001I\u8868\u793a\u611f\u67d3\u8005\uff08Infected\uff09\u548cR\u8868\u793a\u5eb7\u590d\u8005\uff08Recovered\uff09\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u611f\u67d3\u8005\u53ef\u4ee5\u5eb7\u590d\u5e76\u91cd\u65b0\u53d8\u4e3a\u6613\u611f\u8005\uff0c\u800c\u6ca1\u6709\u83b7\u5f97\u6301\u4e45\u514d\u75ab\u529b\u3002SIS\u6a21\u578b\u9002\u7528\u4e8e\u63cf\u8ff0\u67d0\u4e9b\u4f20\u67d3\u75c5\uff0c\u5982\u611f\u5192\u6216\u6027\u4f20\u64ad\u75be\u75c5\uff0c\u5176\u4e2d\u4e2a\u4f53\u53ef\u4ee5\u53cd\u590d\u611f\u67d3\u3002 SIR\u6a21\u578b\uff1a SIR\u6a21\u578b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5176\u4e2dS\u8868\u793a\u6613\u611f\u8005\uff08Susceptible\uff09\u3001I\u8868\u793a\u611f\u67d3\u8005\uff08Infected\uff09\u548cR\u8868\u793a\u5eb7\u590d\u8005\uff08Recovered\uff09\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u611f\u67d3\u8005\u7ecf\u8fc7\u4e00\u5b9a\u7684\u4f20\u67d3\u671f\u540e\u53ef\u4ee5\u5eb7\u590d\u5e76\u83b7\u5f97\u6301\u4e45\u514d\u75ab\u529b\uff0c\u4e0d\u518d\u611f\u67d3\u8be5\u75c5\u3002SIR\u6a21\u578b\u9002\u7528\u4e8e\u63cf\u8ff0\u5177\u6709\u6301\u4e45\u514d\u75ab\u529b\u7684\u4f20\u67d3\u75c5\uff0c\u5982\u9ebb\u75b9\u6216\u98ce\u75b9\u3002 SEIR\u6a21\u578b\uff1a SEIR\u6a21\u578b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u6d41\u884c\u75c5\u5b66\u6a21\u578b\uff0c\u7528\u4e8e\u63cf\u8ff0\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u7684\u4f20\u64ad\u8fc7\u7a0b\u3002SEIR\u6a21\u578b\u5c06\u4eba\u7fa4\u5206\u4e3a\u56db\u4e2a\u4e3b\u8981\u7684\u8231\u5ba4\uff1a\u6613\u611f\u8005\uff08Susceptible\uff09\u3001\u6f5c\u4f0f\u8005\uff08Exposed\uff09\u3001\u611f\u67d3\u8005\uff08Infectious\uff09\u548c\u5eb7\u590d\u8005\uff08Recovered\uff09\u3002 \u4e0b\u9762\u662f\u5bf9SEIR\u6a21\u578b\u4e2d\u6bcf\u4e2a\u8231\u5ba4\u7684\u542b\u4e49\u548c\u8f6c\u6362\u8fc7\u7a0b\u7684\u89e3\u91ca\uff1a \u6613\u611f\u8005\uff08Susceptible\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5c1a\u672a\u611f\u67d3\u75c5\u539f\u4f53\u7684\u4e2a\u4f53\uff0c\u4f46\u4ed6\u4eec\u5bf9\u75c5\u539f\u4f53\u5177\u6709\u6613\u611f\u6027\uff0c\u53ef\u4ee5\u88ab\u611f\u67d3\u3002 \u6f5c\u4f0f\u8005\uff08Exposed\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5df2\u7ecf\u611f\u67d3\u75c5\u539f\u4f53\u4f46\u5c1a\u672a\u8868\u73b0\u51fa\u660e\u663e\u75c7\u72b6\u7684\u4e2a\u4f53\u3002\u6f5c\u4f0f\u671f\u662f\u6307\u4ece\u611f\u67d3\u75c5\u539f\u4f53\u5230\u51fa\u73b0\u4e34\u5e8a\u75c7\u72b6\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5728\u6f5c\u4f0f\u671f\u5185\uff0c\u4e2a\u4f53\u53ef\u4ee5\u4f20\u64ad\u75c5\u539f\u4f53\u7ed9\u5176\u4ed6\u4eba\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u81ea\u5df1\u6ca1\u6709\u660e\u663e\u7684\u75c7\u72b6\u3002 \u611f\u67d3\u8005\uff08Infectious\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5df2\u7ecf\u611f\u67d3\u75c5\u539f\u4f53\u4e14\u80fd\u591f\u4f20\u64ad\u7ed9\u5176\u4ed6\u6613\u611f\u8005\u7684\u4e2a\u4f53\u3002\u611f\u67d3\u8005\u901a\u5e38\u8868\u73b0\u51fa\u660e\u663e\u7684\u75c7\u72b6\uff0c\u5982\u53d1\u70ed\u3001\u54b3\u55fd\u7b49\u3002 \u5eb7\u590d\u8005\uff08Recovered\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5df2\u7ecf\u5eb7\u590d\u5e76\u5177\u6709\u514d\u75ab\u529b\u7684\u4e2a\u4f53\u3002\u5eb7\u590d\u8005\u5728\u7ecf\u5386\u611f\u67d3\u540e\uff0c\u53ef\u4ee5\u6062\u590d\u5065\u5eb7\u5e76\u83b7\u5f97\u5bf9\u75c5\u539f\u4f53\u7684\u514d\u75ab\u529b\uff0c\u4ece\u800c\u4e0d\u518d\u6613\u611f\u3002 \u5728SEIR\u6a21\u578b\u4e2d\uff0c\u4e2a\u4f53\u4e4b\u95f4\u7684\u8f6c\u6362\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e00\u7ec4\u5fae\u5206\u65b9\u7a0b\u6765\u63cf\u8ff0\u3002\u8fd9\u4e9b\u65b9\u7a0b\u8003\u8651\u4e86\u4eba\u7fa4\u4e2d\u4e2a\u4f53\u4e4b\u95f4\u7684\u63a5\u89e6\u3001\u611f\u67d3\u3001\u6f5c\u4f0f\u548c\u5eb7\u590d\u7684\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u5982\u4f20\u67d3\u7387\u3001\u6f5c\u4f0f\u671f\u548c\u5eb7\u590d\u7387\u7b49\u3002\u901a\u8fc7\u89e3\u6790\u8fd9\u4e9b\u65b9\u7a0b\uff0c\u53ef\u4ee5\u6a21\u62df\u548c\u9884\u6d4b\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u7684\u4f20\u64ad\u52a8\u6001\uff0c\u5e2e\u52a9\u8bc4\u4f30\u4e0d\u540c\u9632\u63a7\u7b56\u7565\u7684\u6548\u679c\u3002 SEIR\u6a21\u578b\u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u590d\u6742\u7684\u6d41\u884c\u75c5\u5b66\u6a21\u578b\uff0c\u9002\u7528\u4e8e\u63cf\u8ff0\u5177\u6709\u6f5c\u4f0f\u671f\u7684\u4f20\u67d3\u75c5\uff0c\u5982\u6d41\u611f\u3001\u9ebb\u75b9\u7b49\u3002\u5b83\u63d0\u4f9b\u4e86\u66f4\u8be6\u7ec6\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u8fc7\u7a0b\u7684\u63cf\u8ff0\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u548c\u9884\u6d4b\u75ab\u60c5\u7684\u53d1\u5c55\u8d8b\u52bf\uff0c\u5e76\u4e3a\u5236\u5b9a\u516c\u5171\u536b\u751f\u5e72\u9884\u63aa\u65bd\u63d0\u4f9b\u79d1\u5b66\u4f9d\u636e\u3002 \u8fd9\u4e9b\u6a21\u578b\u5728\u4f20\u67d3\u75c5\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d\u8003\u8651\u4e86\u4e0d\u540c\u7684\u56e0\u7d20\u548c\u5047\u8bbe\uff0c\u53ef\u4ee5\u7528\u4e8e\u5206\u6790\u4f20\u67d3\u75c5\u7684\u4f20\u64ad\u52a8\u6001\u3001\u9884\u6d4b\u75ab\u60c5\u8d8b\u52bf\u4ee5\u53ca\u8bc4\u4f30\u4e0d\u540c\u7684\u9632\u63a7\u7b56\u7565\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u6a21\u578b\u662f\u7b80\u5316\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u80fd\u9700\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u9002\u5f53\u7684\u8c03\u6574\u548c\u6269\u5c55\u3002","title":"\u5fae\u5206\u65b9\u7a0b\u6a21\u578b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#\u5fae\u5206\u65b9\u7a0b\u6a21\u578b","text":"\ud83d\ude0a\u4e00\u4e9blatex\u4ee3\u7801\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u4e0d\u4f1a\u89e3\u6790\uff0c\u6309f5\u5237\u65b0\u540e\u53ef\u89c1","title":"\u5fae\u5206\u65b9\u7a0b\u6a21\u578b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#\u4eba\u53e3\u6a21\u578b","text":"\u5728\u4eba\u53e3\u6a21\u578b\u4e2d\uff0c\u9a6c\u5c14\u8428\u65af\u6a21\u578b\uff08Malthusian Model\uff09\u548cLogistic\u6a21\u578b\u662f\u4e24\u79cd\u5e38\u89c1\u7684\u4eba\u53e3\u589e\u957f\u6a21\u578b\uff0c\u5b83\u4eec\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u9a6c\u5c14\u8428\u65af\u6a21\u578b\uff1a \u9a6c\u5c14\u8428\u65af\u6a21\u578b\u662f\u7531\u82f1\u56fd\u7ecf\u6d4e\u5b66\u5bb6\u6258\u9a6c\u65af\u00b7\u7f57\u4f2f\u7279\u00b7\u9a6c\u5c14\u8428\u65af\uff08Thomas Robert Malthus\uff09\u63d0\u51fa\u7684\uff0c\u7528\u4e8e\u63cf\u8ff0\u4eba\u53e3\u589e\u957f\u7684\u6307\u6570\u7206\u53d1\u8d8b\u52bf\u3002\u8be5\u6a21\u578b\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a\u4eba\u53e3\u5177\u6709\u6307\u6570\u589e\u957f\u7684\u8d8b\u52bf\uff0c\u800c\u8d44\u6e90\u7684\u589e\u957f\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\uff0c\u5bfc\u81f4\u4eba\u53e3\u4e0e\u8d44\u6e90\u4e4b\u95f4\u7684\u4e0d\u5e73\u8861\u3002\u9a6c\u5c14\u8428\u65af\u6a21\u578b\u8ba4\u4e3a\uff0c\u4eba\u53e3\u589e\u957f\u53d7\u5230\u751f\u80b2\u7387\u7684\u6b63\u5411\u5f71\u54cd\u548c\u8d44\u6e90\u9650\u5236\u7684\u8d1f\u5411\u5f71\u54cd\u3002\u5f53\u4eba\u53e3\u8d85\u8fc7\u8d44\u6e90\u627f\u8f7d\u80fd\u529b\u65f6\uff0c\u4f1a\u53d1\u751f\u4eba\u53e3\u5d29\u6e83\u6216\u8c03\u6574\u3002 Logistic\u6a21\u578b\uff1a Logistic\u6a21\u578b\u662f\u57fa\u4e8e\u9a6c\u5c14\u8428\u65af\u6a21\u578b\u7684\u6269\u5c55\uff0c\u8003\u8651\u5230\u8d44\u6e90\u7684\u6709\u9650\u6027\u548c\u751f\u6001\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u8be5\u6a21\u578b\u8ba4\u4e3a\uff0c\u4eba\u53e3\u589e\u957f\u4e0d\u4f1a\u4e00\u76f4\u4fdd\u6301\u6307\u6570\u589e\u957f\uff0c\u800c\u662f\u5728\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\u9010\u6e10\u8d8b\u4e8e\u9971\u548c\u3002Logistic\u6a21\u578b\u5f15\u5165\u4e86\u9971\u548c\u589e\u957f\u56e0\u7d20\uff0c\u901a\u5e38\u4f7f\u7528S\u5f62\u66f2\u7ebf\u6765\u63cf\u8ff0\u4eba\u53e3\u589e\u957f\u7684\u8d8b\u52bf\u3002\u521d\u59cb\u9636\u6bb5\uff0c\u4eba\u53e3\u589e\u957f\u8f83\u5feb\uff0c\u4f46\u968f\u7740\u4eba\u53e3\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8d44\u6e90\u7684\u538b\u529b\u9010\u6e10\u589e\u5927\uff0c\u4eba\u53e3\u589e\u957f\u7387\u9010\u6e10\u51cf\u7f13\uff0c\u6700\u7ec8\u8d8b\u4e8e\u7a33\u5b9a\u3002 \u9a6c\u5c14\u8428\u65af\u6a21\u578b\u548cLogistic\u6a21\u578b\u5728\u4eba\u53e3\u589e\u957f\u7684\u63cf\u8ff0\u548c\u9884\u6d4b\u4e0a\u6709\u6240\u4e0d\u540c\u3002\u9a6c\u5c14\u8428\u65af\u6a21\u578b\u5f3a\u8c03\u6307\u6570\u7206\u53d1\u5f0f\u7684\u4eba\u53e3\u589e\u957f\u8d8b\u52bf\uff0c\u7740\u91cd\u5206\u6790\u4eba\u53e3\u548c\u8d44\u6e90\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8b66\u793a\u4eba\u53e3\u8fc7\u5feb\u589e\u957f\u53ef\u80fd\u5f15\u53d1\u7684\u95ee\u9898\u3002\u800cLogistic\u6a21\u578b\u5219\u66f4\u52a0\u63a5\u8fd1\u5b9e\u9645\u60c5\u51b5\uff0c\u8003\u8651\u4e86\u8d44\u6e90\u7684\u6709\u9650\u6027\uff0c\u8ba4\u4e3a\u4eba\u53e3\u589e\u957f\u4f1a\u53d7\u5230\u8d44\u6e90\u9650\u5236\u7684\u5f71\u54cd\uff0c\u9010\u6e10\u8d8b\u4e8e\u7a33\u5b9a\u3002Logistic\u6a21\u578b\u66f4\u7b26\u5408\u5b9e\u9645\u89c2\u6d4b\u5230\u7684\u4eba\u53e3\u589e\u957f\u8d8b\u52bf\uff0c\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u9884\u6d4b\u4eba\u53e3\u7684\u672a\u6765\u53d1\u5c55\u3002","title":"\u4eba\u53e3\u6a21\u578b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#1-malthus\u9a6c\u5c14\u8428\u65af\u4eba\u53e3\u6a21\u578b","text":"\u53d8\u91cf\u8868\u793a\uff1a (t, P(t))\uff1a\u8868\u793a\u4eba\u53e3\u7684\u6570\u5bf9\uff0ct\u4e3a\u65f6\u95f4\uff0cP(t) \u4e3a t \u65f6\u523b\u7684\u4eba\u53e3\u6570 b, p\uff1a\u5206\u522b\u8868\u793a\u51fa\u751f\u7387\u3001\u6b7b\u4ea1\u7387 \u6bd4\u5982\u8bf4\uff0c2002\u5e74\u5e74\u521d\u4eba\u53e3\u603b\u6570\u662f p \uff0c\u52192002\u5e74\u51fa\u751f\u7684\u4eba\u6570\u548c\u6b7b\u4ea1\u7684\u4eba\u6570\u5c31\u5206\u522b\u662f bp \u548c dp . \u6240\u4ee5\uff0c2003\u5e74\u5e74\u521d\u7684\u4eba\u53e3\u603b\u6570\u662f \\(p + bp -dp = (1 + b + d) p = (1 + r)p\\) \u8fd9\u91cc\u7684 r \u662f\u81ea\u7136\u589e\u957f\u7387\u3002\u8be5\u6a21\u578b\u662f\u79bb\u6563\u7684\uff0c\u4f46\u662f\u4eba\u53e3\u6570\u5f88\u5927\uff0c\u4eba\u53e3\u53d8\u5316\uff08\u4eba\u7684\u751f\u6b7b\uff09\u662f\u5728\u77ed\u65f6\u95f4\u5185\u968f\u65f6\u5728\u53d1\u751f\uff0c\u6545\u53ef\u4ee5\u770b\u6210\u662f\u8fde\u7eed\u6a21\u578b\u3002 \u7c7b\u4f3c\u4e8e\u77ac\u65f6\u901f\u5ea6\uff0ct \u65f6\u523b\u7684\u4eba\u53e3\u589e\u957f\u7387\uff0c\u4e3a\u4eba\u53e3\u5e73\u5747\u589e\u957f\u7387\u5728\u6240\u7528\u65f6\u95f4\u8d8b\u4e8e 0 \u65f6\u7684\u6781\u9650\uff1a \\(r(t) = lim_{\u25b5t\\rightarrow0}\\frac{P(t+\u25b5t)-P(t)}{\u25b5t}\\) \u5047\u8bbe: \u4eba\u53e3\u53d1\u5c55\u8fc7\u7a0b\u6bd4\u8f83\u5e73\u7a33\uff1b \u4eba\u53e3\u6570\u91cf\u4e3a\u65f6\u95f4\u7684\u8fde\u7eed\u53ef\u5fae\u51fd\u6570\uff1b \u4eba\u53e3\u589e\u957f\u7387\u662f\u4e0e\u65f6\u95f4\u65e0\u5173\u7684\u5e38\u6570 ; \u7531\u524d\u9762\u7684\u5206\u6790\u53ef\u5f97 \\(P(t+\u25b5t)-P(t)=rP(t)\u25b5t\\) $P(t+dt)-P(t)=rP(t)dt$ (\u79bb\u6563\u5f62\u5f0f) $\\frac{dP(t)}{dt}=rP(t)$ , $P(t_0)=P_0$ (\u8fde\u7eed\u5f62\u5f0f) \u8fdb\u4e00\u6b65\u5f97\u5230 Malthus \u4eba\u53e3\u6a21\u578b $P(t)=P_0e^{r(t-t_0)}$","title":"1. Malthus\uff08\u9a6c\u5c14\u8428\u65af\u4eba\u53e3\u6a21\u578b\uff09"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#matlab\u4ee3\u7801\u6c42\u89e3","text":"syms r P(t) t0 P0 eqn = diff ( P , t ) == r * P ; cond = P ( t0 ) == P0 ; PSol ( t )= dsolve ( eqn , cond ); % \u8fd4\u56de\u7b26\u53f7\u51fd\u6570symfun simplify ( PSol ( t )) \u8fd0\u884c\u7ed3\u679c\uff1a ans = P0 * exp ( r * ( t - t0 ))","title":"MATLAB\u4ee3\u7801\u6c42\u89e3"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#2--logistic\u4eba\u53e3\u6a21\u578b","text":"\u963b\u6ede\u589e\u957f\u6a21\u578b Malthus\u4eba\u53e3\u6a21\u578b\u5047\u8bbe\u4eba\u53e3\u589e\u957f\u7387 r \u4e3a\u5e38\u6570\uff0c\u5bfc\u81f4\u4e86\u4eba\u53e3\u6307\u6570\u589e\u957f\u5230\u65e0\u7a77\uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\u3002\u56e0\u4e3a\u6ca1\u6709\u8003\u8651\u5230\u6709\u9650\u7684\u8d44\u6e90\u5bf9\u79cd\u7fa4\u7684\u589e\u957f\u4f1a\u4ea7\u751f\u904f\u5236\u4f5c\u7528\u3002 \u5047\u8bbe \u4eba\u53e3\u589e\u957f\u7387\u662f\u4eba\u53e3\u6570\u91cf\u7684\u9012\u51cf\u51fd\u6570\uff1b \u786e\u5b9a\u7684\u73af\u5883\u5185\u7684\u8d44\u6e90\u4f9b\u7ed9\u4e3a\u5e38\u6570\uff0c\u4e14\u5bf9\u6bcf\u4e2a\u4e2a\u4f53\u7684\u5206\u914d\u662f\u5747\u7b49\u7684\u3002\u8fd9\u8868\u660e\uff1a\u5f53\u4eba\u53e3\u89c4\u6a21\uff08\u5bc6\u5ea6\uff09\u589e\u5927\u65f6\uff0c\u6bcf\u4e2a\u4eba\u98df\u7269\u7684\u5e73\u5747\u5206\u914d\u91cf\u5fc5\u7136\u51cf\u5c11\uff0c\u4ece\u800c\u5bfc\u81f4\u4eba\u53e3\u589e\u957f\u7387\u964d\u4f4e\u3002 (\u5bf9\u4eba\u53e3\u589e\u957f\u7387\u505a\u4fee\u6b63\uff09\uff1a\u8ba9\u5b83\u4e0d\u518d\u662f\u5e38\u6570 r\uff0c\u800c\u662f\u65f6\u95f4 t \u7684\u51fd\u6570 \uff0c\u8ba9\u5b83\u901a\u8fc7 t \u65f6\u523b\u4eba\u53e3\u6570\u91cf\u6765\u8d77\u4f5c\u7528\uff0c\u5047\u8bbe\u662f\u8fd9\u6837\u4f5c\u7528\uff1a \\(r(t)=r(P(t))=r(1-\\frac{P(t)}{K})\\) \u8fd9\u91cc K \u4e3a\u65b0\u5f15\u5165\u7684\u53c2\u6570\uff0c\u8868\u793a\u5730\u7403\u6240\u80fd\u5bb9\u7eb3\u7684\u6700\u5927\u4eba\u53e3\u6570\u91cf\u3002 Malthus \u65f6\u4ee3\uff0c P(t) \u76f8\u5bf9\u4e8e K \u6765\u8bf4\u5f88\u5c0f\uff0c\u62ec\u53f7\u9879\u5f88\u63a5\u8fd11\uff0c\u6240\u4ee5\u4e5f\u5c31\u5408\u7406\u4e86\u3002\u82e5\u53d6 K=+\u221e\uff0c\u5c31\u9000\u5316\u4e3a Malthus \u4eba\u53e3\u6a21\u578b\u3002 \u7528 N(t) \u8868\u793a t \u65f6\u523b\u7684\u4eba\u53e3\u6570\uff0c\u7c7b\u4f3c Malthus \u4eba\u53e3\u6a21\u578b\uff0c\u53ef\u5f97\u5230 Logistic \u4eba\u53e3\u6a21\u578b\uff1a $\\frac{dN(t)}{dt}=r(1-\\frac{N(t)}{K})$ $N(t_0)=N_0$ \u4ecd\u7528\u5206\u79bb\u53d8\u91cf\u6cd5\u5c31\u80fd\u6c42\u89e3\uff1a \\(N(t)=\\frac{k}{1+Ce^{-r(t-t_0)}}\\) \u5176\u4e2d C= \\(\\frac{K-N_0}{N_0}\\)","title":"2 . Logistic\u4eba\u53e3\u6a21\u578b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#matlab\u4ee3\u7801\u6c42\u89e3_1","text":"syms r K N(t) t0 N0 eqn = diff ( N , t ) == r * ( 1 - N / K ) * N ; cond = N ( t0 ) == N0 ; NSol ( t ) = dsolve ( eqn , cond ) % \u8fd4\u56de\u7b26\u53f7\u51fd\u6570symfun simplify ( NSol ( t )) \u8fd0\u884c\u7ed3\u679c\uff1a Nsol ( t ) = K / ( exp ( K * (( log ( K / N0 - 1 ) + r * t0 ) / K \u2013 ( r * t ) / K )) + 1 ) ans =( K * N0 * exp ( r * ( t \u2013 t0 ))) / ( K - N0 + N0 * exp ( r * ( t - t0 ))) \u8003\u5bdf\u65f6\u95f4 t \u8d8b\u8fd1\u4e8e\u65e0\u7a77\u5927\u65f6\u7684\u6781\u9650\uff0c\u53ef\u4ee5\u53d1\u73b0\u7ed3\u679c\u4e0e Malthus \u6a21\u578b\u5b8c\u5168\u4e0d\u540c\uff01 \u5177\u4f53\u505a\u6cd5: 1.\u5148\u7c97\u7565\uff08\u76ee\u6d4b\uff09\u4f30\u8ba1\u4e00\u4e2a$\\psi$ \uff0c\u5b83\u662f\u5bb9\u7eb3\u91cf\u7684\u754c\u9650\uff0c\u62d0\u70b9\u5904\u662f\u5b83\u7684\u4e00\u534a\uff0c \u6709\u4e86\u5b83\u518d\u5bf9$\\frac{N(t)}{\\psi}$ \u505a Logit \u53d8\u6362\u3002 2) \u518d\u7528\u7ebf\u6027\u56de\u5f52\u4f30\u8ba1\u7cfb\u6570 \\(\\psi_2\\) , \\(\\psi_3\\) \uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u8981\u4f30\u8ba1\u76843\u4e2a\u53c2\u6570\u8f83\u597d\u7684\u4e00\u7ec4\u521d\u59cb\u503c\u3002 3) \u6709\u4e86\u8fd9 3 \u4e2a\u53c2\u6570\u7684\u8f83\u597d\u7684\u521d\u59cb\u503c\uff0c\u518d\u505a\u539f\u6a21\u578b\u7684\u975e\u7ebf\u6027\u62df\u5408\u3002","title":"MATLAB\u4ee3\u7801\u6c42\u89e3"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#3--leslie-\u4eba\u53e3\u6a21\u578b","text":"\u53ea\u5bf9\u4eba\u53e3\u603b\u91cf\u5efa\u6a21\u662f\u4e0d\u591f\u7684\uff0c\u7279\u522b\u662f\u9700\u8981\u7814\u7a76\u548c\u5e74\u9f84\u6bb5\u6709\u5173\u7684\u95ee\u9898\uff1a\u8001\u9f84\u5316\u3001\u52b3\u52a8\u529b\u4eba\u53e3\u7b49\u3002\u8fd9\u5c31\u9700\u8981\u5173\u6ce8\u4eba\u53e3\u7684\u5e74\u9f84\u5206\u5e03\uff08\u6bcf\u4e2a\u5e74\u9f84\u6bb5\u4eba\u53e3\u7684\u6570\u91cf\uff09\uff0c\u9002\u5408\u7684\u6570\u5b66\u6a21\u578b\u662f\u57fa\u4e8e\u5dee\u5206\u65b9\u7a0b\u7406\u8bba\u7684Leslie\u6a21\u578b\u3002 Leslie\u6a21\u578b\uff0c\u662f\u57fa\u4e8e\u5e74\u9f84\u548c\u6027\u522b\uff0c\u5c06\u4eba\u53e3\u5404\u5e74\u9f84\u6bb5\u7684\u53d1\u5c55\u8fc7\u7a0b\u5efa\u7acb\u5dee\u5206\u65b9\u7a0b\u7ec4\uff0c\u5f15\u5165\u77e9\u9635\u8868\u793a\u540e\u53ef\u53d8\u6210\u79bb\u6563\u77e9\u9635\u6a21\u578b\u3002**Leslie\u6a21\u578b\u6784\u5efa\u7684\u57fa\u672c\u539f\u7406**\uff1a\u9996\u5148\u5c06\u4eba\u53e3\u6309\u6027\u522b\u5206\u7ec4\uff0c\u9488\u5bf9\u5973\u6027\u4eba\u53e3\uff0c\u9009\u62e9\u67d0\u521d\u59cb\u65f6\u671f\uff0c\u8bb0\u5206\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5217\u5411\u91cf\uff1b\u7136\u540e\u901a\u8fc7\u5404\u5e74\u9f84\u6bb5\u751f\u80b2\u7387\u3001\u5b58\u6d3b\u7387\u6784\u5efa Leslie \u4eba\u53e3\u77e9\u9635\uff1b\u63a5\u7740\uff0c\u7528Leslie\u4eba\u53e3\u77e9\u9635\u5de6\u4e58\u5206\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u5411\u91cf\uff0c\u5f97\u5230\u65b0\u7684\u5217\u5411\u91cf\u5373\u4e3a\u9884\u6d4b\u7684\u4e0b\u4e00\u9636\u6bb5\u5206\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u5411\u91cf\uff1b\u6700\u540e\uff0c\u6839\u636e\u7537\u5973\u6027\u522b\u6bd4\u4f8b\u63a8\u7b97\u51fa\u4eba\u53e3\u603b\u6570\uff0c\u6839\u636e\u9884\u6d4b\u5e74\u9f84\u5206\u5e03\u53ef\u4ee5\u8ba1\u7b97\u5e73\u5747\u5e74\u9f84\u3001\u5e73\u5747\u5bff\u547d\u3001\u8001\u9f84\u5316\u6307\u6570\u3001\u629a\u517b\u6307\u6570\u7b49\u3002 \u5bf9\u5973\u6027\u4eba\u53e3\u6309\u5e74\u9f84\u5207\u5206\uff0c\u8bb0\u4e3a\u6309\u5e74\u9f84\u6bb5\u7684\u5973\u6027\u4eba\u53e3\u5411\u91cf\uff1a \u4f8b\u5982\uff0c0~4\u5c81\u7528 \\(n_0\\) \u8868\u793a\uff0c5~9\u5c81\u7528 \\(n_1\\) \u8868\u793a\uff0c\u2026\u2026\uff0c85-89\u5c81\u7528 \\(n_{s-1}\\) \u8868\u793a\uff0c90\u5c81\u53ca\u4ee5\u4e0a\u7528 \\(n_s\\) \u8868\u793a\uff0c\u5404\u5e74\u9f84\u6bb5\u5973\u6027\u4eba\u53e3\u7684\u8f6c\u79fb\u5173\u7cfb\u5982\u4e0b\uff1a \u5404\u5e74\u9f84\u6bb5\u5973\u6027\u4eba\u53e3\u7684\u8f6c\u79fb\u5173\u7cfb\u56fe","title":"3 . Leslie \u4eba\u53e3\u6a21\u578b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%A8%A1%E5%9E%8B/#\u4f20\u67d3\u75c5\u6a21\u578b","text":"\u8fd9\u91cc\u662f\u5bf9\u6307\u6570\u4f20\u64ad\u6a21\u578b\u3001SI\u6a21\u578b\u3001SIS\u6a21\u578b\u548cSIR\u6a21\u578b\u7684\u7b80\u8981\u4ecb\u7ecd\u53ca\u5176\u5404\u81ea\u7684\u7279\u70b9\uff1a \u6307\u6570\u4f20\u64ad\u6a21\u578b\uff1a \u6307\u6570\u4f20\u64ad\u6a21\u578b\u662f\u4e00\u79cd\u7b80\u5316\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5047\u8bbe\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u4ee5\u6307\u6570\u589e\u957f\u7684\u65b9\u5f0f\u4f20\u64ad\u3002\u8be5\u6a21\u578b\u57fa\u4e8e\u4ee5\u4e0b\u5047\u8bbe\uff1a\u6bcf\u4e2a\u611f\u67d3\u4e2a\u4f53\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u4ee5\u56fa\u5b9a\u7684\u6982\u7387\u5c06\u75be\u75c5\u4f20\u64ad\u7ed9\u5176\u4ed6\u4eba\uff0c\u611f\u67d3\u4e2a\u4f53\u4e0d\u4f1a\u5eb7\u590d\u6216\u79fb\u9664\u3002\u8fd9\u79cd\u6a21\u578b\u9002\u7528\u4e8e\u65e9\u671f\u4f20\u67d3\u75c5\u7684\u5feb\u901f\u4f20\u64ad\u9636\u6bb5\uff0c\u4f46\u4e0d\u9002\u7528\u4e8e\u63cf\u8ff0\u75be\u75c5\u7684\u81ea\u7136\u6d88\u9000\u6216\u4eba\u7fa4\u514d\u75ab\u7684\u60c5\u51b5\u3002 SI\u6a21\u578b\uff1a SI\u6a21\u578b\u662f\u4e00\u79cd\u57fa\u672c\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5176\u4e2dS\u8868\u793a\u6613\u611f\u8005\uff08Susceptible\uff09\u548cI\u8868\u793a\u611f\u67d3\u8005\uff08Infected\uff09\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u4eba\u7fa4\u4e2d\u6ca1\u6709\u514d\u75ab\u529b\uff0c\u611f\u67d3\u8005\u4e0d\u4f1a\u5eb7\u590d\u6216\u79fb\u9664\u3002SI\u6a21\u578b\u9002\u7528\u4e8e\u63cf\u8ff0\u4f20\u67d3\u75c5\u7684\u521d\u59cb\u4f20\u64ad\u9636\u6bb5\uff0c\u4f46\u4e0d\u8003\u8651\u5eb7\u590d\u6216\u79fb\u9664\u7684\u60c5\u51b5\u3002 SIS\u6a21\u578b\uff1a SIS\u6a21\u578b\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5176\u4e2dS\u8868\u793a\u6613\u611f\u8005\uff08Susceptible\uff09\u3001I\u8868\u793a\u611f\u67d3\u8005\uff08Infected\uff09\u548cR\u8868\u793a\u5eb7\u590d\u8005\uff08Recovered\uff09\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u611f\u67d3\u8005\u53ef\u4ee5\u5eb7\u590d\u5e76\u91cd\u65b0\u53d8\u4e3a\u6613\u611f\u8005\uff0c\u800c\u6ca1\u6709\u83b7\u5f97\u6301\u4e45\u514d\u75ab\u529b\u3002SIS\u6a21\u578b\u9002\u7528\u4e8e\u63cf\u8ff0\u67d0\u4e9b\u4f20\u67d3\u75c5\uff0c\u5982\u611f\u5192\u6216\u6027\u4f20\u64ad\u75be\u75c5\uff0c\u5176\u4e2d\u4e2a\u4f53\u53ef\u4ee5\u53cd\u590d\u611f\u67d3\u3002 SIR\u6a21\u578b\uff1a SIR\u6a21\u578b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u6a21\u578b\uff0c\u5176\u4e2dS\u8868\u793a\u6613\u611f\u8005\uff08Susceptible\uff09\u3001I\u8868\u793a\u611f\u67d3\u8005\uff08Infected\uff09\u548cR\u8868\u793a\u5eb7\u590d\u8005\uff08Recovered\uff09\u3002\u8be5\u6a21\u578b\u5047\u8bbe\u611f\u67d3\u8005\u7ecf\u8fc7\u4e00\u5b9a\u7684\u4f20\u67d3\u671f\u540e\u53ef\u4ee5\u5eb7\u590d\u5e76\u83b7\u5f97\u6301\u4e45\u514d\u75ab\u529b\uff0c\u4e0d\u518d\u611f\u67d3\u8be5\u75c5\u3002SIR\u6a21\u578b\u9002\u7528\u4e8e\u63cf\u8ff0\u5177\u6709\u6301\u4e45\u514d\u75ab\u529b\u7684\u4f20\u67d3\u75c5\uff0c\u5982\u9ebb\u75b9\u6216\u98ce\u75b9\u3002 SEIR\u6a21\u578b\uff1a SEIR\u6a21\u578b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u6d41\u884c\u75c5\u5b66\u6a21\u578b\uff0c\u7528\u4e8e\u63cf\u8ff0\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u7684\u4f20\u64ad\u8fc7\u7a0b\u3002SEIR\u6a21\u578b\u5c06\u4eba\u7fa4\u5206\u4e3a\u56db\u4e2a\u4e3b\u8981\u7684\u8231\u5ba4\uff1a\u6613\u611f\u8005\uff08Susceptible\uff09\u3001\u6f5c\u4f0f\u8005\uff08Exposed\uff09\u3001\u611f\u67d3\u8005\uff08Infectious\uff09\u548c\u5eb7\u590d\u8005\uff08Recovered\uff09\u3002 \u4e0b\u9762\u662f\u5bf9SEIR\u6a21\u578b\u4e2d\u6bcf\u4e2a\u8231\u5ba4\u7684\u542b\u4e49\u548c\u8f6c\u6362\u8fc7\u7a0b\u7684\u89e3\u91ca\uff1a \u6613\u611f\u8005\uff08Susceptible\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5c1a\u672a\u611f\u67d3\u75c5\u539f\u4f53\u7684\u4e2a\u4f53\uff0c\u4f46\u4ed6\u4eec\u5bf9\u75c5\u539f\u4f53\u5177\u6709\u6613\u611f\u6027\uff0c\u53ef\u4ee5\u88ab\u611f\u67d3\u3002 \u6f5c\u4f0f\u8005\uff08Exposed\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5df2\u7ecf\u611f\u67d3\u75c5\u539f\u4f53\u4f46\u5c1a\u672a\u8868\u73b0\u51fa\u660e\u663e\u75c7\u72b6\u7684\u4e2a\u4f53\u3002\u6f5c\u4f0f\u671f\u662f\u6307\u4ece\u611f\u67d3\u75c5\u539f\u4f53\u5230\u51fa\u73b0\u4e34\u5e8a\u75c7\u72b6\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5728\u6f5c\u4f0f\u671f\u5185\uff0c\u4e2a\u4f53\u53ef\u4ee5\u4f20\u64ad\u75c5\u539f\u4f53\u7ed9\u5176\u4ed6\u4eba\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u81ea\u5df1\u6ca1\u6709\u660e\u663e\u7684\u75c7\u72b6\u3002 \u611f\u67d3\u8005\uff08Infectious\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5df2\u7ecf\u611f\u67d3\u75c5\u539f\u4f53\u4e14\u80fd\u591f\u4f20\u64ad\u7ed9\u5176\u4ed6\u6613\u611f\u8005\u7684\u4e2a\u4f53\u3002\u611f\u67d3\u8005\u901a\u5e38\u8868\u73b0\u51fa\u660e\u663e\u7684\u75c7\u72b6\uff0c\u5982\u53d1\u70ed\u3001\u54b3\u55fd\u7b49\u3002 \u5eb7\u590d\u8005\uff08Recovered\uff09\uff1a\u8fd9\u4e2a\u8231\u5ba4\u5305\u62ec\u5df2\u7ecf\u5eb7\u590d\u5e76\u5177\u6709\u514d\u75ab\u529b\u7684\u4e2a\u4f53\u3002\u5eb7\u590d\u8005\u5728\u7ecf\u5386\u611f\u67d3\u540e\uff0c\u53ef\u4ee5\u6062\u590d\u5065\u5eb7\u5e76\u83b7\u5f97\u5bf9\u75c5\u539f\u4f53\u7684\u514d\u75ab\u529b\uff0c\u4ece\u800c\u4e0d\u518d\u6613\u611f\u3002 \u5728SEIR\u6a21\u578b\u4e2d\uff0c\u4e2a\u4f53\u4e4b\u95f4\u7684\u8f6c\u6362\u8fc7\u7a0b\u53ef\u4ee5\u7528\u4e00\u7ec4\u5fae\u5206\u65b9\u7a0b\u6765\u63cf\u8ff0\u3002\u8fd9\u4e9b\u65b9\u7a0b\u8003\u8651\u4e86\u4eba\u7fa4\u4e2d\u4e2a\u4f53\u4e4b\u95f4\u7684\u63a5\u89e6\u3001\u611f\u67d3\u3001\u6f5c\u4f0f\u548c\u5eb7\u590d\u7684\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u5982\u4f20\u67d3\u7387\u3001\u6f5c\u4f0f\u671f\u548c\u5eb7\u590d\u7387\u7b49\u3002\u901a\u8fc7\u89e3\u6790\u8fd9\u4e9b\u65b9\u7a0b\uff0c\u53ef\u4ee5\u6a21\u62df\u548c\u9884\u6d4b\u4f20\u67d3\u75c5\u5728\u4eba\u7fa4\u4e2d\u7684\u4f20\u64ad\u52a8\u6001\uff0c\u5e2e\u52a9\u8bc4\u4f30\u4e0d\u540c\u9632\u63a7\u7b56\u7565\u7684\u6548\u679c\u3002 SEIR\u6a21\u578b\u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u590d\u6742\u7684\u6d41\u884c\u75c5\u5b66\u6a21\u578b\uff0c\u9002\u7528\u4e8e\u63cf\u8ff0\u5177\u6709\u6f5c\u4f0f\u671f\u7684\u4f20\u67d3\u75c5\uff0c\u5982\u6d41\u611f\u3001\u9ebb\u75b9\u7b49\u3002\u5b83\u63d0\u4f9b\u4e86\u66f4\u8be6\u7ec6\u7684\u4f20\u67d3\u75c5\u4f20\u64ad\u8fc7\u7a0b\u7684\u63cf\u8ff0\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u548c\u9884\u6d4b\u75ab\u60c5\u7684\u53d1\u5c55\u8d8b\u52bf\uff0c\u5e76\u4e3a\u5236\u5b9a\u516c\u5171\u536b\u751f\u5e72\u9884\u63aa\u65bd\u63d0\u4f9b\u79d1\u5b66\u4f9d\u636e\u3002 \u8fd9\u4e9b\u6a21\u578b\u5728\u4f20\u67d3\u75c5\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d\u8003\u8651\u4e86\u4e0d\u540c\u7684\u56e0\u7d20\u548c\u5047\u8bbe\uff0c\u53ef\u4ee5\u7528\u4e8e\u5206\u6790\u4f20\u67d3\u75c5\u7684\u4f20\u64ad\u52a8\u6001\u3001\u9884\u6d4b\u75ab\u60c5\u8d8b\u52bf\u4ee5\u53ca\u8bc4\u4f30\u4e0d\u540c\u7684\u9632\u63a7\u7b56\u7565\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u6a21\u578b\u662f\u7b80\u5316\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u80fd\u9700\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u9002\u5f53\u7684\u8c03\u6574\u548c\u6269\u5c55\u3002","title":"\u4f20\u67d3\u75c5\u6a21\u578b"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/Collections-Document-CsStudent/","text":"\u4e00\u4e9b\u597d\u7684\u8d44\u6e90 # \u2b50csdiy wiki \u2b50 \u65b0\u52a0\u5761\u5357\u6d0b\u7406\u5de5\u5927\u5b66\u4e00\u4f4d\u8001\u5e08\u7684\u6559\u6848 \u65e0\u6daf\u6559\u7a0b # \u6280\u672f\u793e\u533a # 0xffff \u2b50StackOverFlow segmentfault \u2b50v2ex \u5728 stackoverflow \u4e0a\u4f60\u53ef\u4ee5\u8fdb\u884c\u63d0\u95ee(\u4f7f\u7528\u82f1\u6587) \u5185\u5bb9\u662f\u5e72\u8d27\u7684\u535a\u5ba2 # \u962e\u4e00\u5cf0\u8001\u5e08\u7684\u535a\u5ba2 \u5e08\u4e0d\u4e88\u7684\u6d4b\u8bd5 Blog \u4e0d\u9519\u7684\u516c\u5f00\u8bfe\u89c6\u9891\u7f51\u7ad9 # Bilibili youtube \u4e2d\u56fd\u5927\u5b66 MOOC \u8001\u5b9e\u8bb2\uff0c\u4f60\u8981\u662f\u80fd\u542c\u61c2\u82f1\u6587\uff0c\u6700\u597d\u5c31\u53bb\u6cb9\u7ba1\u4e0a\u542c\u516c\u5f00\u8bfe\uff0c\u91cc\u9762\u7684\u89c6\u9891\u4f1a\u66f4\u65b0\u800c\u4e14\u66f4\u5b8c\u6574\u3002","title":"\u4e00\u4e9b\u597d\u7684\u8d44\u6e90"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/Collections-Document-CsStudent/#\u4e00\u4e9b\u597d\u7684\u8d44\u6e90","text":"\u2b50csdiy wiki \u2b50 \u65b0\u52a0\u5761\u5357\u6d0b\u7406\u5de5\u5927\u5b66\u4e00\u4f4d\u8001\u5e08\u7684\u6559\u6848","title":"\u4e00\u4e9b\u597d\u7684\u8d44\u6e90"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/Collections-Document-CsStudent/#\u65e0\u6daf\u6559\u7a0b","text":"","title":"\u65e0\u6daf\u6559\u7a0b"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/Collections-Document-CsStudent/#\u6280\u672f\u793e\u533a","text":"0xffff \u2b50StackOverFlow segmentfault \u2b50v2ex \u5728 stackoverflow \u4e0a\u4f60\u53ef\u4ee5\u8fdb\u884c\u63d0\u95ee(\u4f7f\u7528\u82f1\u6587)","title":"\u6280\u672f\u793e\u533a"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/Collections-Document-CsStudent/#\u5185\u5bb9\u662f\u5e72\u8d27\u7684\u535a\u5ba2","text":"\u962e\u4e00\u5cf0\u8001\u5e08\u7684\u535a\u5ba2 \u5e08\u4e0d\u4e88\u7684\u6d4b\u8bd5 Blog","title":"\u5185\u5bb9\u662f\u5e72\u8d27\u7684\u535a\u5ba2"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/Collections-Document-CsStudent/#\u4e0d\u9519\u7684\u516c\u5f00\u8bfe\u89c6\u9891\u7f51\u7ad9","text":"Bilibili youtube \u4e2d\u56fd\u5927\u5b66 MOOC \u8001\u5b9e\u8bb2\uff0c\u4f60\u8981\u662f\u80fd\u542c\u61c2\u82f1\u6587\uff0c\u6700\u597d\u5c31\u53bb\u6cb9\u7ba1\u4e0a\u542c\u516c\u5f00\u8bfe\uff0c\u91cc\u9762\u7684\u89c6\u9891\u4f1a\u66f4\u65b0\u800c\u4e14\u66f4\u5b8c\u6574\u3002","title":"\u4e0d\u9519\u7684\u516c\u5f00\u8bfe\u89c6\u9891\u7f51\u7ad9"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/%E4%BA%86%E8%A7%A3%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/","text":"\u4e86\u89e3\u5f00\u6e90\u534f\u8bae # \u5f00\u6e90 License","title":"\u4e86\u89e3\u5f00\u6e90\u534f\u8bae"},{"location":"%E6%96%87%E6%A1%A3%E6%94%B6%E9%9B%86/%E4%BA%86%E8%A7%A3%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/#\u4e86\u89e3\u5f00\u6e90\u534f\u8bae","text":"\u5f00\u6e90 License","title":"\u4e86\u89e3\u5f00\u6e90\u534f\u8bae"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%2B%2B/","text":"C++ # C++\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u5b83\u662f\u4e00\u79cd\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u652f\u6301\u591a\u91cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u4f8b\u5982\u8fc7\u7a0b\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u548c\u51fd\u6570\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u7b49\u3002 \u6587\u6863\u7f51\u7ad9 # https://www.tutorialkart.com/cpp/cpp-oop/#gsc.tab=0 https://cplusplus.com/doc/tutorial/templates/ https://cplusplus.com/doc/tutorial/ https://en.cppreference.com/w/","title":"C++"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%2B%2B/#c","text":"C++\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u5b83\u662f\u4e00\u79cd\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u652f\u6301\u591a\u91cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u4f8b\u5982\u8fc7\u7a0b\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u548c\u51fd\u6570\u5f0f\u7a0b\u5e8f\u8bbe\u8ba1\u7b49\u3002","title":"C++"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%2B%2B/#\u6587\u6863\u7f51\u7ad9","text":"https://www.tutorialkart.com/cpp/cpp-oop/#gsc.tab=0 https://cplusplus.com/doc/tutorial/templates/ https://cplusplus.com/doc/tutorial/ https://en.cppreference.com/w/","title":"\u6587\u6863\u7f51\u7ad9"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/","text":"C\u8bed\u8a00 # VSCODE C/C++\u73af\u5883\u914d\u7f6e # \u4e3a\u5c71\u897f\u519c\u4e1a\u5927\u5b66 C/C++\u5b66\u4e60\u8005\u51c6\u5907\u7684 VSCODE C \u8bed\u8a00\u73af\u5883\u914d\u7f6e\u6587\u6863 \u5927\u5bb6\u76f4\u63a5\u770b\u4e0a\u9762\u7684\u5c31\u597d\u5566\u3002 C \u8bed\u8a00\u7684\u5b66\u4e60 # MeowRain \u7684\u610f\u89c1\uff1a # \u518d\u8865\u5145\u4e00\u4e9b\u5237\u9898\u7f51\u7ad9 https://www.hackerrank.com/domains/c https://www.codewars.com/ MeowRain \u7684\u610f\u89c1\uff1a\u6211\u89c9\u5f97\u5427\uff0c\u89c6\u9891\u6559\u7a0b\u53ef\u4ee5\u770b\uff0c\u4f46\u522b\u592a\u4f9d\u8d56\uff0c\u4e0d\u80fd\u662f\u79bb\u5f00\u89c6\u9891\u5c31\u4e0d\u4f1a\u4e86\u3002 \u521d\u6b21\u63a5\u89e6 C \u8bed\u8a00\uff0c\u80af\u5b9a\u89c9\u5f97\u5b83\u5f88\u62bd\u8c61\u96be\u61c2\uff0c\u53ef\u4ee5\u62ff\u4e00\u4e2a\u89c6\u9891\u6765\u5165\u95e8\u3002 \u8fd9\u91cc\u63a8\u8350\uff1a \u7fc1\u51ef\u8001\u5e08\u7684 C \u8bed\u8a00\u8bfe\u7a0b\uff1a https://www.bilibili.com/video/BV1XZ4y1S7e1/?spm_id_from=333.999.0.0%E3%80%81&vd_source=f7d0ce024b059d57a0319d78217fa104 \u3010C \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1 \u5df2\u5b8c\u7ed3\uff08CLion 2022 \u6700\u65b0\u7248\uff094K \u84dd\u5149\u753b\u8d28+\u675c\u6bd4\u97f3\u6548 \u68a6\u5f00\u59cb\u7684\u5730\u65b9\u3011 https://www.bilibili.com/video/BV1Cr4y137os/?share_source=copy_web&vd_source=df7a0a80382377ba8a57d874b7fbeae1 \u4ed6\u7684\u89c6\u9891\u914d\u6709\u5bf9\u5e94\u6587\u6863\uff1a https://itbaima.net/#/document 3. \u7136\u540e\u8865\u5145 \u6211\u8fd9\u91cc\u4e3b\u8981\u60f3\u8bf4\u7684\u662f\u770b\u6587\u6863\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7cfb\u7684\u5b66\u751f\uff0c\u54b1\u4eec\u6709\u5fc5\u8981\u517b\u6210\u770b\u6587\u6863\u7684\u597d\u4e60\u60ef\uff0c\u8fd9\u91cc\u653e\u51e0\u4e2a\u4e0d\u9519\u7684\u9002\u5408\u5165\u95e8\u7684\u6587\u6863\u7f51\u7ad9\uff1a \u7f51\u9053 / WangDoc.com \u9752\u7a7a\u971e\u5149\u5927\u4f6c\u7684\u6587\u6863\u7f51\u7ad9 \u62ff\u6765\u5b66\u4e60\u5f88\u4e0d\u9519 \u5237\u9898\u7684\u8bdd\uff0c\u6709\u725b\u5ba2\u7f51\uff0cacwing\uff0c\u6d1b\u8c37\uff0ccodeforces\uff0c\u5927\u5bb6\u521a\u5b66 C \u8bed\u8a00\uff0c\u6211\u5341\u5206\u5efa\u8bae\u4f60\u4eec\u53bb\u8fd9\u4e9b\u7f51\u7ad9\u5237\u4e00\u5237\u8bed\u6cd5\u57fa\u7840\u9898\uff0c\u5bf9\u4f60\u7684\u540e\u7eed\u5b66\u4e60\u662f\u5f88\u6709\u5e2e\u52a9\u7684\uff01 lcekold \u7684\u610f\u89c1\uff1a # C \u8bed\u8a00\u5728\u519c\u5e26\u662f\u6240\u6709\u8ba1\u7b97\u673a\u4e13\u4e1a\u521d\u5b66\u7684\u4e00\u95e8\u8bed\u8a00\uff0c\u4f5c\u4e3a\u6211\u4eec\u5b66\u4e60\u7684\u7b2c\u4e00\u95e8\u8bed\u8a00\uff0c\u6211\u4eec\u5728\u5b66\u4e60 C \u8bed\u8a00\u7684\u540c\u65f6\u4e5f\u4f1a\u53bb\u5b66\u4e60\u5404\u79cd\u8bed\u8a00\u95f4\u901a\u7528\u7684\u8bed\u6cd5\u601d\u7ef4\uff0c\u6240\u4ee5\u8bf4\uff0cC \u8bed\u8a00\u7684\u57fa\u7840\u662f\u6211\u4eec\u4e00\u5b9a\u8981\u6253\u624e\u6253\u7262\u7684\u3002 \u5728\u6b64\u4e4b\u524d\u5148\u63a8\u8350\u4e24\u4e2a\u89c6\u9891\u5e73\u53f0\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u719f\u77e5\u7684 bilibili\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662f\u4e2d\u56fd\u5927\u5b66 MOOC\uff0cMOOC \u4e0a\u6709\u5f88\u591a\u9ad8\u6821\u5206\u4eab\u7684\u7cbe\u54c1\u8bfe\u5185\u5bb9 <font color=red> \u4e00\u3001\u5982\u4f55\u5165\u95e8 C \u8bed\u8a00\uff1f </font> # \u521d\u6b21\u63a5\u89e6 C \u8bed\u8a00\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u770b\u4e00\u4e9b\u89c6\u9891\u8fdb\u884c\u5165\u95e8\uff0c\u5982\u6d59\u5927\u7fc1\u51ef\u8001\u5e08\u7684\u8bfe\u5c31\u5341\u5206\u9002\u5408\u5165\u95e8\uff0c\u6bcf\u8282\u8bfe\u65f6\u957f\u5e76\u4e0d\u957f\uff0c\u5341\u5206\u4eb2\u6c11\u3002 \u5728\u5b66\u4e60\u8bed\u8a00\u7684\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u6700\u5fcc\u8bb3\u7684\u5c31\u662f\u53ea\u770b\u8bfe\u6216\u8005\u53ea\u8bfb\u4e66\u800c\u4e0d\u53bb\u6572\u4ee3\u7801\uff0c\u5728\u8ba1\u7b97\u673a\u4e13\u4e1a\u5f53\u4e2d\uff0c\u4e0d\u53bb\u7ecf\u5e38\u6027\u7684\u6572\u4ee3\u7801\u5b66\u4ec0\u4e48\u90fd\u662f\u767d\u642d\uff0c\u56e0\u6b64\uff0c\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u5f53\u4e2d\u5e94\u8be5\u8fb9\u770b\u8bfe\u8fb9\u6572\u4ee3\u7801\u3002 \u5728 C \u8bed\u8a00\u5b66\u4e60\u5230\u6307\u9488\u7684\u65f6\u5019\uff0c\u4f1a\u611f\u89c9\u96be\u5ea6\u7a81\u7136\u4e0a\u5347\u4e86\u4e00\u4e2a\u53f0\u9636\uff0c\u4f46\u6b64\u65f6\u4e5f\u4e0d\u7528\u5bb3\u6015\uff0c\u62c5\u5fc3\u81ea\u5df1\u662f\u5426\u5929\u5206\u4e0d\u8db3\uff0c\u4e0d\u7528\u4e00\u76f4\u53bb\u7814\u7a76\u90a3\u4e9b\u6666\u6da9\u96be\u61c2\u7684\u6982\u5ff5\uff0c\u800c\u662f\u5e94\u8be5\u53bb\u79ef\u6781\u7684\u6572\u4ee3\u7801\uff0c\u5728\u5b9e\u8df5\u5f53\u4e2d\u638c\u63e1\u771f\u77e5\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u5f88\u591a\u77e5\u8bc6\u4f1a\u6210\u4e3a\u6211\u4eec\u5b66\u4e60\u8def\u4e0a\u7684\u62e6\u8def\u864e\uff0c\u4f46\u5f53\u6211\u4eec\u5b9e\u8df5\u591a\u4e86\u4fbf\u81ea\u7136\u800c\u7136\u7684\u61c2\u4e86 <font color=red> \u4e8c\u3001\u5982\u4f55\u5c06 C \u8bed\u8a00\u7684\u77e5\u8bc6\u6253\u7262\u56fa </font> # \u5728\u6211\u4eec\u5b66\u4e60\u5b8c C \u8bed\u8a00\u7684\u57fa\u7840\u77e5\u8bc6\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u5e94\u8be5\u5bf9\u81ea\u5df1\u6240\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u8fdb\u884c\u5f3a\u5316\uff0c\u90a3\u4e48\u5982\u4f55\u5f3a\u5316\u5462\uff1f \u770b\u300aC primer plus\u300b\u8fd9\u672c\u4e66 \u8fd9\u672c\u4e66\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bb2\u8fd8\u662f\u5f88\u96be\u5543\u7684\uff0c\u6bd5\u7adf\u8db3\u8db3\u6709\u5c06\u8fd1 500 \u9875\uff0c\u4f46\u662f\u8fd9\u672c\u4e66\u786e\u88ab\u516c\u8ba4\u4e3a\u8bb2\u89e3 C \u8bed\u8a00\u6700\u597d\u7684\u4e66\u7c4d\u3002\u300aC primer plus\u300b\u4f5c\u4e3a\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\uff0c\u5176\u4e2d\u7684\u77e5\u8bc6\u4e0d\u4ec5\u4ec5\u662f\u5728\u8bb2 C \u8bed\u8a00\uff0c\u66f4\u591a\u7684\u662f\u5c55\u73b0\u51fa\u4e00\u79cd\u7f16\u7a0b\u7684\u601d\u7ef4\uff0c\u540c\u65f6\u5bf9 C \u8bed\u8a00\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u62d3\u5c55\u8865\u5145\uff0c\u5f88\u9002\u5408\u6211\u4eec\u53bb\u6df1\u5316 C \u8bed\u8a00\u7684\u77e5\u8bc6\u70b9\u3002 <font color=green> \u6ce8:\u8fd9\u672c\u4e66\u6700\u597d\u5728\u6709 C \u8bed\u8a00\u57fa\u7840\uff0c\u5e76\u4e14\u6709\u7a7a\u4f59\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u5b66\u4e60 </font> 2. \u591a\u53bb\u505a\u4e00\u4e9b\u9898 MeowRain \u5927\u4f6c\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u5237\u9898\u7f51\u7ad9\u4e86\uff0c\u6b64\u5904\u5728\u4ecb\u7ecd\u4e00\u4e2a C \u8bed\u8a00\u7f51/https://www.dotcpp.com/ \u8be5\u7f51\u7ad9\u7684\u5f88\u591a\u9898\u662f\u6bd4\u8f83\u57fa\u7840\u7684\uff0c\u9002\u5408\u521d\u5b66\u8005\u4e0a\u624b(\u4f46\u662f\u8be5\u7f51\u7ad9\u7684\u4ee3\u7801\u63d0\u4ea4\u76f8\u5f53\u7684\u4e0d\u4eba\u6027\u5316,\u4f46\u5f88\u591a\u9898\u662f\u6bd4\u8f83\u597d\u4e14\u5168\u9762\u7684) \u5237\u9898\uff0c\u4e0d\u4ec5\u4ec5\u662f\u8981\u628a\u9898\u505a\u51fa\u6765\uff0c\u4e5f\u8981\u591a\u53bb\u770b\u4e00\u4e9b\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u53ef\u4ee5\u62d3\u5c55\u6211\u4eec\u7684\u601d\u7ef4\uff0c\u9898\u76ee\u505a\u51fa\u6765\u786e\u5b9e\u503c\u5f97\u6211\u4eec\u9ad8\u5174\uff0c\u4f46\u6211\u4eec\u66f4\u5e94\u8be5\u53bb\u8ffd\u6c42\u7a7a\u95f4\u66f4\u5c0f\u3001\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u505a\u6cd5\uff0c\u4ee5\u6b64\u953b\u70bc\u6211\u4eec\u7684\u6253\u7801\u80fd\u529b\uff0c\u66f4\u52a0\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u6837\u4e5f\u4f1a\u57f9\u517b\u6211\u4eec\u7684\u7b97\u6cd5\u601d\u7ef4 \u5e0c\u671b\u5b66\u5f1f\u5b66\u59b9\u4eec\u5b66\u4e60\u9ad8\u5174\u5feb\u4e50\uff0c\u4e0d\u8981\u6709\u70e6\u607c \ud83d\ude03 Chillybreeze \u7684\u610f\u89c1\uff1a # 1.\u5982\u679c\u7b2c\u4e00\u6b21\u63a5\u89e6\u7f16\u7a0b\u7684\u8bdd\uff0cC \u8bed\u8a00\u5f88\u9002\u5408\u5165\u95e8\uff0c\uff08\u9488\u5bf9\u54b1\u4eec\u5b66\u6821\u8f6f\u4ef6\u5de5\u7a0b\u7684\u540c\u5b66\u4eec\uff09\u5bf9\u4f60\u4e4b\u540e\u5728\u5927\u4e00\u4e0b\u63a5\u89e6\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff08Java\uff09\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4e2a\u4eba\u8ba4\u4e3a\u7fc1\u607a\u8001\u5e08\u7684 c \u8bed\u8a00\u8bfe\u7a0b\u5341\u5206\u7ec6\u81f4\u3002 2.\u5982\u679c\u6709\u4e00\u5b9a\u7684\u57fa\u7840\u7684\u8bdd\uff0c\u53ef\u4ee5\u4ece acwing \u5f00\u59cb\u5237\u9898\uff08y \u603b\u662f\u62ff C++\u7684\u8bed\u6cd5\u57fa\u7840\u6765\u6559\u5b66\u7b97\u6cd5\uff0c\uff09\u5b66\u4e60\u7b97\u6cd5\u6709\u52a9\u4e8e\u5bf9\u4f60\u5927\u4e8c\u6570\u636e\u7ed3\u6784\u7684\u5b66\u4e60,\u4f1a\u63d0\u9ad8\u4f60\u7684\u601d\u7ef4\u4ee5\u53ca\u5b66\u4e60\u80fd\u529b\u3002\u5f53\u4f60\u7684\u7b97\u6cd5\u5b66\u7684\u4e0d\u9519\u7684\u65f6\u5019\uff0c\u54b1\u4eec\u5b66\u6821\u4f1a\u6709\u84dd\u6865\u676f\u7684\u6bd4\u8d5b\u53ef\u4ee5\u53c2\u52a0\uff0c\u4e2a\u4eba\u8d5b\u8f6f\u4ef6\u7c7b\u4f60\u53ef\u4ee5\u9009\u62e9\u7ec4\u522b\uff08c \u8bed\u8a00\u7ec4\uff0cJava \u7ec4\uff0cpython \u7ec4\u7b49\u7b49\uff09\uff0c\u62a5\u540d\u8d39\u7528\u662f 300 \u7c73\uff0c\u5927\u5bb6\u611f\u5174\u8da3\u53ef\u4ee5\u53bb\u5b98\u7f51\u67e5\u770b\u3002 \u84dd\u6865\u676f\u5b98\u7f51\uff1a https://dasai.lanqiao.cn/ 3.\u6700\u540e\u5462\uff0c\u7ed9\u5b66\u59b9\u5b66\u59b9\u4eec\u7684\u5c0f\u5efa\u8bae\uff0c\u5982\u679c\u771f\u5fc3\u60f3\u5b66\u597d\u7f16\u7a0b\uff0c\u4ece\u5165\u5b66\u5f00\u59cb\u5b66\u4e60\u57fa\u7840\u5c31\u8981\u6253\u597d\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u81ea\u5b66\u7684\u80fd\u529b\uff0c\u6709\u4e00\u4e9b\u5b66\u4e60\u4e0a\u7684\u95ee\u9898\u5462\uff0c\u4e5f\u53ef\u4ee5\u52a0\u7fa4\u4e0e\u6211\u4eec\u4ea4\u6d41\uff01","title":"C\u8bed\u8a00"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#c\u8bed\u8a00","text":"","title":"C\u8bed\u8a00"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#vscode-cc\u73af\u5883\u914d\u7f6e","text":"\u4e3a\u5c71\u897f\u519c\u4e1a\u5927\u5b66 C/C++\u5b66\u4e60\u8005\u51c6\u5907\u7684 VSCODE C \u8bed\u8a00\u73af\u5883\u914d\u7f6e\u6587\u6863 \u5927\u5bb6\u76f4\u63a5\u770b\u4e0a\u9762\u7684\u5c31\u597d\u5566\u3002","title":"VSCODE C/C++\u73af\u5883\u914d\u7f6e"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#c-\u8bed\u8a00\u7684\u5b66\u4e60","text":"","title":"C \u8bed\u8a00\u7684\u5b66\u4e60"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#meowrain-\u7684\u610f\u89c1","text":"\u518d\u8865\u5145\u4e00\u4e9b\u5237\u9898\u7f51\u7ad9 https://www.hackerrank.com/domains/c https://www.codewars.com/ MeowRain \u7684\u610f\u89c1\uff1a\u6211\u89c9\u5f97\u5427\uff0c\u89c6\u9891\u6559\u7a0b\u53ef\u4ee5\u770b\uff0c\u4f46\u522b\u592a\u4f9d\u8d56\uff0c\u4e0d\u80fd\u662f\u79bb\u5f00\u89c6\u9891\u5c31\u4e0d\u4f1a\u4e86\u3002 \u521d\u6b21\u63a5\u89e6 C \u8bed\u8a00\uff0c\u80af\u5b9a\u89c9\u5f97\u5b83\u5f88\u62bd\u8c61\u96be\u61c2\uff0c\u53ef\u4ee5\u62ff\u4e00\u4e2a\u89c6\u9891\u6765\u5165\u95e8\u3002 \u8fd9\u91cc\u63a8\u8350\uff1a \u7fc1\u51ef\u8001\u5e08\u7684 C \u8bed\u8a00\u8bfe\u7a0b\uff1a https://www.bilibili.com/video/BV1XZ4y1S7e1/?spm_id_from=333.999.0.0%E3%80%81&vd_source=f7d0ce024b059d57a0319d78217fa104 \u3010C \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1 \u5df2\u5b8c\u7ed3\uff08CLion 2022 \u6700\u65b0\u7248\uff094K \u84dd\u5149\u753b\u8d28+\u675c\u6bd4\u97f3\u6548 \u68a6\u5f00\u59cb\u7684\u5730\u65b9\u3011 https://www.bilibili.com/video/BV1Cr4y137os/?share_source=copy_web&vd_source=df7a0a80382377ba8a57d874b7fbeae1 \u4ed6\u7684\u89c6\u9891\u914d\u6709\u5bf9\u5e94\u6587\u6863\uff1a https://itbaima.net/#/document 3. \u7136\u540e\u8865\u5145 \u6211\u8fd9\u91cc\u4e3b\u8981\u60f3\u8bf4\u7684\u662f\u770b\u6587\u6863\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7cfb\u7684\u5b66\u751f\uff0c\u54b1\u4eec\u6709\u5fc5\u8981\u517b\u6210\u770b\u6587\u6863\u7684\u597d\u4e60\u60ef\uff0c\u8fd9\u91cc\u653e\u51e0\u4e2a\u4e0d\u9519\u7684\u9002\u5408\u5165\u95e8\u7684\u6587\u6863\u7f51\u7ad9\uff1a \u7f51\u9053 / WangDoc.com \u9752\u7a7a\u971e\u5149\u5927\u4f6c\u7684\u6587\u6863\u7f51\u7ad9 \u62ff\u6765\u5b66\u4e60\u5f88\u4e0d\u9519 \u5237\u9898\u7684\u8bdd\uff0c\u6709\u725b\u5ba2\u7f51\uff0cacwing\uff0c\u6d1b\u8c37\uff0ccodeforces\uff0c\u5927\u5bb6\u521a\u5b66 C \u8bed\u8a00\uff0c\u6211\u5341\u5206\u5efa\u8bae\u4f60\u4eec\u53bb\u8fd9\u4e9b\u7f51\u7ad9\u5237\u4e00\u5237\u8bed\u6cd5\u57fa\u7840\u9898\uff0c\u5bf9\u4f60\u7684\u540e\u7eed\u5b66\u4e60\u662f\u5f88\u6709\u5e2e\u52a9\u7684\uff01","title":"MeowRain \u7684\u610f\u89c1\uff1a"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#lcekold-\u7684\u610f\u89c1","text":"C \u8bed\u8a00\u5728\u519c\u5e26\u662f\u6240\u6709\u8ba1\u7b97\u673a\u4e13\u4e1a\u521d\u5b66\u7684\u4e00\u95e8\u8bed\u8a00\uff0c\u4f5c\u4e3a\u6211\u4eec\u5b66\u4e60\u7684\u7b2c\u4e00\u95e8\u8bed\u8a00\uff0c\u6211\u4eec\u5728\u5b66\u4e60 C \u8bed\u8a00\u7684\u540c\u65f6\u4e5f\u4f1a\u53bb\u5b66\u4e60\u5404\u79cd\u8bed\u8a00\u95f4\u901a\u7528\u7684\u8bed\u6cd5\u601d\u7ef4\uff0c\u6240\u4ee5\u8bf4\uff0cC \u8bed\u8a00\u7684\u57fa\u7840\u662f\u6211\u4eec\u4e00\u5b9a\u8981\u6253\u624e\u6253\u7262\u7684\u3002 \u5728\u6b64\u4e4b\u524d\u5148\u63a8\u8350\u4e24\u4e2a\u89c6\u9891\u5e73\u53f0\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u719f\u77e5\u7684 bilibili\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u662f\u4e2d\u56fd\u5927\u5b66 MOOC\uff0cMOOC \u4e0a\u6709\u5f88\u591a\u9ad8\u6821\u5206\u4eab\u7684\u7cbe\u54c1\u8bfe\u5185\u5bb9","title":"lcekold \u7684\u610f\u89c1\uff1a"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#\u4e00\u5982\u4f55\u5165\u95e8-c-\u8bed\u8a00","text":"\u521d\u6b21\u63a5\u89e6 C \u8bed\u8a00\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u770b\u4e00\u4e9b\u89c6\u9891\u8fdb\u884c\u5165\u95e8\uff0c\u5982\u6d59\u5927\u7fc1\u51ef\u8001\u5e08\u7684\u8bfe\u5c31\u5341\u5206\u9002\u5408\u5165\u95e8\uff0c\u6bcf\u8282\u8bfe\u65f6\u957f\u5e76\u4e0d\u957f\uff0c\u5341\u5206\u4eb2\u6c11\u3002 \u5728\u5b66\u4e60\u8bed\u8a00\u7684\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u6700\u5fcc\u8bb3\u7684\u5c31\u662f\u53ea\u770b\u8bfe\u6216\u8005\u53ea\u8bfb\u4e66\u800c\u4e0d\u53bb\u6572\u4ee3\u7801\uff0c\u5728\u8ba1\u7b97\u673a\u4e13\u4e1a\u5f53\u4e2d\uff0c\u4e0d\u53bb\u7ecf\u5e38\u6027\u7684\u6572\u4ee3\u7801\u5b66\u4ec0\u4e48\u90fd\u662f\u767d\u642d\uff0c\u56e0\u6b64\uff0c\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u5f53\u4e2d\u5e94\u8be5\u8fb9\u770b\u8bfe\u8fb9\u6572\u4ee3\u7801\u3002 \u5728 C \u8bed\u8a00\u5b66\u4e60\u5230\u6307\u9488\u7684\u65f6\u5019\uff0c\u4f1a\u611f\u89c9\u96be\u5ea6\u7a81\u7136\u4e0a\u5347\u4e86\u4e00\u4e2a\u53f0\u9636\uff0c\u4f46\u6b64\u65f6\u4e5f\u4e0d\u7528\u5bb3\u6015\uff0c\u62c5\u5fc3\u81ea\u5df1\u662f\u5426\u5929\u5206\u4e0d\u8db3\uff0c\u4e0d\u7528\u4e00\u76f4\u53bb\u7814\u7a76\u90a3\u4e9b\u6666\u6da9\u96be\u61c2\u7684\u6982\u5ff5\uff0c\u800c\u662f\u5e94\u8be5\u53bb\u79ef\u6781\u7684\u6572\u4ee3\u7801\uff0c\u5728\u5b9e\u8df5\u5f53\u4e2d\u638c\u63e1\u771f\u77e5\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u5f88\u591a\u77e5\u8bc6\u4f1a\u6210\u4e3a\u6211\u4eec\u5b66\u4e60\u8def\u4e0a\u7684\u62e6\u8def\u864e\uff0c\u4f46\u5f53\u6211\u4eec\u5b9e\u8df5\u591a\u4e86\u4fbf\u81ea\u7136\u800c\u7136\u7684\u61c2\u4e86","title":"&lt;font color=red&gt;\u4e00\u3001\u5982\u4f55\u5165\u95e8 C \u8bed\u8a00\uff1f&lt;/font&gt;"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#\u4e8c\u5982\u4f55\u5c06-c-\u8bed\u8a00\u7684\u77e5\u8bc6\u6253\u7262\u56fa","text":"\u5728\u6211\u4eec\u5b66\u4e60\u5b8c C \u8bed\u8a00\u7684\u57fa\u7840\u77e5\u8bc6\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u5e94\u8be5\u5bf9\u81ea\u5df1\u6240\u5b66\u4e60\u5230\u7684\u77e5\u8bc6\u8fdb\u884c\u5f3a\u5316\uff0c\u90a3\u4e48\u5982\u4f55\u5f3a\u5316\u5462\uff1f \u770b\u300aC primer plus\u300b\u8fd9\u672c\u4e66 \u8fd9\u672c\u4e66\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bb2\u8fd8\u662f\u5f88\u96be\u5543\u7684\uff0c\u6bd5\u7adf\u8db3\u8db3\u6709\u5c06\u8fd1 500 \u9875\uff0c\u4f46\u662f\u8fd9\u672c\u4e66\u786e\u88ab\u516c\u8ba4\u4e3a\u8bb2\u89e3 C \u8bed\u8a00\u6700\u597d\u7684\u4e66\u7c4d\u3002\u300aC primer plus\u300b\u4f5c\u4e3a\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\uff0c\u5176\u4e2d\u7684\u77e5\u8bc6\u4e0d\u4ec5\u4ec5\u662f\u5728\u8bb2 C \u8bed\u8a00\uff0c\u66f4\u591a\u7684\u662f\u5c55\u73b0\u51fa\u4e00\u79cd\u7f16\u7a0b\u7684\u601d\u7ef4\uff0c\u540c\u65f6\u5bf9 C \u8bed\u8a00\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u62d3\u5c55\u8865\u5145\uff0c\u5f88\u9002\u5408\u6211\u4eec\u53bb\u6df1\u5316 C \u8bed\u8a00\u7684\u77e5\u8bc6\u70b9\u3002 <font color=green> \u6ce8:\u8fd9\u672c\u4e66\u6700\u597d\u5728\u6709 C \u8bed\u8a00\u57fa\u7840\uff0c\u5e76\u4e14\u6709\u7a7a\u4f59\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u5b66\u4e60 </font> 2. \u591a\u53bb\u505a\u4e00\u4e9b\u9898 MeowRain \u5927\u4f6c\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u5237\u9898\u7f51\u7ad9\u4e86\uff0c\u6b64\u5904\u5728\u4ecb\u7ecd\u4e00\u4e2a C \u8bed\u8a00\u7f51/https://www.dotcpp.com/ \u8be5\u7f51\u7ad9\u7684\u5f88\u591a\u9898\u662f\u6bd4\u8f83\u57fa\u7840\u7684\uff0c\u9002\u5408\u521d\u5b66\u8005\u4e0a\u624b(\u4f46\u662f\u8be5\u7f51\u7ad9\u7684\u4ee3\u7801\u63d0\u4ea4\u76f8\u5f53\u7684\u4e0d\u4eba\u6027\u5316,\u4f46\u5f88\u591a\u9898\u662f\u6bd4\u8f83\u597d\u4e14\u5168\u9762\u7684) \u5237\u9898\uff0c\u4e0d\u4ec5\u4ec5\u662f\u8981\u628a\u9898\u505a\u51fa\u6765\uff0c\u4e5f\u8981\u591a\u53bb\u770b\u4e00\u4e9b\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u53ef\u4ee5\u62d3\u5c55\u6211\u4eec\u7684\u601d\u7ef4\uff0c\u9898\u76ee\u505a\u51fa\u6765\u786e\u5b9e\u503c\u5f97\u6211\u4eec\u9ad8\u5174\uff0c\u4f46\u6211\u4eec\u66f4\u5e94\u8be5\u53bb\u8ffd\u6c42\u7a7a\u95f4\u66f4\u5c0f\u3001\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u505a\u6cd5\uff0c\u4ee5\u6b64\u953b\u70bc\u6211\u4eec\u7684\u6253\u7801\u80fd\u529b\uff0c\u66f4\u52a0\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u6837\u4e5f\u4f1a\u57f9\u517b\u6211\u4eec\u7684\u7b97\u6cd5\u601d\u7ef4 \u5e0c\u671b\u5b66\u5f1f\u5b66\u59b9\u4eec\u5b66\u4e60\u9ad8\u5174\u5feb\u4e50\uff0c\u4e0d\u8981\u6709\u70e6\u607c \ud83d\ude03","title":"&lt;font color=red&gt;\u4e8c\u3001\u5982\u4f55\u5c06 C \u8bed\u8a00\u7684\u77e5\u8bc6\u6253\u7262\u56fa&lt;/font&gt;"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/#chillybreeze-\u7684\u610f\u89c1","text":"1.\u5982\u679c\u7b2c\u4e00\u6b21\u63a5\u89e6\u7f16\u7a0b\u7684\u8bdd\uff0cC \u8bed\u8a00\u5f88\u9002\u5408\u5165\u95e8\uff0c\uff08\u9488\u5bf9\u54b1\u4eec\u5b66\u6821\u8f6f\u4ef6\u5de5\u7a0b\u7684\u540c\u5b66\u4eec\uff09\u5bf9\u4f60\u4e4b\u540e\u5728\u5927\u4e00\u4e0b\u63a5\u89e6\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff08Java\uff09\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4e2a\u4eba\u8ba4\u4e3a\u7fc1\u607a\u8001\u5e08\u7684 c \u8bed\u8a00\u8bfe\u7a0b\u5341\u5206\u7ec6\u81f4\u3002 2.\u5982\u679c\u6709\u4e00\u5b9a\u7684\u57fa\u7840\u7684\u8bdd\uff0c\u53ef\u4ee5\u4ece acwing \u5f00\u59cb\u5237\u9898\uff08y \u603b\u662f\u62ff C++\u7684\u8bed\u6cd5\u57fa\u7840\u6765\u6559\u5b66\u7b97\u6cd5\uff0c\uff09\u5b66\u4e60\u7b97\u6cd5\u6709\u52a9\u4e8e\u5bf9\u4f60\u5927\u4e8c\u6570\u636e\u7ed3\u6784\u7684\u5b66\u4e60,\u4f1a\u63d0\u9ad8\u4f60\u7684\u601d\u7ef4\u4ee5\u53ca\u5b66\u4e60\u80fd\u529b\u3002\u5f53\u4f60\u7684\u7b97\u6cd5\u5b66\u7684\u4e0d\u9519\u7684\u65f6\u5019\uff0c\u54b1\u4eec\u5b66\u6821\u4f1a\u6709\u84dd\u6865\u676f\u7684\u6bd4\u8d5b\u53ef\u4ee5\u53c2\u52a0\uff0c\u4e2a\u4eba\u8d5b\u8f6f\u4ef6\u7c7b\u4f60\u53ef\u4ee5\u9009\u62e9\u7ec4\u522b\uff08c \u8bed\u8a00\u7ec4\uff0cJava \u7ec4\uff0cpython \u7ec4\u7b49\u7b49\uff09\uff0c\u62a5\u540d\u8d39\u7528\u662f 300 \u7c73\uff0c\u5927\u5bb6\u611f\u5174\u8da3\u53ef\u4ee5\u53bb\u5b98\u7f51\u67e5\u770b\u3002 \u84dd\u6865\u676f\u5b98\u7f51\uff1a https://dasai.lanqiao.cn/ 3.\u6700\u540e\u5462\uff0c\u7ed9\u5b66\u59b9\u5b66\u59b9\u4eec\u7684\u5c0f\u5efa\u8bae\uff0c\u5982\u679c\u771f\u5fc3\u60f3\u5b66\u597d\u7f16\u7a0b\uff0c\u4ece\u5165\u5b66\u5f00\u59cb\u5b66\u4e60\u57fa\u7840\u5c31\u8981\u6253\u597d\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u81ea\u5b66\u7684\u80fd\u529b\uff0c\u6709\u4e00\u4e9b\u5b66\u4e60\u4e0a\u7684\u95ee\u9898\u5462\uff0c\u4e5f\u53ef\u4ee5\u52a0\u7fa4\u4e0e\u6211\u4eec\u4ea4\u6d41\uff01","title":"Chillybreeze \u7684\u610f\u89c1\uff1a"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Dart/","text":"Dart # Dart \u662f\u7531 Google \u5f00\u53d1\u7684\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u65e8\u5728\u7528\u4e8e Web\u3001\u79fb\u52a8\u5e94\u7528\u548c\u670d\u52a1\u5668\u7aef\u5f00\u53d1\u3002Dart \u4e8e2011\u5e74\u9996\u6b21\u53d1\u5e03\uff0c\u5176\u6700\u521d\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u79cd\u66f4\u597d\u7684 JavaScript\uff0c\u4f46\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cDart \u9010\u6e10\u6210\u4e3a\u4e00\u79cd\u901a\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5f00\u53d1\u5404\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"Dart"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Dart/#dart","text":"Dart \u662f\u7531 Google \u5f00\u53d1\u7684\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u65e8\u5728\u7528\u4e8e Web\u3001\u79fb\u52a8\u5e94\u7528\u548c\u670d\u52a1\u5668\u7aef\u5f00\u53d1\u3002Dart \u4e8e2011\u5e74\u9996\u6b21\u53d1\u5e03\uff0c\u5176\u6700\u521d\u7684\u76ee\u6807\u662f\u6210\u4e3a\u4e00\u79cd\u66f4\u597d\u7684 JavaScript\uff0c\u4f46\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cDart \u9010\u6e10\u6210\u4e3a\u4e00\u79cd\u901a\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7528\u4e8e\u5f00\u53d1\u5404\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"Dart"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/","text":"Java # \u524d\u8a00 # \u770b\u5230\u8fd9\u91cc\u7684\u540c\u5b66\u4eec\uff0c\u76f8\u4fe1\u4f60\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86 C \u8bed\u8a00\u7684\u5b66\u4e60\uff01\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5f00\u59cb JAVA \u7684\u5b66\u4e60\u5427\uff01 Java \u4f18\u79c0\u6587\u6863 # \u2b50Java \u5168\u6808\u77e5\u8bc6\u4f53\u7cfb how2j \u2b50JAVA \u6587\u6863 java-tutorial Java \u4f18\u79c0\u89c6\u9891\u6559\u7a0b # \u63a8\u8350\u97e9\u987a\u5e73\uff0c\u9752\u7a7a\u306e\u971e\u5149\uff0cMosh \u7684\u89c6\u9891\u8bfe\u7a0b","title":"Java"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/#java","text":"","title":"Java"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/#\u524d\u8a00","text":"\u770b\u5230\u8fd9\u91cc\u7684\u540c\u5b66\u4eec\uff0c\u76f8\u4fe1\u4f60\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86 C \u8bed\u8a00\u7684\u5b66\u4e60\uff01\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5f00\u59cb JAVA \u7684\u5b66\u4e60\u5427\uff01","title":"\u524d\u8a00"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/#java-\u4f18\u79c0\u6587\u6863","text":"\u2b50Java \u5168\u6808\u77e5\u8bc6\u4f53\u7cfb how2j \u2b50JAVA \u6587\u6863 java-tutorial","title":"Java \u4f18\u79c0\u6587\u6863"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/#java-\u4f18\u79c0\u89c6\u9891\u6559\u7a0b","text":"\u63a8\u8350\u97e9\u987a\u5e73\uff0c\u9752\u7a7a\u306e\u971e\u5149\uff0cMosh \u7684\u89c6\u9891\u8bfe\u7a0b","title":"Java \u4f18\u79c0\u89c6\u9891\u6559\u7a0b"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Javascript/","text":"Javascript # JavaScript\uff08\u901a\u5e38\u7f29\u5199\u4e3aJS\uff09\u662f\u4e00\u95e8\u57fa\u4e8e\u539f\u578b\u548c\u5934\u7b49\u51fd\u6570\u7684\u591a\u8303\u5f0f\u9ad8\u7ea7\u89e3\u91ca\u578b\u7f16\u7a0b\u8bed\u8a00[9][10]\uff0c\u5b83\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u6307\u4ee4\u5f0f\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002\u5b83\u63d0\u4f9b\u65b9\u6cd5\u6765\u64cd\u63a7\u6587\u672c\u3001\u6570\u7ec4\u3001\u65e5\u671f\u4ee5\u53ca\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u3002\u4e0d\u652f\u6301I/O\uff0c\u6bd4\u5982\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u56fe\u5f62\u7b49\uff0c\u4f46\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7531\u5b83\u7684\u5bbf\u4e3b\u73af\u5883\u63d0\u4f9b\u652f\u6301\u3002\u5b83\u7531ECMA\uff08\u6b27\u6d32\u7535\u8111\u5236\u9020\u5546\u534f\u4f1a\uff09\u901a\u8fc7ECMAScript\u5b9e\u73b0\u8bed\u8a00\u7684\u6807\u51c6\u5316[9]\u3002\u76ee\u524d\uff0c\u5b83\u88ab\u4e16\u754c\u4e0a\u7684\u7edd\u5927\u591a\u6570\u7f51\u7ad9\u6240\u4f7f\u7528\uff0c\u4e5f\u88ab\u4e16\u754c\u4e3b\u6d41\u6d4f\u89c8\u5668\uff08Chrome\u3001IE\u3001Firefox\u3001Safari\u548cOpera\uff09\u6240\u652f\u6301\u3002","title":"Javascript"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Javascript/#javascript","text":"JavaScript\uff08\u901a\u5e38\u7f29\u5199\u4e3aJS\uff09\u662f\u4e00\u95e8\u57fa\u4e8e\u539f\u578b\u548c\u5934\u7b49\u51fd\u6570\u7684\u591a\u8303\u5f0f\u9ad8\u7ea7\u89e3\u91ca\u578b\u7f16\u7a0b\u8bed\u8a00[9][10]\uff0c\u5b83\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u6307\u4ee4\u5f0f\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002\u5b83\u63d0\u4f9b\u65b9\u6cd5\u6765\u64cd\u63a7\u6587\u672c\u3001\u6570\u7ec4\u3001\u65e5\u671f\u4ee5\u53ca\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u3002\u4e0d\u652f\u6301I/O\uff0c\u6bd4\u5982\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u56fe\u5f62\u7b49\uff0c\u4f46\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7531\u5b83\u7684\u5bbf\u4e3b\u73af\u5883\u63d0\u4f9b\u652f\u6301\u3002\u5b83\u7531ECMA\uff08\u6b27\u6d32\u7535\u8111\u5236\u9020\u5546\u534f\u4f1a\uff09\u901a\u8fc7ECMAScript\u5b9e\u73b0\u8bed\u8a00\u7684\u6807\u51c6\u5316[9]\u3002\u76ee\u524d\uff0c\u5b83\u88ab\u4e16\u754c\u4e0a\u7684\u7edd\u5927\u591a\u6570\u7f51\u7ad9\u6240\u4f7f\u7528\uff0c\u4e5f\u88ab\u4e16\u754c\u4e3b\u6d41\u6d4f\u89c8\u5668\uff08Chrome\u3001IE\u3001Firefox\u3001Safari\u548cOpera\uff09\u6240\u652f\u6301\u3002","title":"Javascript"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Lua/","text":"Lua # Lua \u4ecb\u7ecd # Lua \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u811a\u672c\u8bed\u8a00\uff0c\u88ab\u5e7f\u6cdb\u7528\u4e8e\u6e38\u620f\u5f00\u53d1\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u7f51\u7edc\u7f16\u7a0b\u7b49\u9886\u57df\u3002\u5b83\u5177\u6709\u7b80\u5355\u6613\u5b66\u3001\u9ad8\u6548\u53ef\u9760\u3001\u53ef\u6269\u5c55\u6027\u5f3a\u7b49\u7279\u70b9\u3002Lua \u7684\u8bed\u6cd5\u7b80\u6d01\u660e\u4e86\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u534f\u7a0b\u548c\u5143\u8868\u7b49\u9ad8\u7ea7\u7279\u6027\u3002Lua \u8fd8\u5177\u6709\u826f\u597d\u7684\u8de8\u5e73\u53f0\u6027\uff0c\u53ef\u4ee5\u5728\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u548c\u786c\u4ef6\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002 Lua \u8bed\u6cd5\u6559\u7a0b # \u8fd9\u91cc\u63a8\u8350 luatos \u7684 lua \u6559\u7a0b \u2b50Lua \u6559\u7a0b \u2b50Lua \u5b98\u65b9\u6587\u6863","title":"Lua"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Lua/#lua","text":"","title":"Lua"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Lua/#lua-\u4ecb\u7ecd","text":"Lua \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u811a\u672c\u8bed\u8a00\uff0c\u88ab\u5e7f\u6cdb\u7528\u4e8e\u6e38\u620f\u5f00\u53d1\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u7f51\u7edc\u7f16\u7a0b\u7b49\u9886\u57df\u3002\u5b83\u5177\u6709\u7b80\u5355\u6613\u5b66\u3001\u9ad8\u6548\u53ef\u9760\u3001\u53ef\u6269\u5c55\u6027\u5f3a\u7b49\u7279\u70b9\u3002Lua \u7684\u8bed\u6cd5\u7b80\u6d01\u660e\u4e86\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u534f\u7a0b\u548c\u5143\u8868\u7b49\u9ad8\u7ea7\u7279\u6027\u3002Lua \u8fd8\u5177\u6709\u826f\u597d\u7684\u8de8\u5e73\u53f0\u6027\uff0c\u53ef\u4ee5\u5728\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u548c\u786c\u4ef6\u5e73\u53f0\u4e0a\u8fd0\u884c\u3002","title":"Lua \u4ecb\u7ecd"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Lua/#lua-\u8bed\u6cd5\u6559\u7a0b","text":"\u8fd9\u91cc\u63a8\u8350 luatos \u7684 lua \u6559\u7a0b \u2b50Lua \u6559\u7a0b \u2b50Lua \u5b98\u65b9\u6587\u6863","title":"Lua \u8bed\u6cd5\u6559\u7a0b"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/","text":"Python # Python\u5b66\u4e60\u5efa\u8bae # \u5341\u5206\u63a8\u8350\u5927\u5bb6clone\u8fd9\u4e2a\u9879\u76ee\u53bb\u5b66\u4e60python Python-100-Days \u5728\u6211\u770b\u6765\uff0c\u53bbb\u7ad9\u627epython\u8bfe\u5b66\u5b9e\u5728\u662f\u6ca1\u5fc5\u8981\uff0c\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u76f4\u63a5\u7528\u4e0a\u9762\u7684\u9879\u76ee\uff0c\u914d\u4e0a\u5b98\u65b9\u6587\u6863\u5c31\u53ef\u4ee5\u4e86 Python\u5b98\u65b9\u6587\u6863","title":"Python"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/#python","text":"","title":"Python"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/#python\u5b66\u4e60\u5efa\u8bae","text":"\u5341\u5206\u63a8\u8350\u5927\u5bb6clone\u8fd9\u4e2a\u9879\u76ee\u53bb\u5b66\u4e60python Python-100-Days \u5728\u6211\u770b\u6765\uff0c\u53bbb\u7ad9\u627epython\u8bfe\u5b66\u5b9e\u5728\u662f\u6ca1\u5fc5\u8981\uff0c\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u76f4\u63a5\u7528\u4e0a\u9762\u7684\u9879\u76ee\uff0c\u914d\u4e0a\u5b98\u65b9\u6587\u6863\u5c31\u53ef\u4ee5\u4e86 Python\u5b98\u65b9\u6587\u6863","title":"Python\u5b66\u4e60\u5efa\u8bae"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/","text":"\u5b89\u88c5python # \u53bbpython\u5b98\u7f51\u4e0b\u8f7d\u6700\u65b0\u7248\u5c31\u53ef\u4ee5\u4e86\uff01 \u5b89\u88c5pipx # https://pipx.pypa.io/stable/ \u53c2\u8003\u4e0a\u9762\u8fd9\u4e2a\u5b98\u65b9\u6587\u6863\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86 $ sudo pacman -S python-pipx \u5b89\u88c5poetry # \u68c0\u67e5pipx\u662f\u5426\u5b89\u88c5\uff0c\u5982\u679c\u5b89\u88c5\u6210\u529f $ pipx install poetry \u8fdb\u5165\u5230\u5f53\u524d\u9879\u76ee\uff0c\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\uff0c\u521b\u5efa\u865a\u62df\u73af\u5883 # $ poetry install --no-root \u56e0\u4e3a\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u955c\u50cf\uff0c\u6240\u4ee5\u4e0b\u8f7d\u4f1a\u5f88\u5feb \u8fdb\u5165\u5f53\u524d\u865a\u62df\u73af\u5883\u7684shell # $ poetry self add poetry-plugin-shell $ poetry shell \u542f\u52a8\u5f53\u524d\u9879\u76ee # $ mkdocs serve","title":"\u5b89\u88c5python"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/#\u5b89\u88c5python","text":"\u53bbpython\u5b98\u7f51\u4e0b\u8f7d\u6700\u65b0\u7248\u5c31\u53ef\u4ee5\u4e86\uff01","title":"\u5b89\u88c5python"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/#\u5b89\u88c5pipx","text":"https://pipx.pypa.io/stable/ \u53c2\u8003\u4e0a\u9762\u8fd9\u4e2a\u5b98\u65b9\u6587\u6863\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86 $ sudo pacman -S python-pipx","title":"\u5b89\u88c5pipx"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/#\u5b89\u88c5poetry","text":"\u68c0\u67e5pipx\u662f\u5426\u5b89\u88c5\uff0c\u5982\u679c\u5b89\u88c5\u6210\u529f $ pipx install poetry","title":"\u5b89\u88c5poetry"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/#\u8fdb\u5165\u5230\u5f53\u524d\u9879\u76ee\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\u521b\u5efa\u865a\u62df\u73af\u5883","text":"$ poetry install --no-root \u56e0\u4e3a\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u955c\u50cf\uff0c\u6240\u4ee5\u4e0b\u8f7d\u4f1a\u5f88\u5feb","title":"\u8fdb\u5165\u5230\u5f53\u524d\u9879\u76ee\uff0c\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\uff0c\u521b\u5efa\u865a\u62df\u73af\u5883"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/#\u8fdb\u5165\u5f53\u524d\u865a\u62df\u73af\u5883\u7684shell","text":"$ poetry self add poetry-plugin-shell $ poetry shell","title":"\u8fdb\u5165\u5f53\u524d\u865a\u62df\u73af\u5883\u7684shell"},{"location":"%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97/#\u542f\u52a8\u5f53\u524d\u9879\u76ee","text":"$ mkdocs serve","title":"\u542f\u52a8\u5f53\u524d\u9879\u76ee"}]}